{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/store/modules/sync.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/store/modules/sync.js","mtime":1625860077062},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IHsgaHR0cFNlcnZpY2UgfSBmcm9tICIuLi8uLi9zZXJ2aWNlcy9odHRwIjsKdmFyIHN0YXRlID0gewogIHRtZGJHZW5yZXM6IFtdLAogIGFwcFhtbHR2U3luYzogZmFsc2UsCiAgc3luY1RNREI6IGZhbHNlLAogIHN5bmNQbGF5bGlzdDogZmFsc2UsCiAgbW92aWVTZXJpZVBsYXlsaXN0czogW10sCiAgbW92aWVTZXJpZVBsYXlsaXN0OiBudWxsLAogIGNhdGNoVXBHcm91cHM6IFtdLAogIGNhdGNoVXBHcm91cDogbnVsbCwKICBjYXRjaFVwRGF5czogW10sCiAgY2F0Y2hVcERheTogbnVsbAp9Owp2YXIgZ2V0dGVycyA9IHsKICB0bWRiR2VucmVzOiBmdW5jdGlvbiB0bWRiR2VucmVzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG1kYkdlbnJlczsKICB9LAogIHRtZGJGaWx0ZXJlZEdlbnJlczogZnVuY3Rpb24gdG1kYkZpbHRlcmVkR2VucmVzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG1kYkdlbnJlcy5maWx0ZXIoZnVuY3Rpb24gKGdlbnJlKSB7CiAgICAgIHJldHVybiBbMTIsIDE0LCAxNiwgMTgsIDI3LCAyOCwgMzUsIDM2LCAzNywgNTMsIDk5LCA4NzgsIDEwNzQ5LCAxMDc2MiwgMTA3NTksIDgwLCAxMDc1MSwgOTY0OCwgMTA3NjMsIDEwNzY1LCAxMDc2NywgMTA3NjgsIDEwNzUyLCAxMDQwMl0uaW5jbHVkZXMoZ2VucmUuaWQpOwogICAgfSk7CiAgfSwKICBzeW5jVE1EQjogZnVuY3Rpb24gc3luY1RNREIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zeW5jVE1EQjsKICB9LAogIHN5bmNQbGF5bGlzdDogZnVuY3Rpb24gc3luY1BsYXlsaXN0KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc3luY1BsYXlsaXN0OwogIH0sCiAgYXBwWG1sdHZTeW5jOiBmdW5jdGlvbiBhcHBYbWx0dlN5bmMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5hcHBYbWx0dlN5bmM7CiAgfSwKICBtb3ZpZVNlcmllUGxheWxpc3RzOiBmdW5jdGlvbiBtb3ZpZVNlcmllUGxheWxpc3RzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubW92aWVTZXJpZVBsYXlsaXN0czsKICB9LAogIG1vdmllU2VyaWVQbGF5bGlzdDogZnVuY3Rpb24gbW92aWVTZXJpZVBsYXlsaXN0KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubW92aWVTZXJpZVBsYXlsaXN0OwogIH0sCiAgY2F0Y2hVcEdyb3VwczogZnVuY3Rpb24gY2F0Y2hVcEdyb3VwcyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmNhdGNoVXBHcm91cHM7CiAgfSwKICBjYXRjaFVwR3JvdXA6IGZ1bmN0aW9uIGNhdGNoVXBHcm91cChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmNhdGNoVXBHcm91cDsKICB9LAogIGNhdGNoVXBEYXlzOiBmdW5jdGlvbiBjYXRjaFVwRGF5cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmNhdGNoVXBEYXlzOwogIH0sCiAgY2F0Y2hVcERheTogZnVuY3Rpb24gY2F0Y2hVcERheShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmNhdGNoVXBEYXk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFRNREJHZW5yZXM6IGZ1bmN0aW9uIHNldFRNREJHZW5yZXMoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLnRtZGJHZW5yZXMgPSBwYXlsb2FkOwogIH0sCiAgc2V0U3luY1RNREI6IGZ1bmN0aW9uIHNldFN5bmNUTURCKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5zeW5jVE1EQiA9IHBheWxvYWQ7CiAgfSwKICBzZXRTeW5jUGxheWxpc3Q6IGZ1bmN0aW9uIHNldFN5bmNQbGF5bGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuc3luY1BsYXlsaXN0ID0gcGF5bG9hZDsKICB9LAogIHNldEFwcFhtbHR2U3luYzogZnVuY3Rpb24gc2V0QXBwWG1sdHZTeW5jKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5hcHBYbWx0dlN5bmMgPSBwYXlsb2FkOwogIH0sCiAgc2V0TW92aWVTZXJpZVBsYXlsaXN0czogZnVuY3Rpb24gc2V0TW92aWVTZXJpZVBsYXlsaXN0cyhzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUubW92aWVTZXJpZVBsYXlsaXN0cyA9IHBheWxvYWQ7CiAgfSwKICBzZXRNb3ZpZVNlcmllUGxheWxpc3Q6IGZ1bmN0aW9uIHNldE1vdmllU2VyaWVQbGF5bGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUubW92aWVTZXJpZVBsYXlsaXN0ID0gcGF5bG9hZDsKICB9LAogIHNldENhdGNoVXBHcm91cHM6IGZ1bmN0aW9uIHNldENhdGNoVXBHcm91cHMoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmNhdGNoVXBHcm91cHMgPSBwYXlsb2FkOwogIH0sCiAgc2V0Q2F0Y2hVcEdyb3VwOiBmdW5jdGlvbiBzZXRDYXRjaFVwR3JvdXAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmNhdGNoVXBHcm91cCA9IHBheWxvYWQ7CiAgfSwKICBzZXRDYXRjaFVwRGF5czogZnVuY3Rpb24gc2V0Q2F0Y2hVcERheXMoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmNhdGNoVXBEYXlzID0gcGF5bG9hZDsKICB9LAogIHNldENhdGNoVXBEYXk6IGZ1bmN0aW9uIHNldENhdGNoVXBEYXkoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmNhdGNoVXBEYXkgPSBwYXlsb2FkOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgdXBkYXRlVE1EQkdlbnJlczogZnVuY3Rpb24gdXBkYXRlVE1EQkdlbnJlcyhfcmVmLCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICBodHRwU2VydmljZS5nZXQoInRtZGIvZ2VucmVzLyIuY29uY2F0KHBheWxvYWQuc291cmNlLCAiLyIpLmNvbmNhdChwYXlsb2FkLmxhbmd1YWdlKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGlmIChyZXMuZGF0YSAmJiByZXMuZGF0YSAhPT0gbnVsbCAmJiByZXMuZGF0YS5sZW5ndGgpIHsKICAgICAgICBjb21taXQoInNldFRNREJHZW5yZXMiLCByZXMuZGF0YSk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgZ2V0U3luY1RNREI6IGZ1bmN0aW9uIGdldFN5bmNUTURCKF9yZWYyKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgaHR0cFNlcnZpY2UuZ2V0KCJwbGF5bGlzdC9zeW5jaHJvbml6ZS10bWRiIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbW1pdCgic2V0U3luY1RNREIiLCByZXMuZGF0YSk7CiAgICB9KTsKICB9LAogIGdldFN5bmNQbGF5bGlzdDogZnVuY3Rpb24gZ2V0U3luY1BsYXlsaXN0KF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgaHR0cFNlcnZpY2UuZ2V0KCJwbGF5bGlzdC9zeW5jaHJvbml6ZSIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb21taXQoInNldFN5bmNQbGF5bGlzdCIsIHJlcy5kYXRhKTsKICAgIH0pOwogIH0sCiAgZ2V0QXBwWG1sdHZTeW5jOiBmdW5jdGlvbiBnZXRBcHBYbWx0dlN5bmMoX3JlZjQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICBodHRwU2VydmljZS5nZXQoImFkbWluaXN0cmF0aW9uL3htbHR2LXN5bmMiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgY29tbWl0KCJzZXRBcHBYbWx0dlN5bmMiLCByZXMuZGF0YSk7CiAgICB9KTsKICB9LAogIHN5bmNocm9uaXplVE1EQjogZnVuY3Rpb24gc3luY2hyb25pemVUTURCKF9yZWY1LCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgaHR0cFNlcnZpY2UucG9zdCgicGxheWxpc3Qvc3luY2hyb25pemUtdG1kYiIsIHsKICAgICAgaWQ6IHBheWxvYWQKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb21taXQoInNldFN5bmNUTURCIiwgcmVzLmRhdGEpOwogICAgfSk7CiAgfSwKICBzeW5jaHJvbml6ZVBsYXlsaXN0OiBmdW5jdGlvbiBzeW5jaHJvbml6ZVBsYXlsaXN0KF9yZWY2LCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgaHR0cFNlcnZpY2UucG9zdCgicGxheWxpc3Qvc3luY2hyb25pemUiLCB7CiAgICAgIGlkOiBwYXlsb2FkCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgY29tbWl0KCJzZXRTeW5jUGxheWxpc3QiLCByZXMuZGF0YSk7CiAgICB9KTsKICB9LAogIHN5bmNYbWx0djogZnVuY3Rpb24gc3luY1htbHR2KF9yZWY3LCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgaHR0cFNlcnZpY2UucG9zdCgiYWRtaW5pc3RyYXRpb24veG1sdHYvc3luYyIsIHsKICAgICAgaWQ6IHBheWxvYWQKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb21taXQoInNldEFwcFhtbHR2U3luYyIsIHJlcy5kYXRhKTsKICAgIH0pOwogIH0sCiAgbG9hZE1vdmllU2VyaWVQbGF5bGlzdHM6IGZ1bmN0aW9uIGxvYWRNb3ZpZVNlcmllUGxheWxpc3RzKF9yZWY4LCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgaHR0cFNlcnZpY2UuZ2V0KCJwbGF5bGlzdCIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb21taXQoInNldE1vdmllU2VyaWVQbGF5bGlzdHMiLCByZXMuZGF0YS5tYXAoZnVuY3Rpb24gKHBsYXlsaXN0KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHRleHQ6IHBsYXlsaXN0Lm5hbWUsCiAgICAgICAgICB2YWx1ZTogcGxheWxpc3QuaWQsCiAgICAgICAgICBwbGF5bGlzdDogcGxheWxpc3QKICAgICAgICB9OwogICAgICB9KSk7CgogICAgICBpZiAocGF5bG9hZCAmJiBwYXlsb2FkID09PSB0cnVlICYmIHJlcy5kYXRhLmxlbmd0aCAmJiByZXMuZGF0YS5sZW5ndGggPiAwKSB7CiAgICAgICAgY29tbWl0KCJzZXRNb3ZpZVNlcmllUGxheWxpc3QiLCByZXMuZGF0YVswXS5pZCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgbG9hZENhdGNoVXBHcm91cHM6IGZ1bmN0aW9uIGxvYWRDYXRjaFVwR3JvdXBzKF9yZWY5LCBwYXlsb2FkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjkuY29tbWl0OwogICAgaHR0cFNlcnZpY2UuZ2V0KCJncm91cC9jYXRjaC11cC8iLmNvbmNhdChwYXlsb2FkKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbW1pdCgic2V0Q2F0Y2hVcEdyb3VwcyIsIHJlcy5kYXRhLm1hcChmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogZ3JvdXAuZ3JvdXBfbmFtZSwKICAgICAgICAgIHZhbHVlOiBncm91cC5pZAogICAgICAgIH07CiAgICAgIH0pKTsKCiAgICAgIGlmIChyZXMuZGF0YS5sZW5ndGggJiYgcmVzLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgIGNvbW1pdCgic2V0Q2F0Y2hVcEdyb3VwIiwgcmVzLmRhdGFbMF0uaWQpOwogICAgICB9CiAgICB9KTsKICB9LAogIGxvYWRDYXRjaFVwRGF5czogZnVuY3Rpb24gbG9hZENhdGNoVXBEYXlzKF9yZWYxMCwgcGF5bG9hZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYxMC5jb21taXQ7CiAgICBjb21taXQoInNldENhdGNoVXBEYXlzIiwgcGF5bG9hZCk7CgogICAgaWYgKHBheWxvYWQubGVuZ3RoID4gMCkgewogICAgICBjb21taXQoInNldENhdGNoVXBEYXkiLCBwYXlsb2FkWzBdLnZhbHVlKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/store/modules/sync.js"],"names":["httpService","state","tmdbGenres","appXmltvSync","syncTMDB","syncPlaylist","movieSeriePlaylists","movieSeriePlaylist","catchUpGroups","catchUpGroup","catchUpDays","catchUpDay","getters","tmdbFilteredGenres","filter","genre","includes","id","mutations","setTMDBGenres","payload","setSyncTMDB","setSyncPlaylist","setAppXmltvSync","setMovieSeriePlaylists","setMovieSeriePlaylist","setCatchUpGroups","setCatchUpGroup","setCatchUpDays","setCatchUpDay","actions","updateTMDBGenres","commit","get","source","language","then","res","data","length","getSyncTMDB","getSyncPlaylist","getAppXmltvSync","synchronizeTMDB","post","synchronizePlaylist","syncXmltv","loadMovieSeriePlaylists","map","playlist","text","name","value","loadCatchUpGroups","group","group_name","loadCatchUpDays"],"mappings":"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","sourcesContent":["import { httpService } from \"../../services/http\";\n\nconst state = {\n  tmdbGenres: [],\n  appXmltvSync: false,\n  syncTMDB: false,\n  syncPlaylist: false,\n  movieSeriePlaylists: [],\n  movieSeriePlaylist: null,\n  catchUpGroups: [],\n  catchUpGroup: null,\n  catchUpDays: [],\n  catchUpDay: null,\n};\n\nconst getters = {\n  tmdbGenres(state) {\n    return state.tmdbGenres;\n  },\n  tmdbFilteredGenres(state) {\n    return state.tmdbGenres.filter((genre) => {\n      return [\n        12, 14, 16, 18, 27, 28, 35, 36, 37, 53, 99, 878, 10749, 10762, 10759,\n        80, 10751, 9648, 10763, 10765, 10767, 10768, 10752, 10402,\n      ].includes(genre.id);\n    });\n  },\n  syncTMDB(state) {\n    return state.syncTMDB;\n  },\n  syncPlaylist(state) {\n    return state.syncPlaylist;\n  },\n  appXmltvSync(state) {\n    return state.appXmltvSync;\n  },\n  movieSeriePlaylists(state) {\n    return state.movieSeriePlaylists;\n  },\n  movieSeriePlaylist(state) {\n    return state.movieSeriePlaylist;\n  },\n  catchUpGroups(state) {\n    return state.catchUpGroups;\n  },\n  catchUpGroup(state) {\n    return state.catchUpGroup;\n  },\n  catchUpDays(state) {\n    return state.catchUpDays;\n  },\n  catchUpDay(state) {\n    return state.catchUpDay;\n  }\n};\n\nconst mutations = {\n  setTMDBGenres(state, payload) {\n    state.tmdbGenres = payload;\n  },\n  setSyncTMDB(state, payload) {\n    state.syncTMDB = payload;\n  },\n  setSyncPlaylist(state, payload) {\n    state.syncPlaylist = payload;\n  },\n  setAppXmltvSync(state, payload) {\n    state.appXmltvSync = payload;\n  },\n  setMovieSeriePlaylists(state, payload) {\n    state.movieSeriePlaylists = payload;\n  },\n  setMovieSeriePlaylist(state, payload) {\n    state.movieSeriePlaylist = payload;\n  },\n  setCatchUpGroups(state, payload) {\n    state.catchUpGroups = payload;\n  },\n  setCatchUpGroup(state, payload) {\n    state.catchUpGroup = payload;\n  },\n  setCatchUpDays(state, payload) {\n    state.catchUpDays = payload;\n  },\n  setCatchUpDay(state, payload) {\n    state.catchUpDay = payload;\n  }\n};\n\nconst actions = {\n  updateTMDBGenres({ commit }, payload) {\n    httpService\n      .get(`tmdb/genres/${payload.source}/${payload.language}`)\n      .then((res) => {\n        if (res.data && res.data !== null && res.data.length) {\n          commit(\"setTMDBGenres\", res.data);\n        }\n      });\n  },\n  getSyncTMDB({ commit }) {\n    httpService.get(\"playlist/synchronize-tmdb\").then((res) => {\n      commit(\"setSyncTMDB\", res.data);\n    });\n  },\n  getSyncPlaylist({ commit }) {\n    httpService.get(\"playlist/synchronize\").then((res) => {\n      commit(\"setSyncPlaylist\", res.data);\n    });\n  },\n  getAppXmltvSync({ commit }) {\n    httpService.get(\"administration/xmltv-sync\").then((res) => {\n      commit(\"setAppXmltvSync\", res.data);\n    });\n  },\n  synchronizeTMDB({ commit }, payload) {\n    httpService\n      .post(\"playlist/synchronize-tmdb\", {\n        id: payload,\n      })\n      .then((res) => {\n        commit(\"setSyncTMDB\", res.data);\n      });\n  },\n  synchronizePlaylist({ commit }, payload) {\n    httpService\n      .post(\"playlist/synchronize\", {\n        id: payload,\n      })\n      .then((res) => {\n        commit(\"setSyncPlaylist\", res.data);\n      });\n  },\n  syncXmltv({ commit }, payload) {\n    httpService\n      .post(\"administration/xmltv/sync\", {\n        id: payload,\n      })\n      .then((res) => {\n        commit(\"setAppXmltvSync\", res.data);\n      });\n  },\n  loadMovieSeriePlaylists({ commit }, payload) {\n    httpService.get(\"playlist\").then((res) => {\n      commit(\n        \"setMovieSeriePlaylists\",\n        res.data.map((playlist) => {\n          return {\n            text: playlist.name,\n            value: playlist.id,\n            playlist: playlist\n          };\n        })\n      );\n      if (\n        payload &&\n        payload === true &&\n        res.data.length &&\n        res.data.length > 0\n      ) {\n        commit(\"setMovieSeriePlaylist\", res.data[0].id);\n      }\n    });\n  },\n  loadCatchUpGroups({ commit }, payload) {\n    httpService.get(`group/catch-up/${payload}`).then((res) => {\n      commit(\n        \"setCatchUpGroups\",\n        res.data.map((group) => {\n          return {\n            text: group.group_name,\n            value: group.id,\n          };\n        })\n      );\n      if (\n        res.data.length &&\n        res.data.length > 0\n      ) {\n        commit(\"setCatchUpGroup\", res.data[0].id);\n      }\n    });\n  },\n  loadCatchUpDays({ commit }, payload) {\n    commit(\"setCatchUpDays\", payload);\n    if (payload.length > 0) {\n      commit(\"setCatchUpDay\", payload[0].value);\n    }\n  }\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions,\n};\n"]}]}