{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/series/browse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/series/browse.vue","mtime":1625149971090},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["browse.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <!--  \n\n      XD-PRO DOWNLOAD\n\n    -->\n    <erd-modal\n      v-show=\"xdPro.modal\"\n      @close=\"downloadModal(false)\"\n      :title=\"$t('xd-pro.xd-pro')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"xd-pro.xd-pro-instance\") }}</label>\n        <erd-select\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xdPro.xdpro_id\"\n          :items=\"xdProInstanceItems\"\n        ></erd-select>\n        <label class=\"w-100\">{{ $t(\"xd-pro.download-folder\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xdPro.download_folder\"\n        ></erd-input>\n        <label class=\"w-100 mb-2\">{{ $t(\"xd-pro.select-episodes\") }}</label>\n        <div class=\"radiobrowser-stations\">\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              v-for=\"(episode, index) in viewerEpisodes\"\n              :key=\"`xdpro-episode-${index}`\"\n              :class=\"{ selected: xdPro.downloads.includes(index) }\"\n              @click.ctrl=\"toggleDownloadsSelection(index)\"\n              @click.shift=\"selectDownloadsRangeSelection(index)\"\n              @click.exact=\"selectDownloadsSelection(index)\"\n            >\n              <span class=\"station-name mr-2\">{{\n                $t(\"xd-pro.season-episode\").format(\n                  episode.serie_season,\n                  episode.serie_episode\n                )\n              }}</span>\n              <span class=\"station-name text-muted\">{{\n                episode.tmdb.name\n              }}</span>\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"downloadModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          :disabled=\"xdPro.xdpro_id == 0 || xdPro.downloads.length == 0\"\n          @click=\"downloadModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <erd-spinner\n      v-if=\"isLoading\"\n      :text=\"loadingText\"\n      size=\"lg\"\n      overlay\n      absolute\n    ></erd-spinner>\n    <erd-col xl=\"12\" class=\"m-0 p-0\" v-if=\"viewer\" id=\"series\">\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"4\" md=\"4\">\n          <erd-card class=\"movie-details-poster\">\n            <img\n              class=\"poster\"\n              :src=\"`https://www.themoviedb.org/t/p/original/${viewerSeries.tmdb.poster_path}`\"\n            />\n            <erd-card-body>\n              <h3 class=\"mt-0 mb-1\">\n                {{ viewerSeries.tmdb.title }}\n                <span class=\"float-right\"\n                  ><span class=\"color-theme-1\">{{\n                    viewerSeries.tmdb.vote_average\n                  }}</span\n                  ><span>/10</span></span\n                >\n              </h3>\n              <div class=\"genres\">\n                <span\n                  class=\"genre\"\n                  v-for=\"(genre, index) in viewerSeries.tmdb.genres\"\n                  :key=\"`genre-${viewerSeries.tmdb.title}-${index}`\"\n                  >{{ genre.name }}</span\n                >\n              </div>\n              <p class=\"color-theme-1 mt-1\">\n                {{ formatDate(viewerSeries.tmdb.first_air_date) }}\n              </p>\n              <p>{{ viewerSeries.tmdb.overview }}</p>\n              <a\n                class=\"d-block mt-2 text-truncate\"\n                :href=\"viewerSeries.tmdb.homepage\"\n                target=\"_blank\"\n                v-if=\"viewerSeries.tmdb.homepage.length\"\n                >{{ viewerSeries.tmdb.homepage }}</a\n              >\n              <a\n                class=\"d-block text-truncate\"\n                :href=\"`https://www.themoviedb.org/tv/${viewerSeries.tmdb_id}`\"\n                target=\"_blank\"\n                >{{\n                  `https://www.themoviedb.org/tv/${viewerSeries.tmdb_id}`\n                }}</a\n              >\n              <erd-button\n                dense\n                class=\"my-3\"\n                icon=\"la-download\"\n                @click=\"downloadModal(true)\"\n                v-if=\"canDownload\"\n                >{{ $t(\"movies.download\") }}</erd-button\n              >\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"8\" md=\"8\" class=\"m-0 p-0\">\n          <erd-row class=\"m-0 p-0\">\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"filteredVideos.length\">\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"series.videos-trailers\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"6\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(video, index) in filteredVideos\"\n                  :key=\"`video-${index}`\"\n                >\n                  <div class=\"video-card\">\n                    <vue-plyr>\n                      <div\n                        data-plyr-provider=\"youtube\"\n                        :data-plyr-embed-id=\"video.key\"\n                      ></div>\n                    </vue-plyr>\n                  </div>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col\n              class=\"px-0 mx-0\"\n              xl=\"12\"\n              v-for=\"(season, index) in seasonsInSeries\"\n              :key=\"`season-${index}`\"\n            >\n              <h5 class=\"my-0 ml-3\">\n                {{ $t(\"series.season\").format(season) }}\n              </h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"6\"\n                  xs=\"6\"\n                  v-for=\"(episode, eindex) in episodesInSeason(season)\"\n                  :key=\"`season-${index}-episode-${eindex}`\"\n                >\n                  <erd-card class=\"movie-view-card\">\n                    <vue-plyr>\n                      <video\n                        controls\n                        playsinline\n                        :data-poster=\"`https://www.themoviedb.org/t/p/original/${episode.tmdb.still_path}`\"\n                      >\n                        <source\n                          :src=\"episodeURL(episode)\"\n                          :type=\"episodeVideoType(episode)\"\n                        />\n                      </video>\n                    </vue-plyr>\n\n                    <erd-card-body>\n                      <p class=\"py-0 my-0 color-theme-1\">\n                        {{ episode.tmdb.name }}\n                      </p>\n                      <p class=\"py-0 my-0 text-muted\">\n                        {{ episode.tmdb.overview }}\n                      </p>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col\n              xl=\"12\"\n              class=\"p-0 m-0\"\n              v-if=\"filteredCast && filteredCast.length\"\n            >\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"series.main-characters\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"3\"\n                  md=\"4\"\n                  sm=\"6\"\n                  v-for=\"(cast, index) in filteredCast\"\n                  :key=\"`cast-${index}`\"\n                >\n                  <erd-card class=\"cast-card\">\n                    <img\n                      class=\"profile\"\n                      :src=\"`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`\"\n                    />\n                    <erd-card-body class=\"py-1\">\n                      <p>\n                        <span class=\"color-theme-1\">{{ cast.character }}</span\n                        ><br /><span class=\"text-small text-muted\">{{\n                          cast.name\n                        }}</span>\n                      </p>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"viewerSimilar.length\">\n              <h5 class=\"mt-3 mb-0 ml-3\">{{ $t(\"series.similar-series\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"4\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(series, index) in filteredSimilar\"\n                  :key=\"`movie-${index}`\"\n                >\n                  <erd-card class=\"movie-card depth-2\">\n                    <div class=\"poster\">\n                      <img\n                        class=\"movie-poster\"\n                        :src=\"`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${series.poster_path}`\"\n                      />\n                      <span class=\"score\">{{ series.vote_average }}</span>\n                    </div>\n                    <erd-card-body class=\"py-3\">\n                      <h5 class=\"m-0\">{{ series.name }}</h5>\n                      <p class=\"m-0 text-muted text-small\">\n                        {{ formatDate(series.first_air_date) }}\n                      </p>\n                      <div class=\"genres mt-2\">\n                        <span\n                          class=\"genre\"\n                          v-for=\"(genre, index) in series.genres\"\n                          :key=\"`genre-${series.name}-${index}`\"\n                          >{{ genre.name }}</span\n                        >\n                      </div>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n          </erd-row>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n    <erd-row class=\"m-0 p-0\" v-else id=\"series\">\n      <erd-col xl=\"12\" xs=\"12\">\n        <erd-genre-select\n          :genres=\"tmdbFilteredGenres\"\n          v-model=\"genre\"\n        ></erd-genre-select>\n      </erd-col>\n      <erd-col xl=\"12\" xs=\"12\" v-if=\"filteredSeries.length === 0\">\n        <p class=\"text-center text-muted\">\n          {{ $t(\"series.no-series\") }}\n        </p>\n      </erd-col>\n      <erd-col\n        xl=\"3\"\n        lg=\"4\"\n        md=\"6\"\n        xs=\"12\"\n        v-for=\"(series, index) in pagedSeries\"\n        :key=\"`serie-${series.tmdb_id}-${index}`\"\n      >\n        <erd-card class=\"movie-card depth-2\">\n          <div class=\"poster\">\n            <button class=\"more-button\" @click=\"viewDetails(series)\">\n              <erd-tooltip :tooltip=\"$t('series.tooltip-show-more')\" :enabled=\"showTooltips\">\n                <i class=\"las la-ellipsis-h\"></i>\n              </erd-tooltip>\n            </button>\n            <img\n              class=\"movie-poster\"\n              :src=\"\n                series.tmdb.poster_path && series.tmdb.poster_path.length\n                  ? `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${series.tmdb.poster_path}`\n                  : series.icon\n              \"\n            />\n            <span class=\"score\">{{ series.tmdb.vote_average }}</span>\n          </div>\n          <erd-card-body class=\"py-3\">\n            <h5 class=\"m-0\">\n              <erd-tooltip :tooltip=\"$t('series.tooltip-show-more')\" :enabled=\"showTooltips\">\n                <a href=\"#\" @click.prevent=\"viewDetails(series)\">{{\n                  series.tmdb.name\n                }}</a>\n              </erd-tooltip>\n            </h5>\n            <p class=\"m-0 text-muted text-small\">\n              <span>{{\n                $t(\"series.episodes-seasons\").format(\n                  series.seasons,\n                  series.episodes\n                )\n              }}</span>\n            </p>\n            <div class=\"genres mt-2\">\n              <span\n                class=\"genre\"\n                v-for=\"(genre, index) in series.tmdb.genres\"\n                :key=\"`genre-${series.tmdb_id}-${index}`\"\n                >{{ genre.name }}</span\n              >\n            </div>\n          </erd-card-body>\n        </erd-card>\n      </erd-col>\n    </erd-row>\n    <b-pagination\n      v-if=\"!viewer\"\n      class=\"w-100 my-3\"\n      size=\"sm\"\n      align=\"center\"\n      :total-rows=\"total\"\n      :per-page=\"perPage\"\n      v-model=\"currentPage\"\n    >\n      <template v-slot:next-text>\n        <i class=\"las la-angle-right\" />\n      </template>\n      <template v-slot:prev-text>\n        <i class=\"las la-angle-left\" />\n      </template>\n      <template v-slot:first-text>\n        <i class=\"las la-angle-double-left\" />\n      </template>\n      <template v-slot:last-text>\n        <i class=\"las la-angle-double-right\" />\n      </template>\n    </b-pagination>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      viewerSeries: null,\n      viewerCredits: [],\n      viewerKeywords: [],\n      viewerSimilar: [],\n      viewerVideos: [],\n      viewerEpisodes: [],\n      viewerSeasons: [],\n      viewerGroup: \"\",\n      viewerPlaylist: \"\",\n      viewer: false,\n      search: null,\n      isLoading: false,\n      loadingText: \"\",\n      series: [],\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 0,\n      genre: 10759,\n      xdPro: {\n        modal: false,\n        xdpro_id: 0,\n        download_folder: \"\",\n        downloads: [],\n      },\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"tmdbGenres\",\n      \"tmdbFilteredGenres\",\n      \"settings\",\n      \"currentUser\",\n      \"movieSeriePlaylist\",\n      \"xdProInstances\",\n    ]),\n    showTooltips () {\n      return this.settings.showTooltips;\n    },\n    canDownload() {\n      return this.xdProInstances && this.xdProInstances.length > 0;\n    },\n    tmdbSeries() {\n      return this.series.filter((series) => {\n        return series.tmdb_id;\n      });\n    },\n    filteredByGenre() {\n      let currentGenre = this.genre;\n      return this.tmdbSeries.filter((serie) => {\n        return serie.tmdb && serie.tmdb.genres\n          ? serie.tmdb.genres.findIndex((genre) => {\n              return genre.id === currentGenre;\n            }) > -1\n          : false;\n      });\n    },\n    filteredSeries() {\n      if (this.search === null) {\n        return this.filteredByGenre;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.filteredByGenre.filter((series) => {\n          return (\n            String(series.tmdb.name).match(re) ||\n            String(series.tmdb.original_name).match(re) ||\n            String(series.tmdb_id).match(re) ||\n            String(series.tmdb.overview).match(re) ||\n            this.formatDate(series.tmdb.release_date).match(re)\n          );\n        });\n      }\n    },\n    filteredCast() {\n      return this.viewerCredits\n        .filter((cast) => {\n          return cast.profile_path && cast.profile_path.length;\n        })\n        .slice(0, 8);\n    },\n    filteredSimilar() {\n      return this.viewerSimilar.slice(0, 6);\n    },\n    filteredVideos() {\n      return this.viewerVideos.slice(0, 2);\n    },\n    seasonsInSeries() {\n      let seasons = 0;\n      this.viewerEpisodes.map((e) => {\n        if (e.serie_season > seasons) {\n          seasons = e.serie_season;\n        }\n      });\n      return seasons;\n    },\n    perPage() {\n      return this.settings.perPage;\n    },\n    pagedSeries() {\n      this.total = this.filteredSeries.length;\n      this.from = (this.currentPage - 1) * this.perPage || 0;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.filteredSeries.slice(this.from, this.to);\n    },\n    xdProInstanceItems() {\n      return this.xdProInstances.map((instance) => {\n        return {\n          text: instance.name,\n          value: instance.id,\n        };\n      });\n    },\n  },\n  methods: {\n    ...mapActions([\"updateTMDBGenres\", \"addxdProDownload\"]),\n    closeViewer() {\n      this.viewer = false;\n    },\n    viewDetails(series) {\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      this.viewerCredits = [];\n      this.viewerKeywords = [];\n      this.viewerSimilar = [];\n      this.viewerVideos = [];\n      this.viewerEpisodes = [];\n      this.viewerSeries = series;\n      this.viewerGroup = \"\";\n      this.viewerPlaylist = \"\";\n      this.loadSeriesDetails();\n      this.viewer = true;\n    },\n    allProgress(proms, progress_cb) {\n      let d = 0;\n      progress_cb(0);\n      for (const p of proms) {\n        p.then(() => {\n          d++;\n          progress_cb((d * 100) / proms.length);\n        });\n      }\n      return Promise.all(proms);\n    },\n    loadSeries() {\n      this.isLoading = true;\n      httpService.get(`serie/total/${this.movieSeriePlaylist}`).then((res) => {\n        if (res.status === true) {\n          let requests = [];\n          for (var i = 0; i < res.data; i += 50) {\n            requests.push(\n              httpService.get(`serie/browse/${this.movieSeriePlaylist}/${i}/50`)\n            );\n          }\n          this.allProgress(requests, (p) => {\n            this.loadingText = this.$t(\"series.browse-loading\").format(\n              Math.round(p)\n            );\n          }).then((res) => {\n            let series = [];\n            res.forEach((result) => {\n              if (result.status === true) {\n                series = [...series, ...result.data];\n              }\n            });\n            series.sort((a, b) => {\n              return (\n                new Date(b.tmdb.first_air_date) -\n                new Date(a.tmdb.first_air_date)\n              );\n            });\n            this.series = series;\n            this.isLoading = false;\n          });\n        }\n      });\n    },\n    loadSeriesDetails() {\n      this.isLoading = true;\n      this.loadingText = \"\";\n      httpService\n        .get(\n          `serie/details/${this.movieSeriePlaylist}/${this.viewerSeries.tmdb_id}`\n        )\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.viewerCredits = res.data.credits.cast;\n            this.viewerKeywords = res.data.keywords;\n            this.viewerSimilar = res.data.similar;\n            this.viewerVideos = res.data.videos;\n            this.viewerGroup = res.data.group;\n            this.viewerPlaylist = res.data.playlist;\n            this.viewerEpisodes = res.data.episodes;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    pagePrint() {\n      document.getElementById(\"series\").print();\n    },\n    searchSeries(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n    downloadEpisode(url) {\n      var link = document.createElement(\"a\");\n      link.href = url;\n      link.target = \"_blank\";\n      link.click();\n    },\n    episodesInSeason(season) {\n      return this.viewerEpisodes.filter((episode) => {\n        return episode.serie_season === season;\n      });\n    },\n    episodeURL(episode) {\n      return episode.source_stream_url && episode.source_stream_url.length\n        ? episode.source_stream_url\n        : episode.xtream_url;\n    },\n    episodeVideoType(episode) {\n      if (episode.source_container_extension.toLowerCase() == \"mkv\") {\n        return \"video/webm\";\n      } else {\n        return \"video/mp4\";\n      }\n    },\n    formatDownloadFolder(folder) {\n      return this.xdPro.download_folder.slice(-1) == \"/\"\n        ? `${this.xdPro.download_folder}${folder}`\n        : `${this.xdPro.download_folder}/${folder}`;\n    },\n    downloadModal(show, save = false) {\n      if (show) {\n        this.xdPro.downloads.length = 0;\n      }\n      if (save) {\n        let downloads = [];\n        this.xdPro.downloads.map((index) => {\n          const episode = this.viewerEpisodes[index];\n          const year = new Date(\n            this.viewerSeries.tmdb.first_air_date\n          ).getFullYear();\n          let download = {\n            user_id: this.currentUser.user.id,\n            xdpro_id: this.xdPro.xdpro_id,\n            filename: `${\n              this.viewerSeries.tmdb.original_name\n            } (${year}) S${String(episode.serie_season).padStart(\n              2,\n              \"0\"\n            )}E${String(episode.serie_episode).padStart(2, \"0\")}.${\n              episode.source_container_extension\n            }`,\n            file_extension: episode.source_container_extension,\n            type: 2,\n            enabled: 0,\n            download_folder: this.formatDownloadFolder(\n              `${this.viewerSeries.tmdb.original_name} (${year})/Season ${episode.serie_season}/`\n            ),\n          };\n          if (episode.source_stream_url && episode.source_stream_url.length) {\n            download.download_url = episode.source_stream_url;\n            download.download_host = \"\";\n            download.download_port = \"\";\n            download.download_username = \"\";\n            download.download_password = \"\";\n          } else {\n            download.download_url = episode.xtream_url;\n            let u = new URL(episode.xtream_url);\n            download.download_host = u.hostname;\n            download.download_port = u.port;\n            let p = u.pathname.split(\"/\");\n            download.download_username = p[2];\n            download.download_password = p[3];\n          }\n          downloads.push(download);\n        });\n        this.addxdProDownload(downloads)\n          .then((res) => {\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xd-pro.download-save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          })\n          .catch(() => {\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xd-pro.download-save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n      this.xdPro.modal = show;\n    },\n    toggleDownloadsSelection(item) {\n      let idx = this.xdPro.downloads.indexOf(item);\n      if (idx !== -1) {\n        this.xdPro.downloads.splice(idx, 1);\n      } else {\n        this.xdPro.downloads.push(item);\n      }\n    },\n    selectDownloadsRangeSelection(index) {\n      const lastIndex = this.xdPro.downloads[this.xdPro.downloads.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.xdPro.downloads.includes(i)) {\n          this.xdPro.downloads.push(i);\n        }\n      }\n    },\n    selectDownloadsSelection(item) {\n      this.xdPro.downloads.length = 0;\n      this.xdPro.downloads.push(item);\n    },\n  },\n  beforeMount() {\n    this.updateTMDBGenres({ source: \"tv\", language: this.$t(\"date.tmdb\") });\n    EventBus.$on(\"print\", this.pagePrint);\n    EventBus.$on(\"search\", this.searchSeries);\n    EventBus.$on(\"close-viewer\", this.closeViewer);\n    this.loadSeries();\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.pagePrint);\n    EventBus.$off(\"search\", this.searchSeries);\n    EventBus.$off(\"close-viewer\", this.closeViewer);\n  },\n  watch: {\n    viewer: function (val) {\n      EventBus.$emit(\"update-viewer\", val);\n    },\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    \"xdPro.xdpro_id\": function (val) {\n      let instance = this.xdProInstances.find((instance) => {\n        return instance.id == val;\n      });\n      if (instance) {\n        this.xdPro.download_folder = instance.download_folder;\n      }\n    },\n    movieSeriePlaylist: function () {\n      this.loadSeries();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.radiobrowser-stations {\n  overflow: hidden;\n\n  .ps {\n    max-height: 300px;\n    padding-top: 0.25rem;\n    padding-bottom: 0.5rem;\n  }\n\n  .radiobrowser-station {\n    margin-top: 0.1rem;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n\n    &:focus,\n    &:focus-within {\n      &.selected {\n        background-color: $theme-color-1 !important;\n\n        a,\n        i,\n        span {\n          color: $button-text-color !important;\n        }\n      }\n\n      &.active {\n        border-color: rgba($theme-color-1, 0.6) !important;\n\n        a,\n        span {\n          font-weight: bold;\n        }\n        a,\n        i,\n        span {\n          color: $theme-color-1;\n        }\n      }\n    }\n\n    &.selected {\n      background-color: $theme-color-1 !important;\n      &.success {\n        background-color: $success-color !important;\n      }\n      &.danger {\n        background-color: $error-color !important;\n      }\n      &.info {\n        background-color: $info-color !important;\n      }\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/app/series"}]}