{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/router/auth.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/router/auth.js","mtime":1625666246766},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgeyBzZXRDdXJyZW50VXNlciwgZ2V0Q3VycmVudFVzZXIgfSBmcm9tICIuLi9oZWxwZXJzIjsKaW1wb3J0IHsgQXV0aEd1YXJkQWN0aXZlIH0gZnJvbSAiLi4vY29uc3RhbnRzL2NvbmZpZyI7Ci8qCgogIFJvdXRlciBhdXRoZW50aWNhdG9yIC0gdXNlZCBvbiBub24gcHVibGljIHJvdXRlcwoKKi8KCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBpZiAodG8ubWF0Y2hlZC5zb21lKGZ1bmN0aW9uIChyZWNvcmQpIHsKICAgIHJldHVybiByZWNvcmQubWV0YS5yZXF1aXJlc0F1dGggPT09IHRydWU7CiAgfSkpIHsKICAgIGlmIChBdXRoR3VhcmRBY3RpdmUpIHsKICAgICAgdmFyIHVzZXIgPSBnZXRDdXJyZW50VXNlcigpOwoKICAgICAgaWYgKHVzZXIpIHsKICAgICAgICB2YXIgcmVxdWlyZWRSb2xlcyA9IHRvLm1hdGNoZWQuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4geC5tZXRhLnJvbGVzOwogICAgICAgIH0pLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgcmV0dXJuIHgubWV0YS5yb2xlczsKICAgICAgICB9KTsKICAgICAgICB2YXIgcmVxdWlyZWRTdWJzY3JpcHRpb25zID0gdG8ubWF0Y2hlZC5maWx0ZXIoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgIHJldHVybiB4Lm1ldGEuc3Vic2NyaXB0aW9uczsKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgIHJldHVybiB4Lm1ldGEuc3Vic2NyaXB0aW9uczsKICAgICAgICB9KTsKICAgICAgICB2YXIgcGxheWxpc3RUeXBlcyA9IHRvLm1hdGNoZWQuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4geC5tZXRhLnBsYXlsaXN0VHlwZTsKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgIHJldHVybiB4Lm1ldGEucGxheWxpc3RUeXBlOwogICAgICAgIH0pOwoKICAgICAgICBpZiAocmVxdWlyZWRSb2xlcy5ldmVyeShmdW5jdGlvbiAoeCkgewogICAgICAgICAgcmV0dXJuIHguaW5jbHVkZXModXNlci51c2VyLnJvbGUpOwogICAgICAgIH0pICYmIHJlcXVpcmVkU3Vic2NyaXB0aW9ucy5sZW5ndGggJiYgdXNlci5zdWJzY3JpcHRpb24gPyByZXF1aXJlZFN1YnNjcmlwdGlvbnMuZXZlcnkoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgIHJldHVybiB4LmluY2x1ZGVzKHVzZXIuc3Vic2NyaXB0aW9uLnN1YnNjcmlwdGlvbl90eXBlKTsKICAgICAgICB9KSA6IHRydWUgJiYgcGxheWxpc3RUeXBlcy5sZW5ndGggJiYgdXNlci5zdWJzY3JpcHRpb24gPyBwbGF5bGlzdFR5cGVzLmV2ZXJ5KGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4geC5pbmNsdWRlcyh1c2VyLnN1YnNjcmlwdGlvbi5wbGF5bGlzdF90eXBlKTsKICAgICAgICB9KSA6IHRydWUpIHsKICAgICAgICAgIG5leHQoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbmV4dCgiL3VuYXV0aG9yaXplZCIpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBzZXRDdXJyZW50VXNlcihudWxsKTsKICAgICAgICBuZXh0KCIvdXNlci9sb2dpbiIpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfSBlbHNlIHsKICAgIG5leHQoKTsKICB9Cn0pOw=="},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/router/auth.js"],"names":["setCurrentUser","getCurrentUser","AuthGuardActive","to","from","next","matched","some","record","meta","requiresAuth","user","requiredRoles","filter","x","roles","map","requiredSubscriptions","subscriptions","playlistTypes","playlistType","every","includes","role","length","subscription","subscription_type","playlist_type"],"mappings":";;;;AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA;AACA;AACA;AACA;AACA;;AACA,gBAAe,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACjC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAYC,YAAZ,KAA6B,IAAzC;AAAA,GAAhB,CAAJ,EAAoE;AAClE,QAAIR,eAAJ,EAAqB;AACnB,UAAMS,IAAI,GAAGV,cAAc,EAA3B;;AACA,UAAIU,IAAJ,EAAU;AACR,YAAMC,aAAa,GAAGT,EAAE,CAACG,OAAH,CACnBO,MADmB,CACZ,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOM,KAAd;AAAA,SADY,EAEnBC,GAFmB,CAEf,UAACF,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOM,KAAd;AAAA,SAFe,CAAtB;AAGA,YAAME,qBAAqB,GAAGd,EAAE,CAACG,OAAH,CAC3BO,MAD2B,CACpB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOS,aAAd;AAAA,SADoB,EAE3BF,GAF2B,CAEvB,UAACF,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOS,aAAd;AAAA,SAFuB,CAA9B;AAGA,YAAMC,aAAa,GAAGhB,EAAE,CAACG,OAAH,CACnBO,MADmB,CACZ,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOW,YAAd;AAAA,SADY,EAEnBJ,GAFmB,CAEf,UAACF,CAAD;AAAA,iBAAOA,CAAC,CAACL,IAAF,CAAOW,YAAd;AAAA,SAFe,CAAtB;;AAGA,YACER,aAAa,CAACS,KAAd,CAAoB,UAACP,CAAD;AAAA,iBAAOA,CAAC,CAACQ,QAAF,CAAWX,IAAI,CAACA,IAAL,CAAUY,IAArB,CAAP;AAAA,SAApB,KACAN,qBAAqB,CAACO,MADtB,IAEAb,IAAI,CAACc,YAFL,GAGIR,qBAAqB,CAACI,KAAtB,CAA4B,UAACP,CAAD;AAAA,iBAC1BA,CAAC,CAACQ,QAAF,CAAWX,IAAI,CAACc,YAAL,CAAkBC,iBAA7B,CAD0B;AAAA,SAA5B,CAHJ,GAMI,QAAQP,aAAa,CAACK,MAAtB,IAAgCb,IAAI,CAACc,YAArC,GACAN,aAAa,CAACE,KAAd,CAAoB,UAACP,CAAD;AAAA,iBAClBA,CAAC,CAACQ,QAAF,CAAWX,IAAI,CAACc,YAAL,CAAkBE,aAA7B,CADkB;AAAA,SAApB,CADA,GAIA,IAXN,EAYE;AACAtB,UAAAA,IAAI;AACL,SAdD,MAcO;AACLA,UAAAA,IAAI,CAAC,eAAD,CAAJ;AACD;AACF,OA3BD,MA2BO;AACLL,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAK,QAAAA,IAAI,CAAC,aAAD,CAAJ;AACD;AACF,KAjCD,MAiCO;AACLA,MAAAA,IAAI;AACL;AACF,GArCD,MAqCO;AACLA,IAAAA,IAAI;AACL;AACF,CAzCD","sourcesContent":["import { setCurrentUser, getCurrentUser } from \"../helpers\";\nimport { AuthGuardActive } from \"../constants/config\";\n\n/*\n\n  Router authenticator - used on non public routes\n\n*/\nexport default (to, from, next) => {\n  if (to.matched.some((record) => record.meta.requiresAuth === true)) {\n    if (AuthGuardActive) {\n      const user = getCurrentUser();\n      if (user) {\n        const requiredRoles = to.matched\n          .filter((x) => x.meta.roles)\n          .map((x) => x.meta.roles);\n        const requiredSubscriptions = to.matched\n          .filter((x) => x.meta.subscriptions)\n          .map((x) => x.meta.subscriptions);\n        const playlistTypes = to.matched\n          .filter((x) => x.meta.playlistType)\n          .map((x) => x.meta.playlistType);\n        if (\n          requiredRoles.every((x) => x.includes(user.user.role)) &&\n          requiredSubscriptions.length &&\n          user.subscription\n            ? requiredSubscriptions.every((x) =>\n                x.includes(user.subscription.subscription_type)\n              )\n            : true && playlistTypes.length && user.subscription\n            ? playlistTypes.every((x) =>\n                x.includes(user.subscription.playlist_type)\n              )\n            : true\n        ) {\n          next();\n        } else {\n          next(\"/unauthorized\");\n        }\n      } else {\n        setCurrentUser(null);\n        next(\"/user/login\");\n      }\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n};\n"]}]}