{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/m3u/playlists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/m3u/playlists.vue","mtime":1627751995245},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbWVkaWEvZXJuc3QvNjNiY2U0M2MtNWU1MS00YmYxLWE2MTEtM2FmZGYzMmFjNmY2L1Z1ZUpTL0lQVFYtVG9vbHMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21lZGlhL2VybnN0LzYzYmNlNDNjLTVlNTEtNGJmMS1hNjExLTNhZmRmMzJhYzZmNi9WdWVKUy9JUFRWLVRvb2xzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyogZXNsaW50LWRpc2FibGUgdnVlL25vLXNpZGUtZWZmZWN0cy1pbi1jb21wdXRlZC1wcm9wZXJ0aWVzICovCmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiLi4vLi4vLi4vc2VydmljZXMvZWJ1cyI7CmltcG9ydCB7IGh0dHBTZXJ2aWNlIH0gZnJvbSAiLi4vLi4vLi4vc2VydmljZXMvaHR0cCI7CmltcG9ydCB7IGxhbmd1YWdlcyB9IGZyb20gIi4uLy4uLy4uL2hlbHBlcnMiOwppbXBvcnQgeyBVc2VyUm9sZSwgU3Vic2NyaXB0aW9uVHlwZSB9IGZyb20gIi4uLy4uLy4uL2NvbnN0YW50cy9jb25maWciOwppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0ZU9wdGlvbnM6IHsKICAgICAgICBkYXk6ICIyLWRpZ2l0IiwKICAgICAgICBtb250aDogIm51bWVyaWMiLAogICAgICAgIHllYXI6ICJudW1lcmljIgogICAgICB9LAogICAgICBsYW5ndWFnZXM6IGxhbmd1YWdlcywKICAgICAgYWN0aXZlVGFiOiAwLAogICAgICBwbGF5bGlzdEdyb3VwczogewogICAgICAgIGxpdmU6IFtdLAogICAgICAgIG1vdmllczogW10sCiAgICAgICAgc2VyaWVzOiBbXQogICAgICB9LAogICAgICBwbGF5bGlzdEluZm86IHsKICAgICAgICBtb2RhbDogZmFsc2UsCiAgICAgICAgdXNlcm5hbWU6ICIiLAogICAgICAgIHBhc3N3b3JkOiAiIgogICAgICB9LAogICAgICBwbGF5bGlzdHM6IFtdLAogICAgICBwbGF5bGlzdDogbnVsbCwKICAgICAgZWRpdG9yOiBmYWxzZSwKICAgICAgc2VhcmNoOiBudWxsLAogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBmcm9tOiAwLAogICAgICB0bzogMCwKICAgICAgdG90YWw6IDAsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBmaWVsZHM6IFt7CiAgICAgICAga2V5OiAiY3JlYXRlZF9hdCIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5jcmVhdGVkIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogImxhc3RfdXBkYXRlZCIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5sYXN0LXVwZGF0ZWQiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAibmFtZSIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5uYW1lIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogImdyb3VwcyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5ncm91cHMiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAic3RyZWFtcyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5zdHJlYW1zIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogInN5bmNfaW50ZXJ2YWwiLAogICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ4dHJlYW0uc3luYy1pbnRlcnZhbCIpLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJzeW5jZWRfYXQiLAogICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ4dHJlYW0uc3luY2VkLWF0IiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogInNvdXJjZV9leHBfZGF0ZSIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5leHBpcmUiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAic291cmNlX21heF9jb25uZWN0aW9ucyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInh0cmVhbS5tYXgtY29ubmVjdGlvbnMiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAiYWN0aW9ucyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInVzZXJzLmFjdGlvbnMiKSwKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdGhDbGFzczogInRleHQtcmlnaHQiLAogICAgICAgIHRkQ2xhc3M6ICJ0ZXh0LXJpZ2h0IgogICAgICB9XSwKICAgICAgc3luY0ludGVydmFsczogW3sKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJzeW5jLWludGVydmFsLjQ4IiksCiAgICAgICAgdmFsdWU6IDQ4CiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJzeW5jLWludGVydmFsLjI0IiksCiAgICAgICAgdmFsdWU6IDI0CiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJzeW5jLWludGVydmFsLjEyIiksCiAgICAgICAgdmFsdWU6IDEyCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJzeW5jLWludGVydmFsLjYiKSwKICAgICAgICB2YWx1ZTogNgogICAgICB9LCB7CiAgICAgICAgdGV4dDogdGhpcy4kdCgic3luYy1pbnRlcnZhbC4xIiksCiAgICAgICAgdmFsdWU6IDEKICAgICAgfV0sCiAgICAgIG91dHB1dFR5cGVzOiBbewogICAgICAgIHRleHQ6IHRoaXMuJHQoIm91dHB1dC4xIiksCiAgICAgICAgdmFsdWU6IDEKICAgICAgfSwgewogICAgICAgIHRleHQ6IHRoaXMuJHQoIm91dHB1dC4yIiksCiAgICAgICAgdmFsdWU6IDIKICAgICAgfV0sCiAgICAgIGlwdHZUb29sc0hvc3Q6ICJodHRwOi8vdHYuaXB0di10b29scy5jb20iLAogICAgICBpcHR2VG9vbHNQb3J0OiA4MAogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWyJjdXJyZW50VXNlciIsICJzZXR0aW5ncyIsICJzeW5jVE1EQiIsICJzeW5jUGxheWxpc3QiXSkpLCB7fSwgewogICAgc2hvd1Rvb2x0aXBzOiBmdW5jdGlvbiBzaG93VG9vbHRpcHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnNldHRpbmdzLnNob3dUb29sdGlwczsKICAgIH0sCiAgICBlcGdPZmZzZXQ6IGZ1bmN0aW9uIGVwZ09mZnNldCgpIHsKICAgICAgdmFyIGR0ID0gbmV3IERhdGUoKTsKICAgICAgcmV0dXJuIE1hdGguYWJzKGR0LmdldFRpbWV6b25lT2Zmc2V0KCkgLyA2MCk7CiAgICB9LAogICAgcGVyUGFnZTogZnVuY3Rpb24gcGVyUGFnZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2V0dGluZ3MucGVyUGFnZTsKICAgIH0sCiAgICBzZWFyY2hGaWx0ZXJlZDogZnVuY3Rpb24gc2VhcmNoRmlsdGVyZWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zZWFyY2ggPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy5wbGF5bGlzdHM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cCh0aGlzLnNlYXJjaCwgImkiKTsKICAgICAgICByZXR1cm4gdGhpcy5wbGF5bGlzdHMuZmlsdGVyKGZ1bmN0aW9uIChhY2NvdW50KSB7CiAgICAgICAgICByZXR1cm4gU3RyaW5nKGFjY291bnQudGl0bGUpLm1hdGNoKHJlKSB8fCBTdHJpbmcoYWNjb3VudC5ob3N0KS5tYXRjaChyZSkgfHwgU3RyaW5nKGFjY291bnQucG9ydCkubWF0Y2gocmUpIHx8IFN0cmluZyhhY2NvdW50LnVzZXJuYW1lKS5tYXRjaChyZSkgfHwgU3RyaW5nKGFjY291bnQucGFzc3dvcmQpLm1hdGNoKHJlKSB8fCBfdGhpcy5mb3JtYXREYXRlKGFjY291bnQuc3luY2VkX2F0KS5tYXRjaChyZSkgfHwgX3RoaXMuJHQoInN5bmMtaW50ZXJ2YWwuIi5jb25jYXQoYWNjb3VudC5zeW5jX2ludGVydmFsKSkubWF0Y2gocmUpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgcGFnZWQ6IGZ1bmN0aW9uIHBhZ2VkKCkgewogICAgICB0aGlzLnRvdGFsID0gdGhpcy5zZWFyY2hGaWx0ZXJlZC5sZW5ndGg7CiAgICAgIHRoaXMuZnJvbSA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLnBlclBhZ2UgfHwgMDsKICAgICAgdGhpcy50byA9IHRoaXMuZnJvbSArIHRoaXMucGVyUGFnZSA+IHRoaXMudG90YWwgPyB0aGlzLnRvdGFsIDogdGhpcy5mcm9tICsgdGhpcy5wZXJQYWdlOwogICAgICByZXR1cm4gdGhpcy5zZWFyY2hGaWx0ZXJlZC5zbGljZSh0aGlzLmZyb20sIHRoaXMudG8pOwogICAgfSwKICAgIGFsbG93ZWRJcHM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGxheWxpc3QuaXBfYWxsb3dlZCA/IHRoaXMucGxheWxpc3QuaXBfYWxsb3dlZC5qb2luKCIsIikgOiAiIjsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsKSB7CiAgICAgICAgdGhpcy5wbGF5bGlzdC5pcF9hbGxvd2VkID0gdmFsLnNwbGl0KCIsIikubWFwKGZ1bmN0aW9uIChpcCkgewogICAgICAgICAgcmV0dXJuIGlwLnRyaW0oKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNvbnRleHRMaXZlOiBmdW5jdGlvbiBjb250ZXh0TGl2ZSgpIHsKICAgICAgdmFyIHZtID0gdGhpczsKCiAgICAgIHZhciBsaXZlID0gX3RvQ29uc3VtYWJsZUFycmF5KHZtLnBsYXlsaXN0R3JvdXBzLmxpdmUpOwoKICAgICAgcmV0dXJuIFt7CiAgICAgICAgdGV4dDogdm0uJHQoImdlbmVyYWwuc2VsZWN0LWFsbCIpLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICB2bS5wbGF5bGlzdC5zeW5jX2xpdmUgPSBfdG9Db25zdW1hYmxlQXJyYXkobGl2ZS5tYXAoZnVuY3Rpb24gKGcpIHsKICAgICAgICAgICAgcmV0dXJuIGcuY2F0ZWdvcnlfaWQ7CiAgICAgICAgICB9KSk7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGV4dDogdm0uJHQoImdlbmVyYWwuc2VsZWN0LW5vbmUiKSwKICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgICAgdm0ucGxheWxpc3Quc3luY19saXZlID0gW107CiAgICAgICAgfQogICAgICB9XTsKICAgIH0sCiAgICBjb250ZXh0TW92aWVzOiBmdW5jdGlvbiBjb250ZXh0TW92aWVzKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwoKICAgICAgdmFyIG1vdmllcyA9IF90b0NvbnN1bWFibGVBcnJheSh2bS5wbGF5bGlzdEdyb3Vwcy5tb3ZpZXMpOwoKICAgICAgcmV0dXJuIFt7CiAgICAgICAgdGV4dDogdm0uJHQoImdlbmVyYWwuc2VsZWN0LWFsbCIpLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICBpZiAodm0uY2FuVXNlTW92aWVzU2VyaWVzKSB7CiAgICAgICAgICAgIHZtLnBsYXlsaXN0LnN5bmNfbW92aWVzID0gX3RvQ29uc3VtYWJsZUFycmF5KG1vdmllcy5tYXAoZnVuY3Rpb24gKGcpIHsKICAgICAgICAgICAgICByZXR1cm4gZy5jYXRlZ29yeV9pZDsKICAgICAgICAgICAgfSkpOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGlzYWJsZWQ6ICF2bS5jYW5Vc2VNb3ZpZXNTZXJpZXMKICAgICAgfSwgewogICAgICAgIHRleHQ6IHZtLiR0KCJnZW5lcmFsLnNlbGVjdC1ub25lIiksCiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICAgIHZtLnBsYXlsaXN0LnN5bmNfbW92aWVzID0gW107CiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlZDogIXZtLmNhblVzZU1vdmllc1NlcmllcwogICAgICB9XTsKICAgIH0sCiAgICBjb250ZXh0U2VyaWVzOiBmdW5jdGlvbiBjb250ZXh0U2VyaWVzKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwoKICAgICAgdmFyIHNlcmllcyA9IF90b0NvbnN1bWFibGVBcnJheSh2bS5wbGF5bGlzdEdyb3Vwcy5zZXJpZXMpOwoKICAgICAgcmV0dXJuIFt7CiAgICAgICAgdGV4dDogdm0uJHQoImdlbmVyYWwuc2VsZWN0LWFsbCIpLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICBpZiAodm0uY2FuVXNlTW92aWVzU2VyaWVzKSB7CiAgICAgICAgICAgIHZtLnBsYXlsaXN0LnN5bmNfc2VyaWVzID0gX3RvQ29uc3VtYWJsZUFycmF5KHNlcmllcy5tYXAoZnVuY3Rpb24gKGcpIHsKICAgICAgICAgICAgICByZXR1cm4gZy5jYXRlZ29yeV9pZDsKICAgICAgICAgICAgfSkpOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGlzYWJsZWQ6ICF2bS5jYW5Vc2VNb3ZpZXNTZXJpZXMKICAgICAgfSwgewogICAgICAgIHRleHQ6IHZtLiR0KCJnZW5lcmFsLnNlbGVjdC1ub25lIiksCiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICAgIHZtLnBsYXlsaXN0LnN5bmNfc2VyaWVzID0gW107CiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlZDogIXZtLmNhblVzZU1vdmllc1NlcmllcwogICAgICB9XTsKICAgIH0sCiAgICB0bWRiTGFuZ3VhZ2VzOiBmdW5jdGlvbiB0bWRiTGFuZ3VhZ2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmxhbmd1YWdlcykubWFwKGZ1bmN0aW9uIChsYW5ndWFnZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB2YWx1ZTogbGFuZ3VhZ2UsCiAgICAgICAgICB0ZXh0OiAiIi5jb25jYXQoX3RoaXMyLmxhbmd1YWdlc1tsYW5ndWFnZV0ubmFtZSwgIiAoIikuY29uY2F0KF90aGlzMi5sYW5ndWFnZXNbbGFuZ3VhZ2VdLm5hdGl2ZU5hbWUsICIpIikKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBjYW5Vc2VDdXN0b21Vc2VyUGFzczogZnVuY3Rpb24gY2FuVXNlQ3VzdG9tVXNlclBhc3MoKSB7CiAgICAgIHJldHVybiBbVXNlclJvbGUuU3VwZXJBZG1pbiwgVXNlclJvbGUuQWRtaW4sIFVzZXJSb2xlLk1vZGVyYXRvcl0uaW5jbHVkZXModGhpcy5jdXJyZW50VXNlci51c2VyLnJvbGUpOwogICAgfSwKICAgIGNhblVzZU1vdmllc1NlcmllczogZnVuY3Rpb24gY2FuVXNlTW92aWVzU2VyaWVzKCkgewogICAgICByZXR1cm4gW1N1YnNjcmlwdGlvblR5cGUuUHJvZmVzc2lvbmFsLCBTdWJzY3JpcHRpb25UeXBlLkZhbWlseSwgU3Vic2NyaXB0aW9uVHlwZS5CdXNpbmVzc1NtYWxsLCBTdWJzY3JpcHRpb25UeXBlLkJ1c2luZXNzUHJvZmVzc2lvbmFsLCBTdWJzY3JpcHRpb25UeXBlLkJ1c2luZXNzRW50ZXJwcmlzZSwgU3Vic2NyaXB0aW9uVHlwZS5NYW5hZ2VyXS5pbmNsdWRlcyh0aGlzLmN1cnJlbnRVc2VyLnN1YnNjcmlwdGlvbi5zdWJzY3JpcHRpb25fdHlwZSk7CiAgICB9LAogICAgcGxheWxpc3RJc0VtcHR5OiBmdW5jdGlvbiBwbGF5bGlzdElzRW1wdHkoKSB7CiAgICAgIHJldHVybiB0aGlzLnBsYXlsaXN0ICYmIHRoaXMucGxheWxpc3QuZ3JvdXBzID09IDAgfHwgdGhpcy5wbGF5bGlzdC5zdHJlYW1zID09IDA7CiAgICB9LAogICAgY2FuQWRkUGxheWxpc3Q6IGZ1bmN0aW9uIGNhbkFkZFBsYXlsaXN0KCkgewogICAgICBpZiAodGhpcy5jdXJyZW50VXNlci5zdWJzY3JpcHRpb24pIHsKICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5jdXJyZW50VXNlci5zdWJzY3JpcHRpb247CgogICAgICAgIGlmIChzdWJzY3JpcHRpb24uZW5kX2RhdGUgIT0gbnVsbCAmJiBuZXcgRGF0ZShzdWJzY3JpcHRpb24uZW5kX2RhdGUpLmdldFRpbWUoKSA8IG5ldyBEYXRlKCkuZ2V0VGltZSgpKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBpZiAocGFyc2VJbnQoc3Vic2NyaXB0aW9uLmN1c3RvbV9wbGFuKSA9PT0gMSkgewogICAgICAgICAgcmV0dXJuIHRoaXMucGxheWxpc3RzLmxlbmd0aCA8IHN1YnNjcmlwdGlvbi5tYXhfcGxheWxpc3Q7CiAgICAgICAgfQoKICAgICAgICBpZiAocGFyc2VJbnQoc3Vic2NyaXB0aW9uLmVuYWJsZWQpICE9PSAxKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBzd2l0Y2ggKHN1YnNjcmlwdGlvbi5zdWJzY3JpcHRpb25fdHlwZSkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICByZXR1cm4gdGhpcy5wbGF5bGlzdHMubGVuZ3RoIDwgMjsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHJldHVybiB0aGlzLnBsYXlsaXN0cy5sZW5ndGggPCA1OwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIHRoaXMucGxheWxpc3RzLmxlbmd0aCA8IDU7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICByZXR1cm4gdGhpcy5wbGF5bGlzdHMubGVuZ3RoIDwgMTA7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICByZXR1cm4gdGhpcy5wbGF5bGlzdHMubGVuZ3RoIDwgMjU7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsic3luY2hyb25pemVUTURCIiwgInN5bmNocm9uaXplUGxheWxpc3QiXSkpLCB7fSwgewogICAgb3BlbkNvbnRleHQ6IGZ1bmN0aW9uIG9wZW5Db250ZXh0KGNvbnRleHQpIHsKICAgICAgdGhpcy4kcmVmc1tjb250ZXh0XS5vcGVuKCk7CiAgICB9LAogICAgbG9hZEdyb3VwczogZnVuY3Rpb24gbG9hZEdyb3VwcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGh0dHBTZXJ2aWNlLnBvc3QoInBsYXlsaXN0L2xvYWQtZ3JvdXBzIiwgewogICAgICAgIGhvc3Q6IHRoaXMucGxheWxpc3Quc291cmNlX2hvc3QsCiAgICAgICAgcG9ydDogdGhpcy5wbGF5bGlzdC5zb3VyY2VfcG9ydCwKICAgICAgICB1c2VybmFtZTogdGhpcy5wbGF5bGlzdC5zb3VyY2VfdXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGxheWxpc3Quc291cmNlX3Bhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMy5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUpIHsKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlcy5kYXRhLmxpdmUpICYmIEFycmF5LmlzQXJyYXkocmVzLmRhdGEubW92aWVzKSAmJiBBcnJheS5pc0FycmF5KHJlcy5kYXRhLnNlcmllcykpIHsKICAgICAgICAgICAgX3RoaXMzLnBsYXlsaXN0R3JvdXBzID0gcmVzLmRhdGE7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBsb2FkUGxheWxpc3RzOiBmdW5jdGlvbiBsb2FkUGxheWxpc3RzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgaHR0cFNlcnZpY2UuZ2V0KCJwbGF5bGlzdCIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNC5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUpIHsKICAgICAgICAgIF90aGlzNC5wbGF5bGlzdHMgPSByZXMuZGF0YTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczQuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIF90aGlzNC4kbm90aWZ5KCJlcnJvciIsIF90aGlzNC4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXM0LiR0KCJ4dHJlYW0ueHRyZWFtLWxvYWQtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZFBsYXlsaXN0OiBmdW5jdGlvbiBhZGRQbGF5bGlzdCgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5jYW5BZGRQbGF5bGlzdCAhPT0gdHJ1ZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaHR0cFNlcnZpY2UucG9zdCgicGxheWxpc3QvYWRkIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUgJiYgcmVzLmRhdGEgIT09IGZhbHNlKSB7CiAgICAgICAgICBfdGhpczUucGxheWxpc3QgPSB7CiAgICAgICAgICAgIGlkOiByZXMuZGF0YSwKICAgICAgICAgICAgdXJsOiAiIiwKICAgICAgICAgICAgZW5hYmxlZDogMSwKICAgICAgICAgICAgc291cmNlX2hvc3Q6ICIiLAogICAgICAgICAgICBzb3VyY2VfcG9ydDogIiIsCiAgICAgICAgICAgIHNvdXJjZV91c2VybmFtZTogIiIsCiAgICAgICAgICAgIHNvdXJjZV9wYXNzd29yZDogIiIsCiAgICAgICAgICAgIHNvdXJjZV9leHBfZGF0ZTogZmFsc2UsCiAgICAgICAgICAgIHNvdXJjZV9tYXhfY29ubmVjdGlvbnM6IGZhbHNlLAogICAgICAgICAgICBzeW5jX2VuYWJsZWQ6IDEsCiAgICAgICAgICAgIHN5bmNfaW50ZXJ2YWw6IDQ4LAogICAgICAgICAgICBzeW5jX2xpdmU6IFtdLAogICAgICAgICAgICBzeW5jX21vdmllczogW10sCiAgICAgICAgICAgIHN5bmNfc2VyaWVzOiBbXSwKICAgICAgICAgICAgaXBfcHJvdGVjdGlvbjogMCwKICAgICAgICAgICAgaXBfYWxsb3dlZDogW10sCiAgICAgICAgICAgIGFwaV91c2VybmFtZTogX3RoaXM1LmN1cnJlbnRVc2VyLnVzZXIudXNlcm5hbWUsCiAgICAgICAgICAgIGFwaV9wYXNzd29yZDogIiIsCiAgICAgICAgICAgIGFwaV9tZXNzYWdlOiAiV2VsY29tZSB0byBJUFRWLVRvb2xzLmNvbSIsCiAgICAgICAgICAgIGFwaV9vdXRwdXRfZm9ybWF0OiAxLAogICAgICAgICAgICBuYW1lOiAiIiwKICAgICAgICAgICAgdG1kYl9sYW5ndWFnZTogX3RoaXM1LiRpMThuLmxvY2FsZSwKICAgICAgICAgICAgZXBnX29mZnNldDogX3RoaXM1LmVwZ09mZnNldAogICAgICAgICAgfTsKICAgICAgICAgIF90aGlzNS5wbGF5bGlzdEdyb3VwcyA9IHsKICAgICAgICAgICAgbGl2ZTogW10sCiAgICAgICAgICAgIG1vdmllczogW10sCiAgICAgICAgICAgIHNlcmllczogW10KICAgICAgICAgIH07CgogICAgICAgICAgX3RoaXM1LnJhbmRvbVBhc3N3b3JkKCk7CgogICAgICAgICAgX3RoaXM1LmVkaXRvciA9IHRydWU7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM1LiRub3RpZnkoImVycm9yIiwgX3RoaXM1LiR0KCJwcm9maWxlLmZhaWxlZCIpLCBfdGhpczUuJHQoInh0cmVhbS54dHJlYW0tbmV3LWVycm9yIiksICJsYS11c2VyLXNoaWVsZCIsIHsKICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBlZGl0UGxheWxpc3Q6IGZ1bmN0aW9uIGVkaXRQbGF5bGlzdChwbGF5bGlzdCkgewogICAgICB0aGlzLnBsYXlsaXN0ID0gT2JqZWN0LmFzc2lnbih7fSwgcGxheWxpc3QpOwogICAgICB0aGlzLnBsYXlsaXN0QXV0aCgpOwogICAgICB0aGlzLmVkaXRvciA9IHRydWU7CiAgICB9LAogICAgcGxheWxpc3RJbmZvTW9kYWw6IGZ1bmN0aW9uIHBsYXlsaXN0SW5mb01vZGFsKHNob3csIHBsYXlsaXN0KSB7CiAgICAgIGlmIChwbGF5bGlzdCkgewogICAgICAgIHRoaXMucGxheWxpc3RJbmZvLnVzZXJuYW1lID0gcGxheWxpc3QuYXBpX3VzZXJuYW1lOwogICAgICAgIHRoaXMucGxheWxpc3RJbmZvLnBhc3N3b3JkID0gcGxheWxpc3QuYXBpX3Bhc3N3b3JkOwogICAgICB9CgogICAgICB0aGlzLnBsYXlsaXN0SW5mby5tb2RhbCA9IHNob3c7CiAgICB9LAogICAgY2FuY2VsRWRpdG9yOiBmdW5jdGlvbiBjYW5jZWxFZGl0b3IoKSB7CiAgICAgIHRoaXMuZWRpdG9yID0gZmFsc2U7CiAgICB9LAogICAgc2F2ZUVkaXRvcjogZnVuY3Rpb24gc2F2ZUVkaXRvcigpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB2YXIgcGxheWxpc3QgPSB0aGlzLnBsYXlsaXN0OwogICAgICB2YXIgcGxheWxpc3RJZCA9IHRoaXMucGxheWxpc3QuaWQ7CiAgICAgIGRlbGV0ZSBwbGF5bGlzdC5pZDsKICAgICAgZGVsZXRlIHBsYXlsaXN0LnVybDsKICAgICAgZGVsZXRlIHBsYXlsaXN0Lmdyb3VwczsKICAgICAgZGVsZXRlIHBsYXlsaXN0LnN0cmVhbXM7CiAgICAgIHBsYXlsaXN0Lmxhc3RfdXBkYXRlZCA9IG5ldyBEYXRlKCk7CiAgICAgIGh0dHBTZXJ2aWNlLnB1dCgicGxheWxpc3QvIi5jb25jYXQocGxheWxpc3RJZCksIHBsYXlsaXN0KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSAmJiByZXMuZGF0YSA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXM2LiRub3RpZnkoInByaW1hcnkiLCBfdGhpczYuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCBfdGhpczYuJHQoInh0cmVhbS54dHJlYW0tc2F2ZS1zdWNjZXNzIiksICJsYS11c2VyLXNoaWVsZCIsIHsKICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzNi5lZGl0b3IgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczYubG9hZFBsYXlsaXN0cygpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNi4kbm90aWZ5KCJlcnJvciIsIF90aGlzNi4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXM2LiR0KCJ4dHJlYW0ueHRyZWFtLXNhdmUtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVBsYXlsaXN0OiBmdW5jdGlvbiBkZWxldGVQbGF5bGlzdChpZCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIGh0dHBTZXJ2aWNlLmRlbGV0ZSgicGxheWxpc3QvIi5jb25jYXQoaWQpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXM3LiRub3RpZnkoInByaW1hcnkiLCBfdGhpczcuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCBfdGhpczcuJHQoInh0cmVhbS54dHJlYW0tZGVsZXRlLXN1Y2Nlc3MiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM3LmxvYWRQbGF5bGlzdHMoKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczcuJG5vdGlmeSgiZXJyb3IiLCBfdGhpczcuJHQoInByb2ZpbGUuZmFpbGVkIiksIF90aGlzNy4kdCgieHRyZWFtLnh0cmVhbS1kZWxldGUtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNlYXJjaEFjY291bnQ6IGZ1bmN0aW9uIHNlYXJjaEFjY291bnQoc2VhcmNoKSB7CiAgICAgIGlmIChzZWFyY2gubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy5zZWFyY2ggPSBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VhcmNoID0gc2VhcmNoOwogICAgICB9CiAgICB9LAogICAgcHJpbnRBY2NvdW50czogZnVuY3Rpb24gcHJpbnRBY2NvdW50cygpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBsYXlsaXN0cyIpLnByaW50KCk7CiAgICB9LAogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlKSB7CiAgICAgIHJldHVybiBkYXRlID09PSBmYWxzZSA/ICIiIDogZGF0ZSA9PT0gbnVsbCB8fCBkYXRlID09PSAiMDAwMC0wMC0wMCAwMDowMDowMCIgfHwgZGF0ZSA9PT0gMCB8fCBkYXRlID09PSAiIiA/IHRoaXMuJHQoInh0cmVhbS51bmxpbWl0ZWQiKSA6IG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlU3RyaW5nKHRoaXMuJHQoImRhdGUubG9jYWxlIiksIHRoaXMuZGF0ZU9wdGlvbnMpOwogICAgfSwKICAgIGZvcm1hdE1heENvbm5lY3Rpb25zOiBmdW5jdGlvbiBmb3JtYXRNYXhDb25uZWN0aW9ucyhtYXgpIHsKICAgICAgcmV0dXJuIG1heCA9PT0gZmFsc2UgPyAiIiA6IG1heCA9PT0gbnVsbCB8fCBtYXggPD0gMCA/IHRoaXMuJHQoInh0cmVhbS51bmxpbWl0ZWQiKSA6IG1heDsKICAgIH0sCiAgICBkb1RhYkNoYW5nZTogZnVuY3Rpb24gZG9UYWJDaGFuZ2UodGFiKSB7CiAgICAgIGlmICh0YWIgPT0gMikgewogICAgICAgIHRoaXMubG9hZEdyb3VwcygpOwogICAgICB9CgogICAgICB0aGlzLmFjdGl2ZVRhYiA9IHRhYjsKICAgIH0sCiAgICByYW5kb21QYXNzd29yZDogZnVuY3Rpb24gcmFuZG9tUGFzc3dvcmQoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgaHR0cFNlcnZpY2UucG9zdCgicGxheWxpc3QvcmFuZG9tLXBhc3N3b3JkIiwgewogICAgICAgIHVzZXJuYW1lOiB0aGlzLnBsYXlsaXN0LmFwaV91c2VybmFtZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXM4LnBsYXlsaXN0LmFwaV9wYXNzd29yZCA9IHJlcy5kYXRhOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBwbGF5bGlzdEF1dGg6IGZ1bmN0aW9uIHBsYXlsaXN0QXV0aCgpIHsKICAgICAgdmFyIF90aGlzOSA9IHRoaXM7CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGh0dHBTZXJ2aWNlLnBvc3QoInBsYXlsaXN0L2F1dGhlbnRpY2F0ZSIsIHsKICAgICAgICBob3N0OiB0aGlzLnBsYXlsaXN0LnNvdXJjZV9ob3N0LAogICAgICAgIHBvcnQ6IHRoaXMucGxheWxpc3Quc291cmNlX3BvcnQsCiAgICAgICAgdXNlcm5hbWU6IHRoaXMucGxheWxpc3Quc291cmNlX3VzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkOiB0aGlzLnBsYXlsaXN0LnNvdXJjZV9wYXNzd29yZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczkuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSB0cnVlICYmIHJlcy5kYXRhLmF1dGgpIHsKICAgICAgICAgIF90aGlzOS5wbGF5bGlzdC5zb3VyY2VfZXhwX2RhdGUgPSByZXMuZGF0YS5leHBfZGF0ZTsKICAgICAgICAgIF90aGlzOS5wbGF5bGlzdC5zb3VyY2VfbWF4X2Nvbm5lY3Rpb25zID0gcmVzLmRhdGEubWF4X2Nvbm5lY3Rpb25zOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzOS5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0SVBBZGRyZXNzOiBmdW5jdGlvbiBnZXRJUEFkZHJlc3MoKSB7CiAgICAgIHZhciBfdGhpczEwID0gdGhpczsKCiAgICAgIGh0dHBTZXJ2aWNlLmdldCgicGxheWxpc3QvaXAtYWRkcmVzcyIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSB0cnVlKSB7CiAgICAgICAgICBfdGhpczEwLnBsYXlsaXN0LmlwX2FsbG93ZWQucHVzaChyZXMuZGF0YSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGNoZWNrQXZhaWxhYmlsaXR5OiBmdW5jdGlvbiBjaGVja0F2YWlsYWJpbGl0eSgpIHsKICAgICAgdmFyIF90aGlzMTEgPSB0aGlzOwoKICAgICAgaHR0cFNlcnZpY2UucG9zdCgicGxheWxpc3QvdXNlci1wYXNzLWV4aXN0cyIsIHsKICAgICAgICB1c2VybmFtZTogdGhpcy5wbGF5bGlzdC5hcGlfdXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGxheWxpc3QuYXBpX3Bhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSB0cnVlKSB7CiAgICAgICAgICBpZiAocmVzLmRhdGEgPT09IHRydWUpIHsKICAgICAgICAgICAgX3RoaXMxMS4kbm90aWZ5KCJlcnJvciIsIF90aGlzMTEuJHQoInh0cmVhbS5ub3QtYXZhaWxhYmxlIiksIF90aGlzMTEuJHQoInh0cmVhbS51c2VyLXBhc3MtdXNlZCIpLCAibGEtZXhjbGFtYXRpb24tdHJpYW5nbGUiLCB7CiAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMTEuJG5vdGlmeSgic3VjY2VzcyIsIF90aGlzMTEuJHQoInh0cmVhbS5hdmFpbGFibGUiKSwgX3RoaXMxMS4kdCgieHRyZWFtLnVzZXItcGFzcy1hdmFpbGFibGUiKSwgImxhLWNoZWNrLWNpcmNsZSIsIHsKICAgICAgICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBleHBvcnRNM1U6IGZ1bmN0aW9uIGV4cG9ydE0zVSgpIHsKICAgICAgdmFyIF90aGlzMTIgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvZXhwb3J0L20zdS8iLmNvbmNhdCh0aGlzLnBsYXlsaXN0LmlkKSkudGhlbihmdW5jdGlvbiAoYmxvYikgewogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICJleHBvcnQubTN1IjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgIGEuY2xpY2soKTsKICAgICAgICBhLnJlbW92ZSgpOwogICAgICAgIF90aGlzMTIuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGV4cG9ydFNJUFRWOiBmdW5jdGlvbiBleHBvcnRTSVBUVigpIHsKICAgICAgdmFyIF90aGlzMTMgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvZXhwb3J0L3NpcHR2LyIuY29uY2F0KHRoaXMucGxheWxpc3QuaWQpKS50aGVuKGZ1bmN0aW9uIChibG9iKSB7CiAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogICAgICAgIHZhciBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgICAgIGEuaHJlZiA9IHVybDsKICAgICAgICBhLmRvd25sb2FkID0gImV4cG9ydC50eHQiOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7CiAgICAgICAgYS5jbGljaygpOwogICAgICAgIGEucmVtb3ZlKCk7CiAgICAgICAgX3RoaXMxMy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZXhwb3J0Qm91cXVldDogZnVuY3Rpb24gZXhwb3J0Qm91cXVldCgpIHsKICAgICAgdmFyIF90aGlzMTQgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvZXhwb3J0L2JvdXF1ZXQvIi5jb25jYXQodGhpcy5wbGF5bGlzdC5pZCkpLnRoZW4oZnVuY3Rpb24gKGJsb2IpIHsKICAgICAgICB2YXIgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgICAgYS5ocmVmID0gdXJsOwogICAgICAgIGEuZG93bmxvYWQgPSAiZXhwb3J0LnppcCI7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTsKICAgICAgICBhLmNsaWNrKCk7CiAgICAgICAgYS5yZW1vdmUoKTsKICAgICAgICBfdGhpczE0LmlzTG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBleHBvcnRDU1Y6IGZ1bmN0aW9uIGV4cG9ydENTVigpIHsKICAgICAgdmFyIF90aGlzMTUgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvZXhwb3J0L2Nzdi8iLmNvbmNhdCh0aGlzLnBsYXlsaXN0LmlkKSkudGhlbihmdW5jdGlvbiAoYmxvYikgewogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICJleHBvcnQuemlwIjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgIGEuY2xpY2soKTsKICAgICAgICBhLnJlbW92ZSgpOwogICAgICAgIF90aGlzMTUuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGV4cG9ydEpTT046IGZ1bmN0aW9uIGV4cG9ydEpTT04oKSB7CiAgICAgIHZhciBfdGhpczE2ID0gdGhpczsKCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgaHR0cFNlcnZpY2UuZG93bmxvYWQoInBsYXlsaXN0L2V4cG9ydC9qc29uLyIuY29uY2F0KHRoaXMucGxheWxpc3QuaWQpKS50aGVuKGZ1bmN0aW9uIChibG9iKSB7CiAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogICAgICAgIHZhciBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgICAgIGEuaHJlZiA9IHVybDsKICAgICAgICBhLmRvd25sb2FkID0gImV4cG9ydC56aXAiOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7CiAgICAgICAgYS5jbGljaygpOwogICAgICAgIGEucmVtb3ZlKCk7CiAgICAgICAgX3RoaXMxNi5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgYmFja3VwUGxheWxpc3Q6IGZ1bmN0aW9uIGJhY2t1cFBsYXlsaXN0KHBhdGgpIHsKICAgICAgdmFyIF90aGlzMTcgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvYmFjay11cC8iLmNvbmNhdChwYXRoLCAiLyIpLmNvbmNhdCh0aGlzLnBsYXlsaXN0LmlkKSkudGhlbihmdW5jdGlvbiAoYmxvYikgewogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgICAgICBhLmhyZWYgPSB1cmw7CiAgICAgICAgYS5kb3dubG9hZCA9ICJiYWNrdXAuemlwIjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgIGEuY2xpY2soKTsKICAgICAgICBhLnJlbW92ZSgpOwogICAgICAgIF90aGlzMTcuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGJhY2t1cEVQR0NvZGVzOiBmdW5jdGlvbiBiYWNrdXBFUEdDb2RlcygpIHsKICAgICAgdmFyIF90aGlzMTggPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICBodHRwU2VydmljZS5kb3dubG9hZCgicGxheWxpc3QvYmFjay11cC9lcGctY29kZXMvIi5jb25jYXQodGhpcy5wbGF5bGlzdC5pZCkpLnRoZW4oZnVuY3Rpb24gKGJsb2IpIHsKICAgICAgICB2YXIgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgICAgYS5ocmVmID0gdXJsOwogICAgICAgIGEuZG93bmxvYWQgPSAiYmFja3VwLnppcCI7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTsKICAgICAgICBhLmNsaWNrKCk7CiAgICAgICAgYS5yZW1vdmUoKTsKICAgICAgICBfdGhpczE4LmlzTG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICByZXN0b3JlRVBHQ29kZXM6IGZ1bmN0aW9uIHJlc3RvcmVFUEdDb2RlcyhlKSB7CiAgICAgIHZhciBfdGhpczE5ID0gdGhpczsKCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKCiAgICAgIGlmIChlICYmIGUudGFyZ2V0LmZpbGVzLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCJiYWNrdXAuemlwIiwgZS50YXJnZXQuZmlsZXNbMF0pOwogICAgICAgIGh0dHBTZXJ2aWNlLnBvc3RGaWxlKCJwbGF5bGlzdC9yZXN0b3JlL2VwZy1jb2Rlcy8iLmNvbmNhdCh0aGlzLnBsYXlsaXN0LmlkKSwgZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXMxOS5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSAmJiByZXMuZGF0YSA9PT0gdHJ1ZSkgewogICAgICAgICAgICBfdGhpczE5LiRub3RpZnkoInByaW1hcnkiLCBfdGhpczE5LiR0KCJwcm9maWxlLnN1Y2Nlc3MiKSwgX3RoaXMxOS4kdCgieHRyZWFtLnJlc3RvcmUtZXBnY29kZXMtc3VjY2VzcyIpLCAibGEtdXNlci1zaGllbGQiLCB7CiAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMTkuJG5vdGlmeSgiZXJyb3IiLCBfdGhpczE5LiR0KCJwcm9maWxlLmZhaWxlZCIpLCBfdGhpczE5LiR0KCJ4dHJlYW0ucmVzdG9yZS1lcGdjb2Rlcy1lcnJvciIpLCAibGEtdXNlci1zaGllbGQiLCB7CiAgICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczE5LmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzMTkuJG5vdGlmeSgiZXJyb3IiLCBfdGhpczE5LiR0KCJwcm9maWxlLmZhaWxlZCIpLCBfdGhpczE5LiR0KCJ4dHJlYW0ucmVzdG9yZS1lcGdjb2Rlcy1lcnJvciIpLCAibGEtdXNlci1zaGllbGQiLCB7CiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHJlc3RvcmVQbGF5bGlzdDogZnVuY3Rpb24gcmVzdG9yZVBsYXlsaXN0KGUpIHsKICAgICAgdmFyIF90aGlzMjAgPSB0aGlzOwoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwoKICAgICAgaWYgKGUgJiYgZS50YXJnZXQuZmlsZXMubGVuZ3RoID09IDEpIHsKICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoImJhY2t1cC56aXAiLCBlLnRhcmdldC5maWxlc1swXSk7CiAgICAgICAgaHR0cFNlcnZpY2UucG9zdEZpbGUoInBsYXlsaXN0L3Jlc3RvcmUvcGxheWxpc3QvIi5jb25jYXQodGhpcy5wbGF5bGlzdC5pZCksIGZvcm1EYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzMjAuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUgJiYgcmVzLmRhdGEgPT09IHRydWUpIHsKICAgICAgICAgICAgX3RoaXMyMC4kbm90aWZ5KCJwcmltYXJ5IiwgX3RoaXMyMC4kdCgicHJvZmlsZS5zdWNjZXNzIiksIF90aGlzMjAuJHQoInh0cmVhbS5yZXN0b3JlLXBsYXlsaXN0LXN1Y2Nlc3MiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczIwLiRub3RpZnkoImVycm9yIiwgX3RoaXMyMC4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXMyMC4kdCgieHRyZWFtLnJlc3RvcmUtcGxheWxpc3QtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMyMC5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczIwLiRub3RpZnkoImVycm9yIiwgX3RoaXMyMC4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXMyMC4kdCgieHRyZWFtLnJlc3RvcmUtcGxheWxpc3QtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9KSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICB0aGlzLmxvYWRQbGF5bGlzdHMoKTsKICAgIEV2ZW50QnVzLiRlbWl0KCJjYW4tYWRkLXBsYXlsaXN0IiwgdGhpcy5jYW5BZGRQbGF5bGlzdCk7CiAgICBFdmVudEJ1cy4kb24oInNlYXJjaCIsIHRoaXMuc2VhcmNoQWNjb3VudCk7CiAgICBFdmVudEJ1cy4kb24oInByaW50IiwgdGhpcy5wcmludEFjY291bnRzKTsKICAgIEV2ZW50QnVzLiRvbigicmVmcmVzaCIsIHRoaXMubG9hZFBsYXlsaXN0cyk7CiAgICBFdmVudEJ1cy4kb24oImFkZCIsIHRoaXMuYWRkUGxheWxpc3QpOwogICAgRXZlbnRCdXMuJG9uKCJjYW5jZWwiLCB0aGlzLmNhbmNlbEVkaXRvcik7CiAgICBFdmVudEJ1cy4kb24oInNhdmUiLCB0aGlzLnNhdmVFZGl0b3IpOwogICAgRXZlbnRCdXMuJG9uKCJ0YWItY2hhbmdlIiwgdGhpcy5kb1RhYkNoYW5nZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgRXZlbnRCdXMuJG9mZigic2VhcmNoIiwgdGhpcy5zZWFyY2hBY2NvdW50KTsKICAgIEV2ZW50QnVzLiRvZmYoInByaW50IiwgdGhpcy5wcmludEFjY291bnRzKTsKICAgIEV2ZW50QnVzLiRvZmYoInJlZnJlc2giLCB0aGlzLmxvYWRQbGF5bGlzdHMpOwogICAgRXZlbnRCdXMuJG9mZigiYWRkIiwgdGhpcy5hZGRQbGF5bGlzdCk7CiAgICBFdmVudEJ1cy4kb2ZmKCJjYW5jZWwiLCB0aGlzLmNhbmNlbEVkaXRvcik7CiAgICBFdmVudEJ1cy4kb2ZmKCJzYXZlIiwgdGhpcy5zYXZlRWRpdG9yKTsKICAgIEV2ZW50QnVzLiRvZmYoInRhYi1jaGFuZ2UiLCB0aGlzLmRvVGFiQ2hhbmdlKTsKICB9LAogIHdhdGNoOiB7CiAgICBmcm9tOiBmdW5jdGlvbiBmcm9tKHZhbCkgewogICAgICBFdmVudEJ1cy4kZW1pdCgidXBkYXRlLWZyb20iLCB2YWwpOwogICAgICBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA9IDA7CiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPSAwOwogICAgfSwKICAgIHRvOiBmdW5jdGlvbiB0byh2YWwpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoInVwZGF0ZS10byIsIHZhbCk7CiAgICB9LAogICAgdG90YWw6IGZ1bmN0aW9uIHRvdGFsKHZhbCkgewogICAgICBFdmVudEJ1cy4kZW1pdCgidXBkYXRlLXRvdGFsIiwgdmFsKTsKICAgIH0sCiAgICBlZGl0b3I6IGZ1bmN0aW9uIGVkaXRvcih2YWwpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoInVwZGF0ZS1lZGl0b3IiLCB2YWwpOwoKICAgICAgaWYgKCF2YWwpIHsKICAgICAgICB0aGlzLmxvYWRQbGF5bGlzdHMoKTsKICAgICAgfQogICAgfSwKICAgIGNhbkFkZFBsYXlsaXN0OiBmdW5jdGlvbiBjYW5BZGRQbGF5bGlzdCh2YWwpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoImNhbi1hZGQtcGxheWxpc3QiLCB2YWwpOwogICAgfSwKICAgICJwbGF5bGlzdC5zb3VyY2VfaG9zdCI6IGZ1bmN0aW9uIHBsYXlsaXN0U291cmNlX2hvc3QoKSB7CiAgICAgIGlmICh0aGlzLnBsYXlsaXN0LnNvdXJjZV9ob3N0ICYmIHRoaXMucGxheWxpc3Quc291cmNlX2hvc3QubGVuZ3RoICYmIHRoaXMucGxheWxpc3Quc291cmNlX3VzZXJuYW1lICYmIHRoaXMucGxheWxpc3Quc291cmNlX3VzZXJuYW1lLmxlbmd0aCAmJiB0aGlzLnBsYXlsaXN0LnNvdXJjZV9wYXNzd29yZCAmJiB0aGlzLnBsYXlsaXN0LnNvdXJjZV9wYXNzd29yZC5sZW5ndGggJiYgdGhpcy5lZGl0b3IpIHsKICAgICAgICB0aGlzLnBsYXlsaXN0QXV0aCgpOwogICAgICAgIHRoaXMubG9hZEdyb3VwcygpOwogICAgICB9CiAgICB9LAogICAgInBsYXlsaXN0LnVybCI6IGZ1bmN0aW9uIHBsYXlsaXN0VXJsKHVybCkgewogICAgICBpZiAodXJsICE9PSB1bmRlZmluZWQgJiYgdXJsLmxlbmd0aCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgdSA9IG5ldyBVUkwodXJsKTsKICAgICAgICAgIHRoaXMucGxheWxpc3Quc291cmNlX2hvc3QgPSB1Lmhvc3RuYW1lOwogICAgICAgICAgdGhpcy5wbGF5bGlzdC5zb3VyY2VfcG9ydCA9IHUucG9ydDsKICAgICAgICAgIHRoaXMucGxheWxpc3Quc291cmNlX3VzZXJuYW1lID0gdS5zZWFyY2hQYXJhbXMuZ2V0KCJ1c2VybmFtZSIpOwogICAgICAgICAgdGhpcy5wbGF5bGlzdC5zb3VyY2VfcGFzc3dvcmQgPSB1LnNlYXJjaFBhcmFtcy5nZXQoInBhc3N3b3JkIik7CgogICAgICAgICAgaWYgKCF0aGlzLnBsYXlsaXN0Lm5hbWUubGVuZ3RoKSB7CiAgICAgICAgICAgIHRoaXMucGxheWxpc3QubmFtZSA9IHUuaG9zdG5hbWUudG9VcHBlckNhc2UoKTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChfdW51c2VkKSB7Ly8KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},null]}