{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/plugins/m3u.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/plugins/m3u.js","mtime":1624042412288},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/plugins/m3u.js"],"names":["JSZip","m3u","getAttribute","line","attribute","regex","RegExp","match","exec","getPlaylistTitle","getName","slice","lastIndexOf","getExtGrp","getFileExtension","length","getStreamType","test","getYear","name","cleanName","trim","getMovieInfo","year","replace","getSeriesInfo","season","episode","getSafeFilename","isExtinfLine","isPlaylistLine","isGrpLine","isURLLine","parse","content","options","tag","type","noName","small","Promise","resolve","reject","lines","split","firstLine","shift","playlist","title","xTvgUrl","groups","streams","stream","Object","create","i","group","indexOf","push","tvgId","tvgLogo","tvgName","tvgShift","tvgChno","channelId","radio","toLowerCase","parentCode","audioTrack","url","streamType","extension","movie","series","assign","map","filter","strm","zip","folder","filename","includes","movieName","movieYear","undefined","format","file","createFolders","seriesName","seriesSeason","seriesEpisode"],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\n\nexport const m3u = {\n  getAttribute(line, attribute) {\n    let regex = new RegExp(attribute + '=\"(.*?)\"', \"gi\");\n    let match = regex.exec(line);\n\n    return match && match[1] ? match[1] : \"\";\n  },\n  getPlaylistTitle(line) {\n    let regex = new RegExp(/^#PLAYLIST:(.*)/, \"gi\");\n    let match = regex.exec(line);\n\n    return match && match[1] ? match[1] : \"\";\n  },\n  getName(line) {\n    return line.slice(line.lastIndexOf(\",\") + 1);\n  },\n  getExtGrp(line) {\n    let regex = new RegExp(\"#EXTGRP:(.*)\", \"gi\");\n    let match = regex.exec(line);\n\n    return match && match[1] ? match[1] : \"\";\n  },\n  getFileExtension(line) {\n    let regex = new RegExp(/(?:\\.([^.]+))?$/, \"i\");\n    let match = regex.exec(line);\n\n    return match && match[1] && match[1].length < 5 ? match[1] : \"\";\n  },\n  getStreamType(line) {\n    if (/.*\\/play\\/vod\\//i.test(line)) {\n      return 2;\n    }\n    if (/.*\\/movie\\//i.test(line)) {\n      return 2;\n    }\n    if (/.*\\/series\\//i.test(line)) {\n      return 3;\n    }\n    return 1;\n  },\n  getYear(name) {\n    let regex = new RegExp(/(19\\d{2}|20(?:0\\d|1[0-9]|2[0-9]))/, \"i\");\n    let match = regex.exec(name);\n\n    return match ? match[1] : \"\";\n  },\n  cleanName(name) {\n    if (name[name.length - 1] == \"-\") {\n      return name.slice(0, -1).trim();\n    } else {\n      return name.trim();\n    }\n  },\n  getMovieInfo(name) {\n    let regex = new RegExp(\n      /^(.+?)[.( \\t]*(?:(19\\d{2}|20(?:0\\d|1[0-9])).*|(?:(?=bluray|\\d+p|brrip|webrip)..*)?[.](mkv|avi|mpe?g|mp4)$)/,\n      \"mi\"\n    );\n    let match = regex.exec(name);\n    if (!match) {\n      let regex = new RegExp(/(.+)\\W(\\d{4})?/i);\n      match = regex.exec(name);\n    }\n\n    return match\n      ? {\n          name: this.cleanName(match[1]) || \"\",\n          year: match[2] || \"\",\n        }\n      : {\n          name: name.replace(/ *\\([^)]*\\) */g, \"\"),\n          year: this.getYear(name),\n        };\n  },\n  getSeriesInfo(name) {\n    let regex = new RegExp(\n      /^(.+?)([. ])(?:((?:20|19)\\d\\d)\\2)?S(\\d+) ?(E(\\d+))?(-(E(\\d+)))?/,\n      \"i\"\n    );\n    let match = regex.exec(name);\n\n    return match\n      ? {\n          name: this.cleanName(match[1]),\n          season: match[4],\n          episode: match[6],\n        }\n      : {\n          name: name,\n          season: \"\",\n          episode: \"\",\n        };\n  },\n  getSafeFilename(name) {\n    return name.replace(/[\\\\/:*?\"<>|]/g, \"\").trim();\n  },\n  isExtinfLine(line) {\n    return /^#EXTINF/i.test(line);\n  },\n  isPlaylistLine(line) {\n    return /^#PLAYLIST/i.test(line);\n  },\n  isGrpLine(line) {\n    return /^#EXTGRP/i.test(line);\n  },\n  isURLLine(line) {\n    return /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/gi.test(\n      line\n    );\n  },\n  parse(\n    content,\n    options = { tag: \"name\", type: [\"Movie\", \"Series\", \"VOD\", \"Live\"], noName: \"<No name>\" },\n    small = false\n  ) {\n    return new Promise((resolve, reject) => {\n      var lines = content.split(\"\\n\");\n      var firstLine = lines.shift();\n\n      // Check if the content is a valid m3u file\n      if (!firstLine || !/^#EXTM3U/i.test(firstLine)) {\n        reject(\"Playlist is not valid!\");\n      }\n\n      var playlist = {\n        title: \"\",\n        xTvgUrl: this.getAttribute(firstLine, \"x-tvg-url\"),\n        groups: [],\n      };\n      var groups = [];\n      var streams = [];\n\n      // Create new stream\n      var stream = Object.create({});\n\n      // Loop through lines and parse line\n      for (var i = 0; i < lines.length; i++) {\n        let line = lines[i];\n\n        // Playlist title\n        if (this.isPlaylistLine(line)) {\n          playlist.title = this.getPlaylistTitle(line);\n          continue;\n        }\n\n        // Group\n        if (this.isGrpLine(line)) {\n          stream.group = this.getExtGrp(line).trim();\n          if (\n            stream.group !== \"\" &&\n            groups.indexOf(stream.group) === -1\n          ) {\n            groups.push(stream.group);\n          }\n          continue;\n        }\n\n        // Stream\n        if (this.isExtinfLine(line)) {\n          stream.name = this.getName(line).trim();\n          stream.tvgId = this.getAttribute(line, \"tvg-id\").trim();\n          stream.tvgLogo = this.getAttribute(line, \"tvg-logo\").trim();\n          stream.group = !stream.group\n            ? this.getAttribute(line, \"group-title\").trim()\n            : stream.group;\n\n          if (small == false) {\n            stream.tvgName = this.getAttribute(line, \"tvg-name\").trim();\n            stream.tvgShift = this.getAttribute(line, \"tvg-shift\").trim();\n            stream.tvgChno = this.getAttribute(line, \"tvg-chno\").trim();\n            stream.channelId = this.getAttribute(line, \"channel-id\").trim();\n            stream.radio =\n              this.getAttribute(line, \"radio\").toLowerCase() === \"true\";\n            stream.parentCode = this.getAttribute(line, \"parent-code\").trim();\n            stream.audioTrack = this.getAttribute(line, \"audio-track\").trim();\n          }\n\n          if (stream.group.trim().length === 0) {\n            stream.group = \"EMPTY\";\n          }\n          if (\n            stream.group !== \"\" &&\n            groups.indexOf(stream.group) === -1\n          ) {\n            groups.push(stream.group);\n          }\n\n          continue;\n        }\n\n        // URL\n        if (this.isURLLine(line)) {\n          stream.url = line.trim();\n          stream.streamType = this.getStreamType(line);\n          stream.extension = this.getFileExtension(line).trim();\n\n          if (stream.streamType === 2) {\n            stream.movie = this.getMovieInfo(\n              options && options.tag ? stream[options.tag] : stream.name\n            );\n          }\n\n          if (stream.streamType === 3) {\n            stream.series = this.getSeriesInfo(\n              options && options.tag ? stream[options.tag] : stream.name\n            );\n          }\n\n          streams.push(Object.assign({}, stream));\n          stream = Object.create({});\n          continue;\n        }\n      }\n\n      groups.map(group => {\n        playlist.groups.push({\n          name: group,\n          streams: streams.filter(stream => {\n            return stream.group == group;\n          })\n        });\n      });\n      playlist.groups.map(group => {\n        group.type = group.streams.length ? group.streams[0].streamType : \"Live\";\n      });\n\n      resolve(playlist);\n    });\n  },\n  strm(playlist, options) {\n    return new Promise((resolve) => {\n      var zip = new JSZip();\n\n      var folder;\n      var filename;\n\n      // Create folders where we will store the streams\n      playlist.streams.map((stream) => {\n        folder =\n          stream.group.length > 0\n            ? this.getSafeFilename(stream.group)\n            : \"EMPTY\";\n\n        // Movie\n        if (\n          stream.streamType === 2 &&\n          options.streamType.includes(\"Movie\") &&\n          options.groups.includes(stream.group)\n        ) {\n          var movieName = stream.movie.name.length\n            ? this.getSafeFilename(stream.movie.name)\n            : this.getSafeFilename(stream.name);\n          var movieYear = stream.movie.year.length\n            ? this.getSafeFilename(stream.movie.year)\n            : undefined;\n\n          switch (options.format) {\n            case \"kodi\":\n              filename =\n                movieName && movieYear\n                  ? `${movieName} (${movieYear})`\n                  : movieName && !movieYear\n                  ? movieName\n                  : this.getSafeFilename(stream.name);\n              break;\n\n            case \"original\":\n              filename = this.getSafeFilename(stream.name);\n              break;\n          }\n\n          zip.file(`Movies/${folder}/${filename}.strm`, stream.url, {\n            createFolders: true,\n          });\n        }\n\n        // Series\n        if (\n          stream.streamType === 3 &&\n          options.streamType.includes(\"Series\") &&\n          options.groups.includes(stream.group)\n        ) {\n          var seriesName = stream.series.name.length\n            ? this.getSafeFilename(stream.series.name)\n            : this.getSafeFilename(stream.name);\n          var seriesSeason = stream.series.season.length\n            ? this.getSafeFilename(stream.series.season)\n            : undefined;\n          var seriesEpisode = stream.series.episode.length\n            ? this.getSafeFilename(stream.series.episode)\n            : undefined;\n\n          switch (options.format) {\n            case \"kodi\":\n              filename =\n                seriesName && seriesSeason && seriesEpisode\n                  ? `${seriesName}/${seriesName} S${seriesSeason}E${seriesEpisode}`\n                  : seriesName;\n              break;\n\n            case \"original\":\n              filename = seriesName;\n              break;\n          }\n\n          zip.file(`Series/${folder}/${filename}.strm`, stream.url, {\n            createFolders: true,\n          });\n        }\n      });\n\n      resolve(zip);\n    });\n  },\n};\n"]}]}