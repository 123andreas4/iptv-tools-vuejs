{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js!/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernst/Desktop/IPTV-Tools/src/views/app/financial/statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/views/app/financial/statistics.vue","mtime":1621076669265},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["statistics.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" sm=\"12\" id=\"statistics\" class=\"p-0\">\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-last-month\") }}</h5>\n                <p class=\"m-0 color-theme-1\">{{ lastMonth.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-last-month\") }}</h5>\n                <p class=\"m-0 color-theme-1\">\n                  {{ formatCurrency(revenueLastMonth) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-this-month\") }}</h5>\n                <p class=\"m-0 text-info\">{{ currentMonth.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-this-month\") }}</h5>\n                <p class=\"m-0 text-info\">\n                  {{ formatCurrency(revenueThisMonth) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.last-month\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ monthName(new Date().getMonth()) }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-day\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"lastMonth.data\"\n                :data=\"lastMonth.data\"\n                :step=\"lastMonth.step\"\n                :min=\"lastMonth.min\"\n                :max=\"lastMonth.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.this-month\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ monthName(new Date().getMonth() + 1) }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-day\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"currentMonth.data\"\n                :data=\"currentMonth.data\"\n                :step=\"currentMonth.step\"\n                :min=\"currentMonth.min\"\n                :max=\"currentMonth.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-last-year\") }}</h5>\n                <p class=\"m-0 color-theme-1\">{{ lastYear.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-last-year\") }}</h5>\n                <p class=\"m-0 color-theme-1\">\n                  {{ formatCurrency(revenueLastYear) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-this-year\") }}</h5>\n                <p class=\"m-0 text-info\">{{ currentYear.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-this-year\") }}</h5>\n                <p class=\"m-0 text-info\">\n                  {{ formatCurrency(revenueThisYear) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.last-year\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ new Date().getFullYear() - 1 }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-month\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"lastYear.data\"\n                :data=\"lastYear.data\"\n                :step=\"lastYear.step\"\n                :min=\"lastYear.min\"\n                :max=\"lastYear.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.this-year\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ new Date().getFullYear() }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-month\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"currentYear.data\"\n                :data=\"currentYear.data\"\n                :step=\"currentYear.step\"\n                :min=\"currentYear.min\"\n                :max=\"currentYear.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\n/* eslint-disable no-unused-vars */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\nimport AreaChart from \"../../../components/Charts/Area\";\nimport { ThemeColors, getDaysInMonth, monthName } from \"../../../helpers\";\n\nconst colors = ThemeColors();\n\nexport default {\n  components: {\n    \"area-chart\": AreaChart,\n  },\n  data() {\n    return {\n      search: null,\n      isLoading: false,\n      statistics: null,\n      lastMonth: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      currentMonth: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      lastYear: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      currentYear: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\"]),\n    revenueLastMonth() {\n      return this.lastMonth.data\n        ? this.lastMonth.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueThisMonth() {\n      return this.currentMonth.data\n        ? this.currentMonth.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueLastYear() {\n      return this.lastYear.data\n        ? this.lastYear.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueThisYear() {\n      return this.currentYear.data\n        ? this.currentYear.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    tooltip() {\n      let vm = this;\n      return {\n        displayColors: false,\n        backgroundColor: colors.foregroundColor,\n        titleFontColor: colors.primaryColor,\n        borderColor: colors.separatorColor,\n        borderWidth: 0.5,\n        bodyFontColor: colors.primaryColor,\n        bodySpacing: 10,\n        xPadding: 15,\n        yPadding: 15,\n        cornerRadius: 10,\n        callbacks: {\n          label: function (context) {\n            if (context.datasetIndex === 0) {\n              return `${vm.$t(\"statistics.revenue\")}: ${new Intl.NumberFormat(\n                vm.$t(\"date.locale\"),\n                {\n                  style: \"currency\",\n                  currency: \"EUR\",\n                }\n              ).format(context.value)}`;\n            } else {\n              return `${vm.$t(\"statistics.sales\")}: ${context.value}x`;\n            }\n          },\n        },\n      };\n    },\n  },\n  methods: {\n    monthName(month, length = \"long\") {\n      var objDate = new Date();\n\n      objDate.setDate(1);\n      objDate.setMonth(month - 1);\n\n      return objDate.toLocaleString(this.$t(\"date.locale\"), { month: length });\n    },\n    formatCurrency(num) {\n      return new Intl.NumberFormat(this.$t(\"date.locale\"), {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(num);\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadStatistics() {\n      this.isLoading = true;\n      httpService\n        .get(\"administration/financial-statistics\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.statistics = res.data;\n            this.createLastMonth();\n            this.createThisMonth();\n            this.createLastYear();\n            this.createThisYear();\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"statistics.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    revenueMonthDay(month, day) {\n      let res = this.statistics.revenue[month].find((rev) => rev.day == day);\n      return res ? res.revenue : 0;\n    },\n    salesMonthDay(month, day) {\n      let res = this.statistics.sales[month].find((sale) => sale.day == day);\n      return res ? res.sales : 0;\n    },\n    revenueYearMonth(year, month) {\n      let res = this.statistics.revenue[year].find((rev) => rev.month == month);\n      return res ? res.revenue : 0;\n    },\n    salesYearMonth(year, month) {\n      let res = this.statistics.sales[year].find((sale) => sale.month == month);\n      return res ? res.sales : 0;\n    },\n    createLastMonth() {\n      let d = new Date();\n      let month = d.getMonth();\n      let year = d.getFullYear();\n\n      let days = [...Array(getDaysInMonth(month, year)).keys()].map(\n        (x) => x + 1\n      );\n      let dataRevenue = [...days].map((day) => {\n        return this.revenueMonthDay(\"last_month\", day);\n      });\n      let dataSales = [...days].map((day) => {\n        return this.salesMonthDay(\"last_month\", day);\n      });\n\n      let res = 0;\n      this.statistics.sales.last_month.map((sale) => {\n        res += sale.sales;\n      });\n      this.lastMonth.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.lastMonth.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.lastMonth.max = maxTotal > 10 ? maxTotal : 10;\n      this.lastMonth.data = {\n        labels: days,\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n        ],\n      };\n    },\n    createLastYear() {\n      let months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let dataRevenue = [...months].map((month) => {\n        return this.revenueYearMonth(\"last_year\", month);\n      });\n      let dataSales = [...months].map((month) => {\n        return this.salesYearMonth(\"last_year\", month);\n      });\n\n      let res = 0;\n      this.statistics.sales.last_year.map((sale) => {\n        res += sale.sales;\n      });\n      this.lastYear.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.lastYear.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.lastYear.max = maxTotal > 10 ? maxTotal : 10;\n      this.lastYear.data = {\n        labels: months.map((month) =>\n          this.monthName(month, \"short\").capitalize()\n        ),\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n        ],\n      };\n    },\n    createThisMonth() {\n      let d = new Date();\n      let month = d.getMonth() + 1;\n      let year = d.getFullYear();\n\n      let days = [...Array(getDaysInMonth(month, year)).keys()].map(\n        (x) => x + 1\n      );\n      let dataRevenue = [...days].map((day) => {\n        return this.revenueMonthDay(\"current_month\", day);\n      });\n      let dataSales = [...days].map((day) => {\n        return this.salesMonthDay(\"current_month\", day);\n      });\n\n      let res = 0;\n      this.statistics.sales.current_month.map((sale) => {\n        res += sale.sales;\n      });\n      this.currentMonth.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.currentMonth.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.currentMonth.max = maxTotal > 10 ? maxTotal : 10;\n      this.currentMonth.data = {\n        labels: days,\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.infoColor,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor,\n            pointHoverBackgroundColor: colors.infoColor,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.infoColor5_10,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor5_10,\n            pointHoverBackgroundColor: colors.infoColor5_10,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n        ],\n      };\n    },\n    createThisYear() {\n      let months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let dataRevenue = [...months].map((month) => {\n        return this.revenueYearMonth(\"current_year\", month);\n      });\n      let dataSales = [...months].map((month) => {\n        return this.salesYearMonth(\"current_year\", month);\n      });\n\n      let res = 0;\n      this.statistics.sales.current_year.map((sale) => {\n        res += sale.sales;\n      });\n      this.currentYear.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.currentYear.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.currentYear.max = maxTotal > 10 ? maxTotal : 10;\n      this.currentYear.data = {\n        labels: months.map((month) =>\n          this.monthName(month, \"short\").capitalize()\n        ),\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.infoColor,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor,\n            pointHoverBackgroundColor: colors.infoColor,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.infoColor5_10,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor5_10,\n            pointHoverBackgroundColor: colors.infoColor5_10,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n        ],\n      };\n    },\n    searchPayment(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printPayment() {\n      if (this.modal) {\n        document.getElementById(\"modal\").print();\n      } else {\n        document.getElementById(\"payments\").print();\n      }\n    },\n  },\n  beforeMount() {\n    this.loadStatistics();\n    EventBus.$emit(\"hide-all\", true);\n    EventBus.$on(\"search\", this.searchPayment);\n    EventBus.$on(\"print\", this.printPayment);\n    EventBus.$on(\"refresh\", this.loadStatistics);\n  },\n  beforeDestroy() {\n    EventBus.$emit(\"hide-all\", false);\n    EventBus.$off(\"search\", this.searchPayment);\n    EventBus.$off(\"print\", this.printPayment);\n    EventBus.$off(\"refresh\", this.loadStatistics);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.statistics-card {\n  display: table;\n}\n.statistics-card-title {\n  display: table-cell;\n  vertical-align: middle;\n  width: 100%;\n  padding-left: 0.5rem;\n\n  p {\n    font-size: 1rem;\n    font-weight: bold;\n  }\n}\n.chart-card {\n  height: 340px;\n\n  .chart {\n    height: 200px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/app/financial"}]}