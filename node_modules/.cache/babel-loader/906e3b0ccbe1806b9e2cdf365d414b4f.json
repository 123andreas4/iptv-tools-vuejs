{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js!/home/ernst/Desktop/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/home/ernst/Desktop/IPTV-Tools/src/services/http.js","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/services/http.js","mtime":1620574138071},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0IHsgYXV0aEhlYWRlciwgZm9ybWF0SGVhZGVyLCBhY3RpdmVBUEkgfSBmcm9tICIuLi9oZWxwZXJzIjsKaW1wb3J0IHsgaXBHZW9BUElLZXkgfSBmcm9tICIuLi9jb25zdGFudHMvY29uZmlnIjsKZXhwb3J0IHZhciBodHRwU2VydmljZSA9IHsKICBnZXQ6IGZ1bmN0aW9uIGdldCh1cmwsIGhlYWRlcikgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJHRVQiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcihoZWFkZXIpKQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvIikuY29uY2F0KHVybCksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIHB1dDogZnVuY3Rpb24gcHV0KHVybCwgZGF0YSwgaGVhZGVyKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBVVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcihhdXRoSGVhZGVyKGhlYWRlcikpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvIikuY29uY2F0KHVybCksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIHBvc3Q6IGZ1bmN0aW9uIHBvc3QodXJsLCBkYXRhLCBoZWFkZXIpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcihhdXRoSGVhZGVyKGhlYWRlcikpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvIikuY29uY2F0KHVybCksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZSh1cmwsIGhlYWRlcikgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJERUxFVEUiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcihoZWFkZXIpKQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvIikuY29uY2F0KHVybCksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIHlvdXR1YmU6IGZ1bmN0aW9uIHlvdXR1YmUodmlkZW9JZCkgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJHRVQiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcigpKQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvdG9vbHMveW91dHViZS8iKS5jb25jYXQodmlkZW9JZCksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVlvdXR1YmUpOwogIH0sCiAgaXBnZW86IGZ1bmN0aW9uIGlwZ2VvKCkgewogICAgcmV0dXJuIGZldGNoKCJodHRwczovL2FwaS5pcGdlb2xvY2F0aW9uLmlvL2lwZ2VvP2FwaUtleT0iLmNvbmNhdChpcEdlb0FQSUtleSksIHsKICAgICAgbWV0aG9kOiAiR0VUIgogICAgfSkudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfQp9OwpleHBvcnQgdmFyIHVzZXJTZXJ2aWNlID0gewogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcigpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICB9KQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvdXNlcnMvYXV0aGVudGljYXRlIiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIC8vIGxvZ2luIHN1Y2Nlc3NmdWwgaWYgdGhlcmUncyBhIGp3dCB0b2tlbiBpbiB0aGUgcmVzcG9uc2UKICAgICAgaWYgKHVzZXIudG9rZW4pIHsKICAgICAgICAvLyBzdG9yZSB1c2VyIGRldGFpbHMgYW5kIGp3dCB0b2tlbiBpbiBsb2NhbCBzdG9yYWdlIHRvIGtlZXAgdXNlciBsb2dnZWQgaW4gYmV0d2VlbiBwYWdlIHJlZnJlc2hlcwogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyIiwgSlNPTi5zdHJpbmdpZnkodXNlcikpOwogICAgICB9CgogICAgICByZXR1cm4gdXNlcjsKICAgIH0pOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcigpKSwKICAgICAgYm9keTogIiIKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL2xvZ291dCIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBmb3Jnb3RQYXNzd29yZDogZnVuY3Rpb24gZm9yZ290UGFzc3dvcmQodXNlcm5hbWUsIGVtYWlsKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICBlbWFpbDogZW1haWwKICAgICAgfSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL2ZvcmdvdCIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICByZXNldFBhc3N3b3JkOiBmdW5jdGlvbiByZXNldFBhc3N3b3JkKHVzZXJuYW1lLCBjb2RlLCBwYXNzd29yZCkgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgaGVhZGVyczogZm9ybWF0SGVhZGVyKCksCiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgY29kZTogY29kZSwKICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgfSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL3Jlc2V0IiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXNlcikKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL3JlZ2lzdGVyIiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIGNoZWNrVXNlcm5hbWU6IGZ1bmN0aW9uIGNoZWNrVXNlcm5hbWUodXNlcm5hbWUpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcigpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lCiAgICAgIH0pCiAgICB9OwogICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChhY3RpdmVBUEkoKSwgIi91c2Vycy9hdmFpbGFibGUiKSwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oaGFuZGxlUmVzcG9uc2UpOwogIH0KfTsKCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICB2YXIgZGF0YSA9IHRleHQgJiYgSlNPTi5wYXJzZSh0ZXh0KTsKCiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgIC8vIGF1dG8gbG9nb3V0IGlmIDQwMSByZXNwb25zZSByZXR1cm5lZCBmcm9tIGFwaQogICAgICAgIGh0dHBTZXJ2aWNlLmxvZ291dCgpOwogICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTsKICAgICAgfQoKICAgICAgdmFyIGVycm9yID0gZGF0YSAmJiBkYXRhLm1lc3NhZ2UgfHwgcmVzcG9uc2Uuc3RhdHVzVGV4dDsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0KCiAgICByZXR1cm4gZGF0YTsKICB9KTsKfQoKZnVuY3Rpb24gaGFuZGxlWW91dHViZShyZXNwb25zZSkgewogIHJldHVybiByZXNwb25zZS50ZXh0KCkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgdmFyIGluZm8gPSB0ZXh0Lm1hdGNoKC8oPzw9PnZhciB5dEluaXRpYWxQbGF5ZXJSZXNwb25zZSA9KSguKikoPz07dmFyIG1ldGEpL2kpOwogICAgcmV0dXJuIGluZm8gJiYgaW5mby5sZW5ndGggPyBKU09OLnBhcnNlKGluZm9bMF0pIDogbnVsbDsKICB9KTsKfQ=="},{"version":3,"sources":["/home/ernst/Desktop/IPTV-Tools/src/services/http.js"],"names":["authHeader","formatHeader","activeAPI","ipGeoAPIKey","httpService","get","url","header","requestOptions","method","headers","fetch","then","handleResponse","put","data","body","JSON","stringify","post","delete","youtube","videoId","handleYoutube","ipgeo","userService","login","username","password","user","token","localStorage","setItem","logout","forgotPassword","email","resetPassword","code","register","checkUsername","response","text","parse","ok","status","location","reload","error","message","statusText","Promise","reject","info","match","length"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,SAAnC,QAAoD,YAApD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,GADyB,eACrBC,GADqB,EAChBC,MADgB,EACR;AACf,QAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,CAACO,MAAD,CAAX;AAFA,KAAvB;AAIA,WAAOI,KAAK,WAAIT,SAAS,EAAb,cAAmBI,GAAnB,GAA0BE,cAA1B,CAAL,CAA+CI,IAA/C,CAAoDC,cAApD,CAAP;AACD,GAPwB;AAQzBC,EAAAA,GARyB,eAQrBR,GARqB,EAQhBS,IARgB,EAQVR,MARU,EAQF;AACrB,QAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,CAACO,MAAD,CAAX,CAFA;AAGrBS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHe,KAAvB;AAMA,WAAOJ,KAAK,WAAIT,SAAS,EAAb,cAAmBI,GAAnB,GAA0BE,cAA1B,CAAL,CAA+CI,IAA/C,CAAoDC,cAApD,CAAP;AACD,GAhBwB;AAiBzBM,EAAAA,IAjByB,gBAiBpBb,GAjBoB,EAiBfS,IAjBe,EAiBTR,MAjBS,EAiBD;AACtB,QAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,CAACO,MAAD,CAAX,CAFA;AAGrBS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHe,KAAvB;AAMA,WAAOJ,KAAK,WAAIT,SAAS,EAAb,cAAmBI,GAAnB,GAA0BE,cAA1B,CAAL,CAA+CI,IAA/C,CAAoDC,cAApD,CAAP;AACD,GAzBwB;AA0BzBO,EAAAA,MA1ByB,mBA0BlBd,GA1BkB,EA0BbC,MA1Ba,EA0BL;AAClB,QAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,QADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,CAACO,MAAD,CAAX;AAFA,KAAvB;AAKA,WAAOI,KAAK,WAAIT,SAAS,EAAb,cAAmBI,GAAnB,GAA0BE,cAA1B,CAAL,CAA+CI,IAA/C,CAAoDC,cAApD,CAAP;AACD,GAjCwB;AAkCzBQ,EAAAA,OAlCyB,mBAkCjBC,OAlCiB,EAkCR;AACf,QAAMd,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,EAAX;AAFA,KAAvB;AAKA,WAAOW,KAAK,WACPT,SAAS,EADF,4BACsBoB,OADtB,GAEVd,cAFU,CAAL,CAGLI,IAHK,CAGAW,aAHA,CAAP;AAID,GA5CwB;AA6CzBC,EAAAA,KA7CyB,mBA6CjB;AACN,WAAOb,KAAK,qDAA8CR,WAA9C,GAA6D;AACvEM,MAAAA,MAAM,EAAE;AAD+D,KAA7D,CAAL,CAEJG,IAFI,CAECC,cAFD,CAAP;AAGD;AAjDwB,CAApB;AAoDP,OAAO,IAAMY,WAAW,GAAG;AACzBC,EAAAA,KADyB,iBACnBC,QADmB,EACTC,QADS,EACC;AACxB,QAAMpB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,EAFA;AAGrBe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBS,QAAAA,QAAQ,EAAEA,QADS;AAEnBC,QAAAA,QAAQ,EAAEA;AAFS,OAAf;AAHe,KAAvB;AASA,WAAOjB,KAAK,WAAIT,SAAS,EAAb,0BAAsCM,cAAtC,CAAL,CACJI,IADI,CACCC,cADD,EAEJD,IAFI,CAEC,UAACiB,IAAD,EAAU;AACd;AACA,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACd;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACC,SAAL,CAAeW,IAAf,CAA7B;AACD;;AAED,aAAOA,IAAP;AACD,KAVI,CAAP;AAWD,GAtBwB;AAuBzBI,EAAAA,MAvByB,oBAuBhB;AACP,QAAMzB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,CAACD,UAAU,EAAX,CAFA;AAGrBgB,MAAAA,IAAI,EAAE;AAHe,KAAvB;AAMA,WAAOL,KAAK,WAAIT,SAAS,EAAb,oBAAgCM,cAAhC,CAAL,CAAqDI,IAArD,CACLC,cADK,CAAP;AAGD,GAjCwB;AAkCzBqB,EAAAA,cAlCyB,0BAkCVP,QAlCU,EAkCAQ,KAlCA,EAkCO;AAC9B,QAAM3B,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,EAFA;AAGrBe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBS,QAAAA,QAAQ,EAAEA,QADS;AAEnBQ,QAAAA,KAAK,EAAEA;AAFY,OAAf;AAHe,KAAvB;AASA,WAAOxB,KAAK,WAAIT,SAAS,EAAb,oBAAgCM,cAAhC,CAAL,CAAqDI,IAArD,CACLC,cADK,CAAP;AAGD,GA/CwB;AAgDzBuB,EAAAA,aAhDyB,yBAgDXT,QAhDW,EAgDDU,IAhDC,EAgDKT,QAhDL,EAgDe;AACtC,QAAMpB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,EAFA;AAGrBe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBS,QAAAA,QAAQ,EAAEA,QADS;AAEnBU,QAAAA,IAAI,EAAEA,IAFa;AAGnBT,QAAAA,QAAQ,EAAEA;AAHS,OAAf;AAHe,KAAvB;AAUA,WAAOjB,KAAK,WAAIT,SAAS,EAAb,mBAA+BM,cAA/B,CAAL,CAAoDI,IAApD,CACLC,cADK,CAAP;AAGD,GA9DwB;AA+DzByB,EAAAA,QA/DyB,oBA+DhBT,IA/DgB,EA+DV;AACb,QAAMrB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,EAFA;AAGrBe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,IAAf;AAHe,KAAvB;AAMA,WAAOlB,KAAK,WAAIT,SAAS,EAAb,sBAAkCM,cAAlC,CAAL,CAAuDI,IAAvD,CACLC,cADK,CAAP;AAGD,GAzEwB;AA0EzB0B,EAAAA,aA1EyB,yBA0EXZ,QA1EW,EA0ED;AACtB,QAAMnB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAET,YAAY,EAFA;AAGrBe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBS,QAAAA,QAAQ,EAAEA;AADS,OAAf;AAHe,KAAvB;AAQA,WAAOhB,KAAK,WAAIT,SAAS,EAAb,uBAAmCM,cAAnC,CAAL,CAAwDI,IAAxD,CACLC,cADK,CAAP;AAGD;AAtFwB,CAApB;;AAyFP,SAASA,cAAT,CAAwB2B,QAAxB,EAAkC;AAChC,SAAOA,QAAQ,CAACC,IAAT,GAAgB7B,IAAhB,CAAqB,UAAC6B,IAAD,EAAU;AACpC,QAAM1B,IAAI,GAAG0B,IAAI,IAAIxB,IAAI,CAACyB,KAAL,CAAWD,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACG,EAAd,EAAkB;AAChB,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACAxC,QAAAA,WAAW,CAAC6B,MAAZ;AACAY,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD;;AAED,UAAMC,KAAK,GAAIhC,IAAI,IAAIA,IAAI,CAACiC,OAAd,IAA0BR,QAAQ,CAACS,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;;AAED,WAAOhC,IAAP;AACD,GAdM,CAAP;AAeD;;AAED,SAASQ,aAAT,CAAuBiB,QAAvB,EAAiC;AAC/B,SAAOA,QAAQ,CAACC,IAAT,GAAgB7B,IAAhB,CAAqB,UAAC6B,IAAD,EAAU;AACpC,QAAIW,IAAI,GAAGX,IAAI,CAACY,KAAL,CACT,uDADS,CAAX;AAGA,WAAOD,IAAI,IAAIA,IAAI,CAACE,MAAb,GAAsBrC,IAAI,CAACyB,KAAL,CAAWU,IAAI,CAAC,CAAD,CAAf,CAAtB,GAA4C,IAAnD;AACD,GALM,CAAP;AAMD","sourcesContent":["import { authHeader, formatHeader, activeAPI } from \"../helpers\";\nimport { ipGeoAPIKey } from \"../constants/config\";\n\nexport const httpService = {\n  get(url, header) {\n    const requestOptions = {\n      method: \"GET\",\n      headers: formatHeader(authHeader(header)),\n    };\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  put(url, data, header) {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: formatHeader(authHeader(header)),\n      body: JSON.stringify(data),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  post(url, data, header) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(authHeader(header)),\n      body: JSON.stringify(data),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  delete(url, header) {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: formatHeader(authHeader(header)),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  youtube(videoId) {\n    const requestOptions = {\n      method: \"GET\",\n      headers: formatHeader(authHeader()),\n    };\n\n    return fetch(\n      `${activeAPI()}/tools/youtube/${videoId}`,\n      requestOptions\n    ).then(handleYoutube);\n  },\n  ipgeo() {\n    return fetch(`https://api.ipgeolocation.io/ipgeo?apiKey=${ipGeoAPIKey}`, {\n      method: \"GET\",\n    }).then(handleResponse);\n  },\n};\n\nexport const userService = {\n  login(username, password) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/authenticate`, requestOptions)\n      .then(handleResponse)\n      .then((user) => {\n        // login successful if there's a jwt token in the response\n        if (user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n\n        return user;\n      });\n  },\n  logout() {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(authHeader()),\n      body: \"\",\n    };\n\n    return fetch(`${activeAPI()}/users/logout`, requestOptions).then(\n      handleResponse\n    );\n  },\n  forgotPassword(username, email) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        email: email,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/forgot`, requestOptions).then(\n      handleResponse\n    );\n  },\n  resetPassword(username, code, password) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        code: code,\n        password: password,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/reset`, requestOptions).then(\n      handleResponse\n    );\n  },\n  register(user) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify(user),\n    };\n\n    return fetch(`${activeAPI()}/users/register`, requestOptions).then(\n      handleResponse\n    );\n  },\n  checkUsername(username) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/available`, requestOptions).then(\n      handleResponse\n    );\n  },\n};\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        httpService.logout();\n        location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nfunction handleYoutube(response) {\n  return response.text().then((text) => {\n    let info = text.match(\n      /(?<=>var ytInitialPlayerResponse =)(.*)(?=;var meta)/i\n    );\n    return info && info.length ? JSON.parse(info[0]) : null;\n  });\n}\n"]}]}