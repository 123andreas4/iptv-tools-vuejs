{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/tickets/answered.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/tickets/answered.vue","mtime":1620559891251},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21lZGlhL2VybnN0LzYzYmNlNDNjLTVlNTEtNGJmMS1hNjExLTNhZmRmMzJhYzZmNi9WdWVKUy9JUFRWLVRvb2xzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIHZ1ZS9uby1zaWRlLWVmZmVjdHMtaW4tY29tcHV0ZWQtcHJvcGVydGllcyAqLwppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIi4uLy4uLy4uL3NlcnZpY2VzL2VidXMiOwppbXBvcnQgeyBodHRwU2VydmljZSB9IGZyb20gIi4uLy4uLy4uL3NlcnZpY2VzL2h0dHAiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IGxhbmd1YWdlcyB9IGZyb20gIi4uLy4uLy4uL2hlbHBlcnMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaDogbnVsbCwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgZnJvbTogMCwKICAgICAgdG86IDAsCiAgICAgIHRvdGFsOiAwLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgZWRpdG9yOiBmYWxzZSwKICAgICAgZWRpdG9yVGlja2V0OiBudWxsLAogICAgICBlZGl0b3JNZXNzYWdlOiAiIiwKICAgICAgdGlja2V0czogW10sCiAgICAgIGxhbmd1YWdlczogbGFuZ3VhZ2VzLAogICAgICBmaWVsZHM6IFt7CiAgICAgICAga2V5OiAidXNlcl9pZCIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInVzZXJzLmlkIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogInByaW9yaXR5IiwKICAgICAgICBsYWJlbDogdGhpcy4kdCgidGlja2V0cy5wcmlvcml0eSIpLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJkZXBhcnRlbWVudCIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInRpY2tldHMuZGVwYXJ0ZW1lbnQiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAidGl0bGUiLAogICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ0aWNrZXRzLnRpdGxlIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogImNyZWF0ZWQiLAogICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ1c2Vycy5jcmVhdGVkIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogImxhc3RfdXBkYXRlZCIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInVzZXJzLmxhc3QtdXBkYXRlZCIpLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJub3RlcyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInRpY2tldHMubm90ZXMiKSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAidGFncyIsCiAgICAgICAgbGFiZWw6IHRoaXMuJHQoInRpY2tldHMudGFncyIpLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJsYW5nIiwKICAgICAgICBsYWJlbDogdGhpcy4kdCgidGlja2V0cy5sYW5nIiksCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogImFjdGlvbnMiLAogICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ1c2Vycy5hY3Rpb25zIiksCiAgICAgICAgc29ydGFibGU6IGZhbHNlLAogICAgICAgIHRoQ2xhc3M6ICJ0ZXh0LXJpZ2h0IiwKICAgICAgICB0ZENsYXNzOiAidGV4dC1yaWdodCIKICAgICAgfV0sCiAgICAgIHByaW9yaXRpZXM6IFt7CiAgICAgICAgdGV4dDogdGhpcy4kdCgicHJpb3JpdHkuMCIpLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJwcmlvcml0eS4xIiksCiAgICAgICAgdmFsdWU6IDEKICAgICAgfSwgewogICAgICAgIHRleHQ6IHRoaXMuJHQoInByaW9yaXR5LjIiKSwKICAgICAgICB2YWx1ZTogMgogICAgICB9LCB7CiAgICAgICAgdGV4dDogdGhpcy4kdCgicHJpb3JpdHkuMyIpLAogICAgICAgIHZhbHVlOiAzCiAgICAgIH1dLAogICAgICBkZXBhcnRlbWVudHM6IFt7CiAgICAgICAgdGV4dDogdGhpcy4kdCgiZGVwYXJ0ZW1lbnQuMCIpLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJkZXBhcnRlbWVudC4xIiksCiAgICAgICAgdmFsdWU6IDEKICAgICAgfSwgewogICAgICAgIHRleHQ6IHRoaXMuJHQoImRlcGFydGVtZW50LjIiKSwKICAgICAgICB2YWx1ZTogMgogICAgICB9LCB7CiAgICAgICAgdGV4dDogdGhpcy4kdCgiZGVwYXJ0ZW1lbnQuMyIpLAogICAgICAgIHZhbHVlOiAzCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiB0aGlzLiR0KCJkZXBhcnRlbWVudC40IiksCiAgICAgICAgdmFsdWU6IDQKICAgICAgfSwgewogICAgICAgIHRleHQ6IHRoaXMuJHQoImRlcGFydGVtZW50LjUiKSwKICAgICAgICB2YWx1ZTogNQogICAgICB9XQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWyJjdXJyZW50VXNlciIsICJzZXR0aW5ncyJdKSksIHt9LCB7CiAgICBwZXJQYWdlOiBmdW5jdGlvbiBwZXJQYWdlKCkgewogICAgICByZXR1cm4gdGhpcy5zZXR0aW5ncy5wZXJQYWdlOwogICAgfSwKICAgIHNlYXJjaEZpbHRlcmVkOiBmdW5jdGlvbiBzZWFyY2hGaWx0ZXJlZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnNlYXJjaCA9PT0gbnVsbCkgewogICAgICAgIHJldHVybiB0aGlzLnRpY2tldHM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cCh0aGlzLnNlYXJjaCwgImkiKTsKICAgICAgICByZXR1cm4gdGhpcy50aWNrZXRzLmZpbHRlcihmdW5jdGlvbiAodGlja2V0KSB7CiAgICAgICAgICByZXR1cm4gU3RyaW5nKHRpY2tldC51c2VyX2lkKS5tYXRjaChyZSkgfHwgU3RyaW5nKHRpY2tldC50aXRsZSkubWF0Y2gocmUpIHx8IF90aGlzLmZvcm1hdERhdGUodGlja2V0LmNyZWF0ZWQpLm1hdGNoKHJlKSB8fCBfdGhpcy5mb3JtYXREYXRlKHRpY2tldC5sYXN0X3VwZGF0ZWQpLm1hdGNoKHJlKSB8fCBKU09OLnN0cmluZ2lmeSh0aWNrZXQuY29udmVyc2F0aW9uKS5tYXRjaChyZSkgfHwgU3RyaW5nKHRpY2tldC5hdHRhY2htZW50cykubWF0Y2gocmUpIHx8IFN0cmluZyh0aWNrZXQubm90ZXMpLm1hdGNoKHJlKSB8fCBKU09OLnN0cmluZ2lmeSh0aWNrZXQudGFncykubWF0Y2gocmUpIHx8IF90aGlzLiR0KCJwcmlvcml0eS4iLmNvbmNhdCh0aWNrZXQucHJpb3JpdHkpKS5tYXRjaChyZSkgfHwgX3RoaXMuJHQoImRlcGFydGVtZW50LiIuY29uY2F0KHRpY2tldC5kZXBhcnRlbWVudCkpLm1hdGNoKHJlKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHBhZ2VkOiBmdW5jdGlvbiBwYWdlZCgpIHsKICAgICAgdGhpcy50b3RhbCA9IHRoaXMuc2VhcmNoRmlsdGVyZWQubGVuZ3RoOwogICAgICB0aGlzLmZyb20gPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5wZXJQYWdlOwogICAgICB0aGlzLnRvID0gdGhpcy5mcm9tICsgdGhpcy5wZXJQYWdlID4gdGhpcy50b3RhbCA/IHRoaXMudG90YWwgOiB0aGlzLmZyb20gKyB0aGlzLnBlclBhZ2U7CiAgICAgIHJldHVybiB0aGlzLnNlYXJjaEZpbHRlcmVkLnNsaWNlKHRoaXMuZnJvbSwgdGhpcy50byk7CiAgICB9LAogICAgdXNlclRpdGxlOiBmdW5jdGlvbiB1c2VyVGl0bGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRVc2VyLnByb2ZpbGUgJiYgdGhpcy5jdXJyZW50VXNlci5wcm9maWxlLm5hbWVfZmlyc3QubGVuZ3RoID4gMCAmJiB0aGlzLmN1cnJlbnRVc2VyLnByb2ZpbGUubmFtZV9sYXN0Lmxlbmd0aCA+IDAgPyAiIi5jb25jYXQodGhpcy5jdXJyZW50VXNlci5wcm9maWxlLm5hbWVfZmlyc3QsICIgIikuY29uY2F0KHRoaXMuY3VycmVudFVzZXIucHJvZmlsZS5uYW1lX2xhc3QpIDogdGhpcy5jdXJyZW50VXNlci51c2VyLnVzZXJuYW1lOwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gbmV3IERhdGUoZGF0ZSkudG9Mb2NhbGVTdHJpbmcodGhpcy4kdCgiZGF0ZS5sb2NhbGUiKSwgdGhpcy5kYXRlT3B0aW9ucyk7CiAgICB9LAogICAgcHJpb3JpdHlWYXJpYW50OiBmdW5jdGlvbiBwcmlvcml0eVZhcmlhbnQocHJpb3JpdHkpIHsKICAgICAgc3dpdGNoIChwcmlvcml0eSkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIHJldHVybiAic3VjY2VzcyI7CgogICAgICAgIGNhc2UgMToKICAgICAgICAgIHJldHVybiAiaW5mbyI7CgogICAgICAgIGNhc2UgMjoKICAgICAgICAgIHJldHVybiAid2FybmluZyI7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJldHVybiAiZGFuZ2VyIjsKICAgICAgfQogICAgfSwKICAgIHJvbGVWYXJpYW50OiBmdW5jdGlvbiByb2xlVmFyaWFudChyb2xlKSB7CiAgICAgIHN3aXRjaCAocm9sZSkgewogICAgICAgIGNhc2UgMToKICAgICAgICBjYXNlIDE5ODU6CiAgICAgICAgICByZXR1cm4gImRhbmdlciI7CgogICAgICAgIGNhc2UgMjoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgY2FzZSA1OgogICAgICAgICAgcmV0dXJuICJpbmZvIjsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgcmV0dXJuICJwcmltYXJ5IjsKICAgICAgfQogICAgfSwKICAgIGxvYWRUaWNrZXRzOiBmdW5jdGlvbiBsb2FkVGlja2V0cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGh0dHBTZXJ2aWNlLmdldCgiYWRtaW5pc3RyYXRpb24vdGlja2V0cy8xIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXMyLnRpY2tldHMgPSByZXMuZGF0YTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIF90aGlzMi4kbm90aWZ5KCJlcnJvciIsIF90aGlzMi4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXMyLiR0KCJ0aWNrZXRzLmxvYWQtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVRpY2tldDogZnVuY3Rpb24gZGVsZXRlVGlja2V0KGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgaHR0cFNlcnZpY2UucG9zdCgiYWRtaW5pc3RyYXRpb24vdGlja2V0L2RlbGV0ZSIsIHsKICAgICAgICBpZDogaWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXMzLiRub3RpZnkoInByaW1hcnkiLCBfdGhpczMuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCBfdGhpczMuJHQoInRpY2tldHMuZGVsZXRlLXN1Y2Nlc3MiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXMzLmxvYWRUaWNrZXRzKCk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBfdGhpczMuJG5vdGlmeSgiZXJyb3IiLCBfdGhpczMuJHQoInByb2ZpbGUuZmFpbGVkIiksIF90aGlzMy4kdCgidGlja2V0cy5kZWxldGUtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGNsb3NlVGlja2V0OiBmdW5jdGlvbiBjbG9zZVRpY2tldChpZCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGh0dHBTZXJ2aWNlLnBvc3QoImFkbWluaXN0cmF0aW9uL3RpY2tldC9jbG9zZSIsIHsKICAgICAgICBpZDogaWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM0LmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXM0LiRub3RpZnkoInByaW1hcnkiLCBfdGhpczQuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCBfdGhpczQuJHQoInRpY2tldHMuc2F2ZS1zdWNjZXNzIiksICJsYS11c2VyLXNoaWVsZCIsIHsKICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzNC5sb2FkVGlja2V0cygpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNC5pc0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgX3RoaXM0LiRub3RpZnkoImVycm9yIiwgX3RoaXM0LiR0KCJwcm9maWxlLmZhaWxlZCIpLCBfdGhpczQuJHQoInRpY2tldHMuc2F2ZS1lcnJvciIpLCAibGEtdXNlci1zaGllbGQiLCB7CiAgICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgcmVwbHlUaWNrZXQ6IGZ1bmN0aW9uIHJlcGx5VGlja2V0KHRpY2tldCkgewogICAgICB0aGlzLmVkaXRvclRpY2tldCA9IE9iamVjdC5hc3NpZ24oe30sIHRpY2tldCk7CiAgICAgIHRoaXMuZWRpdG9yTWVzc2FnZSA9ICIiOwogICAgICB0aGlzLmVkaXRvciA9IHRydWU7CiAgICB9LAogICAgY2FuY2VsVGlja2V0OiBmdW5jdGlvbiBjYW5jZWxUaWNrZXQoKSB7CiAgICAgIHRoaXMuZWRpdG9yID0gZmFsc2U7CiAgICB9LAogICAgc2F2ZVRpY2tldDogZnVuY3Rpb24gc2F2ZVRpY2tldCgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB2YXIgdGlja2V0ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5lZGl0b3JUaWNrZXQpOwogICAgICBkZWxldGUgdGlja2V0LmlkOwogICAgICB0aWNrZXQudGlja2V0X3N0YXR1cyA9IDE7CiAgICAgIHRpY2tldC5sYXN0X3VwZGF0ZWQgPSBuZXcgRGF0ZSgpOwoKICAgICAgaWYgKHRoaXMuZWRpdG9yTWVzc2FnZS5sZW5ndGgpIHsKICAgICAgICB0aWNrZXQuY29udmVyc2F0aW9uLnVuc2hpZnQoewogICAgICAgICAgZGF0ZTogbmV3IERhdGUoKSwKICAgICAgICAgIG1lc3NhZ2U6IHRoaXMuZWRpdG9yTWVzc2FnZSwKICAgICAgICAgIHVzZXI6IHsKICAgICAgICAgICAgaWNvbjogImxhLXVzZXItdGllIiwKICAgICAgICAgICAgcm9sZTogdGhpcy5jdXJyZW50VXNlci51c2VyLnJvbGUsCiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnVzZXJUaXRsZQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICB2YXIgaWQgPSB0aGlzLmVkaXRvclRpY2tldC5pZDsKICAgICAgaHR0cFNlcnZpY2UucG9zdCgiYWRtaW5pc3RyYXRpb24vdGlja2V0L3VwZGF0ZSIsIHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdGlja2V0OiB0aWNrZXQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM1LmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgX3RoaXM1LiRub3RpZnkoInByaW1hcnkiLCBfdGhpczUuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCBfdGhpczUuJHQoInRpY2tldHMuc2F2ZS1zdWNjZXNzIiksICJsYS11c2VyLXNoaWVsZCIsIHsKICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzNS5lZGl0b3IgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczUubG9hZFRpY2tldHMoKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuaXNMb2FkaW5nID0gZmFsc2U7CgogICAgICAgIF90aGlzNS4kbm90aWZ5KCJlcnJvciIsIF90aGlzNS4kdCgicHJvZmlsZS5mYWlsZWQiKSwgX3RoaXM1LiR0KCJ0aWNrZXRzLnNhdmUtZXJyb3IiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNlYXJjaFRpY2tldDogZnVuY3Rpb24gc2VhcmNoVGlja2V0KHNlYXJjaCkgewogICAgICBpZiAoc2VhcmNoLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuc2VhcmNoID0gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlYXJjaCA9IHNlYXJjaDsKICAgICAgfQogICAgfSwKICAgIHByaW50VGlja2V0czogZnVuY3Rpb24gcHJpbnRUaWNrZXRzKCkgewogICAgICBpZiAodGhpcy5lZGl0b3IpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGlja2V0IikucHJpbnQoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYW5zd2VyZWQtdGlja2V0cyIpLnByaW50KCk7CiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMubG9hZFRpY2tldHMoKTsKICAgIEV2ZW50QnVzLiRvbigicmVmcmVzaCIsIHRoaXMubG9hZFRpY2tldHMpOwogICAgRXZlbnRCdXMuJG9uKCJzZWFyY2giLCB0aGlzLnNlYXJjaFRpY2tldCk7CiAgICBFdmVudEJ1cy4kb24oInByaW50IiwgdGhpcy5wcmludFRpY2tldHMpOwogICAgRXZlbnRCdXMuJG9uKCJzYXZlIiwgdGhpcy5zYXZlVGlja2V0KTsKICAgIEV2ZW50QnVzLiRvbigiY2FuY2VsIiwgdGhpcy5jYW5jZWxUaWNrZXQpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIEV2ZW50QnVzLiRvZmYoInJlZnJlc2giLCB0aGlzLmxvYWRUaWNrZXRzKTsKICAgIEV2ZW50QnVzLiRvZmYoInNlYXJjaCIsIHRoaXMuc2VhcmNoVGlja2V0KTsKICAgIEV2ZW50QnVzLiRvZmYoInByaW50IiwgdGhpcy5wcmludFRpY2tldHMpOwogICAgRXZlbnRCdXMuJG9mZigic2F2ZSIsIHRoaXMuc2F2ZVRpY2tldCk7CiAgICBFdmVudEJ1cy4kb2ZmKCJjYW5jZWwiLCB0aGlzLmNhbmNlbFRpY2tldCk7CiAgfSwKICB3YXRjaDogewogICAgZnJvbTogZnVuY3Rpb24gZnJvbSh2YWwpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoInVwZGF0ZS1mcm9tIiwgdmFsKTsKICAgIH0sCiAgICB0bzogZnVuY3Rpb24gdG8odmFsKSB7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCJ1cGRhdGUtdG8iLCB2YWwpOwogICAgfSwKICAgIHRvdGFsOiBmdW5jdGlvbiB0b3RhbCh2YWwpIHsKICAgICAgRXZlbnRCdXMuJGVtaXQoInVwZGF0ZS10b3RhbCIsIHZhbCk7CiAgICB9LAogICAgZWRpdG9yOiBmdW5jdGlvbiBlZGl0b3IodmFsKSB7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCJ1cGRhdGUtZWRpdG9yIiwgdmFsKTsKICAgIH0KICB9Cn07"},null]}