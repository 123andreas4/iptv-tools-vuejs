{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js!/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernst/Desktop/IPTV-Tools/src/views/app/xtream/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/views/app/xtream/editor.vue","mtime":1623247093223},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editor.vue"],"names":[],"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","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"editor\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <!--  \n\n      FIND / REPLACE\n\n    -->\n    <erd-modal\n      v-show=\"findReplace.modal\"\n      @close=\"findAndReplaceModal(false)\"\n      :title=\"$t('editor.find-replace')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.search-for\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findReplace.from\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.replace-with\") }}</label>\n        <erd-input class=\"mt-1 mb-2 w-100\" v-model=\"findReplace.to\"></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.options\") }}</label>\n        <erd-checkbox class=\"mt-1\" v-model=\"findReplace.replaceAll\">{{\n          $t(\"editor.replace-all-occurences\")\n        }}</erd-checkbox>\n        <erd-checkbox class=\"mb-2\" v-model=\"findReplace.ignoreCase\">{{\n          $t(\"editor.ignore-case\")\n        }}</erd-checkbox>\n        <template v-if=\"findReplace.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"findReplace.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findAndReplaceModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"findAndReplace\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      PREFIX / SUFFIX\n\n    -->\n    <erd-modal\n      v-show=\"prefixSuffix.modal\"\n      @close=\"prefixSuffixModal(false)\"\n      :title=\"$t('editor.add-prefix-suffix')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.prefix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.prefix\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.suffix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.suffix\"\n        ></erd-input>\n        <template v-if=\"prefixSuffix.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"prefixSuffix.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"prefixSuffixModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"addPrefixSuffix\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      CONVERT CASE\n\n    -->\n    <erd-modal\n      v-show=\"convertCase.modal\"\n      @close=\"convertCaseModal(false)\"\n      :title=\"$t('editor.change-case')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"d-block mb-2\">{{ $t(\"editor.options\") }}</label>\n        <erd-radiobutton :value=\"0\" v-model=\"convertCase.method\">{{\n          $t(\"editor.title-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton :value=\"1\" v-model=\"convertCase.method\">{{\n          $t(\"editor.upper-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton class=\"mb-2\" :value=\"2\" v-model=\"convertCase.method\">{{\n          $t(\"editor.lower-case\")\n        }}</erd-radiobutton>\n        <template v-if=\"convertCase.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"convertCase.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"convertCaseModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"changeCase\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT GROUP\n\n    -->\n    <erd-modal\n      v-show=\"groupEditor.modal\"\n      @close=\"editGroupModal(false)\"\n      :title=\"$t('editor.edit-group')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"canEditGroupType\">\n          <label class=\"w-100\">{{ $t(\"editor.group-type\") }}</label>\n          <erd-select\n            class=\"w-100 mt-1 mb-2\"\n            :items=\"groupTypes\"\n            v-model=\"groupEditor.group_type\"\n            v-if=\"groupEditor.modal\"\n          ></erd-select>\n        </template>\n        <label class=\"w-100\">{{ $t(\"editor.group-name\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_name\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_parent_code\"\n        ></erd-input>\n        <erd-checkbox class=\"mb-2\" v-model=\"groupEditor.group_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editGroupModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editGroup\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT STREAM\n\n    -->\n    <erd-modal\n      v-show=\"streamEditor.modal\"\n      @close=\"editStreamModal(false)\"\n      :title=\"$t('editor.edit-stream')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"activeGroupType === 1\">\n          <label class=\"w-100\">{{ $t(\"editor.name-placeholder\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.epg-channel-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_id\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.stream-icon\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-stream-icon\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n          <label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-3 w-100\"\n            v-model=\"streamEditor.stream_parent_code\"\n          ></erd-input>\n          <erd-checkbox\n            class=\"mb-1\"\n            v-model=\"streamEditor.stream_radio\"\n            :true-value=\"1\"\n            :false-value=\"0\"\n            >{{ $t(\"editor.radio\") }}</erd-checkbox\n          >\n        </template>\n        <template v-if=\"activeGroupType === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.movie-name\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-year\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_year\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.tmdb-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.tmdb_id\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-poster\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-movie-poster\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n        </template>\n        <erd-checkbox class=\"mb-1\" v-model=\"streamEditor.stream_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editStreamModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editStream\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      SAVE CHANGES\n\n    -->\n    <erd-modal\n      v-show=\"saveChanges.modal\"\n      @close=\"saveChangesModal(false)\"\n      :title=\"$t('editor.save-changes')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <p>{{ $t(\"editor.save-changes-text\") }}</p>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"saveChangesModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"saveChangesModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      RADIOBROWSER\n\n    -->\n    <erd-modal\n      v-show=\"radioBrowser.modal\"\n      @close=\"radioBrowserModal(false)\"\n      :title=\"$t('editor.import-radiobrowser')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\" for=\"radiobrowser-search\">{{\n          $t(\"menu.search\")\n        }}</label>\n        <erd-input\n          id=\"radiobrowser-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"radioBrowser.search\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <div class=\"radiobrowser-stations\">\n          <p class=\"mb-1 pb-0\" v-if=\"radioBrowser.results.length\">\n            {{ $t(\"editor.select-radio-stations\") }}\n          </p>\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              :class=\"{ selected: radioBrowser.active.includes(index) }\"\n              v-for=\"(station, index) in radioBrowser.results\"\n              :key=\"`radiobrowser-station-${index}-${station.name}`\"\n              @click.ctrl=\"toggleRadiobrowserSelection(index)\"\n              @click.shift=\"selectRadiobrowserRangeSelection(index)\"\n              @click.exact=\"selectRadiobrowserSelection(index)\"\n            >\n              <span class=\"station-name\">{{ station.name }}</span>\n              <span class=\"text-muted text-small ml-1\">{{\n                station.language.replace(/\\b\\w/g, (l) => l.toUpperCase())\n              }}</span>\n              <span class=\"text-muted text-small float-right\"\n                >{{ station.codec }} - {{ station.bitrate }}</span\n              >\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"radioBrowserModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"radioBrowserModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      SOUNDCLOUD\n\n    -->\n    <erd-modal\n      v-show=\"soundcloud.modal\"\n      @close=\"soundcloudModal(false)\"\n      :title=\"$t('editor.import-soundcloud')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\" for=\"soundcloud-url\">{{\n          $t(\"radio.soundcloud-url\")\n        }}</label>\n        <erd-input\n          id=\"soundcloud-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"soundcloud.url\"\n          :placeholder=\"$t('radio.soundcloud-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"soundcloud.track\"\n        >\n          <img\n            :src=\"\n              soundcloud.track.artwork_url.replace('large.jpg', 't500x500.jpg')\n            \"\n            class=\"cover mt-2\"\n          />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ soundcloud.track.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(soundcloud.track.likes_count) }}\n              {{ $t(\"radio.likes\") }} <small>•</small>\n              {{ formatDateYoutube(soundcloud.track.display_date) }}\n              <small>•</small>\n              {{ formatSeconds(soundcloud.track.duration / 1000) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"soundcloudModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"soundcloudModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      APP MENU\n\n    -->\n    <erd-app-menu icon=\"la-tools\">\n      <div class=\"pt-3 select-none\" v-if=\"playlistSelected\">\n        <erd-collapse :title=\"$t('editor.sort-groups')\" key=\"sort-groups\" small>\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeUp\"\n                ><i class=\"las la-sort-numeric-up mr-1\"></i\n                >{{ $t(\"editor.sort-type-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeDown\"\n                ><i class=\"las la-sort-numeric-down mr-1\"></i\n                >{{ $t(\"editor.sort-type-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.sort-streams')\"\n          key=\"sort-streams\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenUp\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenDown\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-radio')\"\n          key=\"import-radio\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"radioBrowserModal(true)\"\n                ><i class=\"las la-broadcast-tower mr-1\"></i\n                >{{ $t(\"editor.import-radiobrowser\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-music')\"\n          key=\"import-music\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"soundcloudModal(true)\"\n                ><i class=\"lab la-soundcloud mr-1\"></i\n                >{{ $t(\"editor.import-soundcloud\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n      </div>\n    </erd-app-menu>\n    <erd-row class=\"m-0 p-0\" v-if=\"playlistSelected\">\n      <!--  \n\n        GROUPS\n\n      -->\n      <erd-col xl=\"4\" lg=\"4\" md=\"12\" class=\"pr-lg-0\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.groups\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredGroups.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"groupContextMenu\"\n          depth=\"1\"\n          ref=\"context-group\"\n        ></erd-context-menu>\n        <div @contextmenu.prevent=\"openContext('context-group')\">\n          <draggable\n            v-model=\"playlistEditor.groups\"\n            v-bind=\"groupDragOptions\"\n            @start=\"dragGroup = true\"\n            @end=\"dragGroup = false\"\n            @change=\"groupDragChanged\"\n            handle=\".handle\"\n          >\n            <transition-group\n              type=\"transition\"\n              :name=\"!dragGroup ? 'flip-list' : null\"\n            >\n              <div\n                class=\"form-control editor-group\"\n                :class=\"{\n                  selected: activeGroups.includes(group.id),\n                  active: activeGroup === group.id,\n                  hidden: group.group_is_hidden,\n                }\"\n                v-for=\"(group, index) in filteredGroups\"\n                :key=\"`group-${index}`\"\n                @click.ctrl=\"toggleGroupSelection(group.id)\"\n                @click.shift=\"selectGroupRangeSelection(group.id)\"\n                @click.exact=\"selectGroupSelection(group.id)\"\n                @dblclick=\"groupDoubleClick\"\n              >\n                <i class=\"las la-braille handle mr-2\"></i>\n                <a href=\"#\" @click.prevent=\"activeGroup = group.id\">{{\n                  group.group_name\n                }}</a>\n                <span class=\"float-right\">{{ group.streams }}</span>\n              </div>\n            </transition-group>\n          </draggable>\n        </div>\n      </erd-col>\n      <!--  \n\n        STREAMS\n\n      -->\n      <erd-col xl=\"8\" lg=\"8\" md=\"12\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.streams\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredStreams.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"streamContextMenu\"\n          depth=\"1\"\n          ref=\"context-stream\"\n        ></erd-context-menu>\n        <!-- LIVE -->\n        <template v-if=\"activeGroupType === 1 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              v-bind=\"streamDragOptions\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              handle=\".handle\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}-${stream.id}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{ stream.stream_tvg_name }}</span>\n                  <span class=\"text-muted\">{{ stream.stream_tvg_id }}</span>\n                  <i class=\"ml-2 las la-music\" v-if=\"stream.stream_radio\"></i>\n                  <img\n                    class=\"stream-icon\"\n                    v-if=\"stream.stream_tvg_logo\"\n                    :src=\"stream.stream_tvg_logo\"\n                  />\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- MOVIES -->\n        <template v-if=\"activeGroupType === 2 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              v-bind=\"streamDragOptions\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              handle=\".handle\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{ stream.movie_name }}</span>\n                  <span class=\"text-muted\">{{ stream.movie_year }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- SERIES -->\n        <template v-if=\"activeGroupType === 3 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              v-bind=\"streamDragOptions\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              handle=\".handle\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{ stream.serie_name }}</span>\n                  <span class=\"text-muted mr-1\">{{\n                    $t(\"editor.season\").format(stream.serie_season)\n                  }}</span>\n                  <span class=\"text-muted\">{{\n                    $t(\"editor.episode\").format(stream.serie_episode)\n                  }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n      </erd-col>\n    </erd-row>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-escape */\n\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\nimport draggable from \"vuedraggable\";\nimport { SubscriptionType } from \"../../../constants/config\";\n\nexport default {\n  components: {\n    draggable,\n  },\n  data() {\n    return {\n      activeTab: 0,\n      activeGroup: -1,\n      activeGroups: [],\n      activeStream: -1,\n      activeStreams: [],\n      dragGroup: false,\n      dragStream: false,\n      editor: false,\n      search: null,\n      isLoading: false,\n      playlistEditor: {\n        id: undefined,\n        playlist: null,\n        groups: [],\n        streams: [],\n        changed: false,\n      },\n      findReplace: {\n        type: 0,\n        modal: false,\n        from: \"\",\n        to: \"\",\n        replaceAll: false,\n        ignoreCase: false,\n        selectedOnly: 0,\n      },\n      prefixSuffix: {\n        type: 0,\n        modal: false,\n        prefix: \"\",\n        suffix: \"\",\n        selectedOnly: 0,\n      },\n      convertCase: {\n        type: 0,\n        modal: false,\n        method: 0,\n        selectedOnly: 0,\n      },\n      groupEditor: {\n        modal: false,\n        id: 0,\n        group_name: \"\",\n        group_parent_code: \"\",\n        group_type: 1,\n        group_is_hidden: 0,\n      },\n      streamEditor: {\n        modal: false,\n        id: -1,\n        stream_tvg_name: \"\",\n        stream_tvg_id: \"\",\n        stream_tvg_logo: \"\",\n        stream_parent_code: \"\",\n        stream_radio: 0,\n        stream_is_hidden: 0,\n        movie_name: \"\",\n        movie_year: \"\",\n        serie_name: \"\",\n        serie_season: 0,\n        serie_episode: 0,\n      },\n      radioBrowser: {\n        modal: false,\n        bounce: null,\n        active: [],\n        search: \"\",\n        results: [],\n      },\n      soundcloud: {\n        modal: false,\n        bounce: null,\n        url: \"\",\n        track: null,\n      },\n      saveChanges: {\n        modal: false,\n      },\n      groupTypes: [\n        { text: this.$t(\"xtream.live\"), value: 1 },\n        { text: this.$t(\"xtream.movies\"), value: 2 },\n        { text: this.$t(\"xtream.series\"), value: 3 },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"soundcloudClientId\"]),\n    searchFiltered() {\n      if (this.search === null) {\n        return this.accounts;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.accounts.filter((account) => {\n          return (\n            String(account.title).match(re) ||\n            String(account.host).match(re) ||\n            String(account.port).match(re) ||\n            String(account.username).match(re) ||\n            String(account.password).match(re) ||\n            this.formatDate(account.synced_at).match(re) ||\n            this.$t(`sync-interval.${account.sync_interval}`).match(re)\n          );\n        });\n      }\n    },\n    playlistSelected() {\n      return this.playlistEditor.id !== undefined;\n    },\n    lastSelectedGroup() {\n      return this.activeGroups[this.activeGroups.length - 1];\n    },\n    lastSelectedStream() {\n      return this.activeStreams[this.activeStreams.length - 1];\n    },\n    canEditGroupType() {\n      return (\n        this.groupEditor.id &&\n        this.getGroupWithId(this.groupEditor.id).streams == 0\n      );\n    },\n    groupDragOptions() {\n      return {\n        animation: 200,\n        group: \"groups\",\n        disabled: false,\n        ghostClass: \"ghost\",\n        multiDrag: true,\n        selectedClass: \"selected\",\n      };\n    },\n    streamDragOptions() {\n      return {\n        animation: 200,\n        group: \"streams\",\n        disabled: false,\n        ghostClass: \"ghost\",\n        multiDrag: true,\n        selectedClass: \"selected\",\n      };\n    },\n    subscriptionLimited() {\n      return (\n        this.currentUser.subscription &&\n        this.currentUser.subscription.subscription_type ==\n          SubscriptionType.Enthusiast\n      );\n    },\n    filteredGroups() {\n      if (this.subscriptionLimited) {\n        return this.playlistEditor.groups.filter(\n          (group) =>\n            group.group_is_removed !== 1 &&\n            group.source_group_type == 1 &&\n            group.group_type == 1\n        );\n      }\n      return this.playlistEditor.groups.filter(\n        (group) => group.group_is_removed !== 1\n      );\n    },\n    filteredStreams() {\n      return this.playlistEditor.streams.filter(\n        (group) => group.stream_is_removed !== 1\n      );\n    },\n    activeGroupType() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == this.activeGroup\n      );\n      return index > -1 ? this.playlistEditor.groups[index].group_type : 0;\n    },\n    groupContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-group\"),\n          onClick: vm.addGroup,\n        },\n        {\n          disabled: vm.activeGroups.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-group\"),\n          onClick: function () {\n            if (vm.activeGroups.length === 1) {\n              vm.editGroupModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeGroups = [...vm.playlistEditor.groups.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeGroups = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 1);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.toggleGroupVisibility();\n            }\n          },\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.deleteSelectedGroups();\n            }\n          },\n        },\n      ];\n    },\n    streamContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-stream\"),\n          onClick: vm.addGroup,\n        },\n        {\n          disabled: vm.activeStreams.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-stream\"),\n          onClick: function () {\n            if (vm.activeStreams.length === 1) {\n              vm.editStreamModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeStreams = [...vm.playlistEditor.streams.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeStreams = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled:\n            vm.activeGroups.length !== 1 ||\n            vm.activeStreams.length === 0 ||\n            vm.getGroupWithId(vm.activeGroups[0]).group_type !==\n              vm.activeGroupType ||\n            vm.activeGroups[0] === vm.activeGroup,\n          icon: \"la-chevron-left\",\n          text: vm.$t(\"editor.move-to-selected-group\"),\n          onClick: function () {\n            vm.moveToSelectedGroup();\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 2);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0 || vm.activeGroupType !== 1,\n          icon: \"la-music\",\n          text: vm.$t(\"editor.toggle-radio\"),\n          onClick: function () {\n            if (vm.activeStreams.length && vm.activeGroupType == 1) {\n              vm.toggleStreamRadio();\n            }\n          },\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.toggleStreamVisibility();\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.deleteSelectedStreams();\n            }\n          },\n        },\n      ];\n    },\n  },\n  methods: {\n    groupDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.playlistEditor.groups[i].group_order != i + 1) {\n          this.playlistEditor.groups[i].group_order = i + 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n    },\n    streamDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.playlistEditor.streams[i].stream_order != i + 1) {\n          this.playlistEditor.streams[i].stream_order = i + 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n    },\n    openContext(context) {\n      this.$refs[context].open();\n    },\n    searchEditor(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printEditor() {\n      document.getElementById(\"editor\").print();\n    },\n    formatNumber(number) {\n      return new Intl.NumberFormat(this.$t(\"date.locale\")).format(number);\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    formatDateYoutube(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n\n    getGroupWithId(id) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == id\n      );\n      return this.playlistEditor.groups[index];\n    },\n    getStreamWithId(id) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id == id\n      );\n      return this.playlistEditor.streams[index];\n    },\n    doSave() {\n      this.isLoading = true;\n      this.playlistEditor.changed = false;\n      return new Promise((resolve) => {\n        let index = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let updateGroups = this.playlistEditor.groups\n          .filter((group) => !group.group_is_removed && group.modified)\n          .map((group) => {\n            return {\n              id: group.id,\n              group_name: group.group_name,\n              group_order: group.group_order,\n              group_type: group.group_type,\n              group_parent_code: group.group_parent_code,\n              group_is_hidden: group.group_is_hidden,\n            };\n          });\n        let deleteGroups = this.playlistEditor.groups\n          .filter((group) => group.group_is_removed && group.modified)\n          .map((group) => group.id)\n          .join();\n\n        let updateStreams;\n        switch (this.activeGroupType) {\n          // Live streams\n          case 1:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  stream_tvg_name: stream.stream_tvg_name,\n                  stream_tvg_id: stream.stream_tvg_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_parent_code: stream.stream_parent_code,\n                  stream_radio: stream.stream_radio,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Movies\n          case 2:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  movie_name: stream.movie_name,\n                  movie_year: stream.movie_year,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Series\n          case 3:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  serie_name: stream.serie_name,\n                  serie_season: stream.serie_season,\n                  serie_episode: stream.serie_episode,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n        }\n        let deleteStreams = this.playlistEditor.streams\n          .filter((stream) => stream.stream_is_removed === 1 && stream.modified)\n          .map((stream) => stream.id)\n          .join();\n\n        let requests = [];\n        if (updateGroups.length) {\n          requests.push(\n            httpService.post(\"editor/update-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: updateGroups,\n            })\n          );\n        }\n        if (deleteGroups.length) {\n          requests.push(\n            httpService.post(\"editor/delete-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: deleteGroups,\n            })\n          );\n        }\n        if (updateStreams.length) {\n          requests.push(\n            httpService.post(`editor/update-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: updateStreams,\n            })\n          );\n        }\n        if (deleteStreams.length) {\n          requests.push(\n            httpService.post(`editor/delete-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: deleteStreams,\n            })\n          );\n        }\n        Promise.all(requests).then((res) => {\n          this.loadPlaylist(this.playlistEditor.id, index);\n          resolve(res);\n        });\n      });\n    },\n    doCancel() {\n      this.isLoading = true;\n      Promise.all([this.restoreGroups(), this.restoreStreams()]).then(() => {\n        this.playlistEditor.changed = false;\n        this.isLoading = false;\n      });\n    },\n    doTabChange(tab) {\n      this.activeTab = tab;\n    },\n    updateGroupOrder(source) {\n      return new Promise((resolve) => {\n        let groups = [...source];\n        for (let i = 0; i < groups.length; i++) {\n          groups[i].source_group_order = i + 1;\n          groups[i].group_order = i + 1;\n        }\n        resolve(groups);\n      });\n    },\n    updateStreamOrder(source) {\n      return new Promise((resolve) => {\n        let streams = [...source];\n        for (let i = 0; i < streams.length; i++) {\n          streams[i].source_stream_order = i + 1;\n          streams[i].stream_order = i + 1;\n        }\n        resolve(streams);\n      });\n    },\n    restoreGroupOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.groups.sort((a, b) =>\n          a.source_group_order > b.source_group_order\n            ? 1\n            : b.source_group_order > a.source_group_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreStreamOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.streams.sort((a, b) =>\n          a.source_stream_order > b.source_stream_order\n            ? 1\n            : b.source_stream_order > a.source_stream_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreGroups() {\n      return new Promise((resolve) => {\n        this.restoreGroupOrder().then(() => {\n          let group;\n          for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n            group = this.playlistEditor.groups[i];\n            group.modified = false;\n            group.group_is_removed = 0;\n            group.group_type = group.source_group_type;\n            group.group_name = group.source_group_name;\n            group.parent_code = group.source_group_parent_code;\n            group.group_is_hidden = group.source_group_is_hidden;\n          }\n          resolve();\n        });\n      });\n    },\n    restoreStreams() {\n      return new Promise((resolve) => {\n        this.restoreStreamOrder().then(() => {\n          let stream;\n          for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n            stream = this.playlistEditor.streams[i];\n            stream.modified = false;\n            stream.stream_is_removed = 0;\n            stream.stream_tvg_name = stream.source_stream_tvg_name;\n            stream.stream_tvg_id = stream.source_stream_tvg_id;\n            stream.stream_tvg_logo = stream.source_stream_tvg_logo;\n            stream.stream_tvg_chno = stream.source_stream_tvg_chno;\n            stream.stream_tvg_shift = stream.source_stream_tvg_shift;\n            stream.stream_parent_code = stream.source_stream_parent_code;\n            stream.stream_audio_track = stream.source_stream_audio_track;\n            stream.stream_aspect_ratio = stream.source_stream_aspect_ratio;\n            stream.stream_radio = stream.source_stream_radio;\n            stream.stream_order = stream.source_stream_order;\n            stream.stream_is_hidden = stream.source_stream_is_hidden;\n            if (\n              stream.movie_name !== undefined &&\n              stream.movie_year !== undefined\n            ) {\n              stream.movie_name = stream.source_movie_name;\n              stream.movie_year = stream.source_movie_year;\n            }\n            if (\n              stream.serie_name !== undefined &&\n              stream.serie_season !== undefined &&\n              stream.serie_episode !== undefined\n            ) {\n              stream.serie_name = stream.source_serie_name;\n              stream.serie_season = stream.source_serie_season;\n              stream.serie_episode = stream.source_serie_episode;\n            }\n          }\n          resolve();\n        });\n      });\n    },\n    toggleGroupVisibility() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_hidden = !this.playlistEditor\n            .groups[i].group_is_hidden;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamVisibility() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_hidden = !this.playlistEditor\n            .streams[i].stream_is_hidden;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamRadio() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          if (this.playlistEditor.streams[i].stream_radio == 0) {\n            this.playlistEditor.streams[i].stream_radio = 1;\n          } else {\n            this.playlistEditor.streams[i].stream_radio = 0;\n          }\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedGroups() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_removed = 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedStreams() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_removed = 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    loadPlaylist(val, group_index = undefined) {\n      this.isLoading = true;\n      if (this.playlistEditor.changed) {\n        this.doSave();\n      }\n      this.playlistEditor.id = val;\n      httpService\n        .get(`editor/groups/${val}`)\n        .then((res) => {\n          if (res.status === true) {\n            this.updateGroupOrder(res.data).then((groups) => {\n              this.playlistEditor.groups = groups.map((group) => {\n                const grp = Object.assign({}, group);\n                grp.source_group_parent_code = group.group_parent_code;\n                grp.source_group_is_hidden = group.group_is_hidden;\n                grp.source_group_name = group.group_name;\n                grp.source_group_type = group.group_type;\n                grp.group_is_removed = false;\n                grp.modified = false;\n                return grp;\n              });\n              if (groups.length) {\n                if (group_index === undefined) {\n                  this.activeGroup = this.playlistEditor.groups[0].id;\n                } else {\n                  this.activeGroup = this.playlistEditor.groups[group_index].id;\n                  this.loadStreams();\n                }\n              }\n            });\n          }\n          this.isLoading = false;\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    toggleGroupSelection(item) {\n      let idx = this.activeGroups.indexOf(item);\n      if (idx !== -1) {\n        this.activeGroups.splice(idx, 1);\n      } else {\n        this.activeGroups.push(item);\n      }\n    },\n    toggleStreamSelection(item) {\n      let idx = this.activeStreams.indexOf(item);\n      if (idx !== -1) {\n        this.activeStreams.splice(idx, 1);\n      } else {\n        this.activeStreams.push(item);\n      }\n    },\n    toggleRadiobrowserSelection(item) {\n      let idx = this.radioBrowser.active.indexOf(item);\n      if (idx !== -1) {\n        this.radioBrowser.active.splice(idx, 1);\n      } else {\n        this.radioBrowser.active.push(item);\n      }\n    },\n    indexOfGroup(group) {\n      return this.playlistEditor.groups.map((g) => g.id).indexOf(group);\n    },\n    selectGroupRangeSelection(item) {\n      const lastIndex = this.indexOfGroup(this.lastSelectedGroup);\n      const itemIndex = this.indexOfGroup(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.activeGroups.push(this.playlistEditor.groups[i].id);\n        }\n      }\n    },\n    indexOfStream(stream) {\n      return this.playlistEditor.streams.map((g) => g.id).indexOf(stream);\n    },\n    selectStreamRangeSelection(item) {\n      const lastIndex = this.indexOfStream(this.lastSelectedStream);\n      const itemIndex = this.indexOfStream(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.activeStreams.push(this.playlistEditor.streams[i].id);\n        }\n      }\n    },\n    selectRadiobrowserRangeSelection(index) {\n      const lastIndex = this.radioBrowser.active[\n        this.radioBrowser.active.length - 1\n      ];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.radioBrowser.active.includes(i)) {\n          this.radioBrowser.active.push(i);\n        }\n      }\n    },\n    selectGroupSelection(item) {\n      this.activeGroups.length = 0;\n      this.activeGroups.push(item);\n    },\n    selectStreamSelection(item) {\n      this.activeStreams.length = 0;\n      this.activeStreams.push(item);\n    },\n    selectRadiobrowserSelection(item) {\n      this.radioBrowser.active.length = 0;\n      this.radioBrowser.active.push(item);\n    },\n    findAndReplaceModal(show, type = 1) {\n      this.findReplace.type = type;\n      this.findReplace.modal = show;\n    },\n    findAndReplace() {\n      let options = \"\";\n      if (this.findReplace.replaceAll) {\n        options += \"g\";\n      }\n      if (this.findReplace.ignoreCase) {\n        options += \"i\";\n      }\n      let re = new RegExp(this.findReplace.from.replace(\"|\", \"\\\\|\"), options);\n      switch (parseInt(this.findReplace.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[\n                  i\n                ].group_name = this.playlistEditor.groups[i].group_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = group.group_name.replace(\n                re,\n                this.findReplace.to\n              );\n            });\n          }\n          break;\n\n        // Streams\n        case 2:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[\n                    i\n                  ].stream_tvg_name = this.playlistEditor.streams[\n                    i\n                  ].stream_tvg_name.replace(re, this.findReplace.to);\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[\n                    i\n                  ].movie_name = this.playlistEditor.streams[\n                    i\n                  ].movie_name.replace(re, this.findReplace.to);\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[\n                    i\n                  ].serie_name = this.playlistEditor.streams[\n                    i\n                  ].serie_name.replace(re, this.findReplace.to);\n                }\n              }\n            }\n          } else {\n            this.filteredStreams.map((stream) => {\n              if (this.activeGroupType === 1) {\n                stream.modified = true;\n                stream.stream_tvg_name = stream.stream_tvg_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 2) {\n                stream.modified = true;\n                stream.movie_name = stream.movie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 3) {\n                stream.modified = true;\n                stream.serie_name = stream.serie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n            });\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.findReplace.modal = false;\n    },\n    prefixSuffixModal(show, type = 1) {\n      this.prefixSuffix.type = type;\n      this.prefixSuffix.modal = show;\n    },\n    addPrefixSuffix() {\n      let prefix = this.prefixSuffix.prefix;\n      let suffix = this.prefixSuffix.suffix;\n      switch (parseInt(this.prefixSuffix.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[i].group_name =\n                  prefix + this.playlistEditor.groups[i].group_name + suffix;\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = prefix + group.group_name + suffix;\n            });\n          }\n          break;\n\n        // Stream\n        case 2:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].stream_tvg_name =\n                    prefix +\n                    this.playlistEditor.streams[i].stream_tvg_name +\n                    suffix;\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].movie_name =\n                    prefix + this.playlistEditor.streams[i].movie_name + suffix;\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].serie_name =\n                    prefix + this.playlistEditor.streams[i].serie_name + suffix;\n                }\n              }\n            }\n          } else {\n            if (this.activeGroupType === 1) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.stream_tvg_name =\n                  prefix + stream.stream_tvg_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 2) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.movie_name = prefix + stream.movie_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 3) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.serie_name = prefix + stream.serie_name + suffix;\n              });\n            }\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.prefixSuffix.modal = false;\n    },\n    convertCaseModal(show, type) {\n      this.convertCase.type = type;\n      this.convertCase.modal = show;\n    },\n    changeCase() {\n      let method = this.convertCase.method;\n      let groups;\n      let streams;\n      if (parseInt(this.convertCase.selectedOnly) === 1) {\n        groups = this.filteredGroups.filter((group) => {\n          return this.activeGroups.includes(group.id);\n        });\n        streams = this.filteredStreams.filter((stream) => {\n          return this.activeStreams.includes(stream.id);\n        });\n      } else {\n        groups = this.filteredGroups;\n        streams = this.filteredStreams;\n      }\n      switch (parseInt(this.convertCase.type)) {\n        // Categories\n        case 1:\n          groups.map((group) => {\n            switch (parseInt(method)) {\n              case 0:\n                group.modified = true;\n                group.group_name = group.group_name.titleCase();\n                break;\n              case 1:\n                group.modified = true;\n                group.group_name = group.group_name.toUpperCase();\n                break;\n              case 2:\n                group.modified = true;\n                group.group_name = group.group_name.toLowerCase();\n                break;\n            }\n          });\n          break;\n\n        // Streams\n        case 2:\n          streams.map((stream) => {\n            switch (parseInt(method)) {\n              case 0:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.titleCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.titleCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.titleCase();\n                }\n                break;\n              case 1:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toUpperCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toUpperCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toUpperCase();\n                }\n                break;\n              case 2:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toLowerCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toLowerCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toLowerCase();\n                }\n                break;\n            }\n          });\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.convertCase.modal = false;\n    },\n    editGroupModal(show) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroups[0]\n      );\n      let group = this.playlistEditor.groups[index];\n      if (group) {\n        this.groupEditor.id = this.activeGroups[0];\n        this.groupEditor.group_type = group.group_type;\n        this.groupEditor.group_name = group.group_name;\n        this.groupEditor.group_is_hidden = group.group_is_hidden;\n        this.groupEditor.group_parent_code = group.group_parent_code;\n        this.groupEditor.modal = show;\n      }\n    },\n    editStreamModal(show) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      let stream = this.playlistEditor.streams[index];\n      if (stream) {\n        this.streamEditor.id = this.activeStreams[0];\n        this.streamEditor.stream_tvg_name = stream.stream_tvg_name;\n        this.streamEditor.stream_tvg_id = stream.stream_tvg_id;\n        this.streamEditor.stream_tvg_logo = stream.stream_tvg_logo;\n        this.streamEditor.stream_parent_code = stream.stream_parent_code;\n        this.streamEditor.stream_radio = stream.stream_radio;\n        this.streamEditor.stream_is_hidden = stream.stream_is_hidden;\n        if (\n          stream.movie_name !== undefined &&\n          stream.movie_year !== undefined &&\n          stream.tmdb_id !== undefined\n        ) {\n          this.streamEditor.movie_name = stream.movie_name;\n          this.streamEditor.movie_year = stream.movie_year;\n          this.streamEditor.tmdb_id = stream.tmdb_id;\n        }\n        if (\n          stream.serie_name !== undefined &&\n          stream.serie_season !== undefined &&\n          stream.serie_episode !== undefined\n        ) {\n          this.streamEditor.serie_name = stream.serie_name;\n          this.streamEditor.serie_season = stream.serie_season;\n          this.streamEditor.serie_episode = stream.serie_episode;\n        }\n        this.streamEditor.modal = show;\n      }\n    },\n    editGroup() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.groupEditor.id\n      );\n      this.playlistEditor.groups[\n        index\n      ].group_type = this.groupEditor.group_type;\n      this.playlistEditor.groups[\n        index\n      ].group_name = this.groupEditor.group_name;\n      this.playlistEditor.groups[\n        index\n      ].group_is_hidden = this.groupEditor.group_is_hidden;\n      this.playlistEditor.groups[\n        index\n      ].group_parent_code = this.groupEditor.group_parent_code;\n      this.playlistEditor.groups[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.groupEditor.modal = false;\n    },\n    editStream() {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      this.playlistEditor.streams[\n        index\n      ].stream_tvg_name = this.streamEditor.stream_tvg_name;\n      this.playlistEditor.streams[\n        index\n      ].stream_tvg_id = this.streamEditor.stream_tvg_id;\n      this.playlistEditor.streams[\n        index\n      ].stream_tvg_logo = this.streamEditor.stream_tvg_logo;\n      this.playlistEditor.streams[\n        index\n      ].stream_parent_code = this.streamEditor.stream_parent_code;\n      this.playlistEditor.streams[\n        index\n      ].stream_is_hidden = this.streamEditor.stream_is_hidden;\n      this.playlistEditor.streams[\n        index\n      ].stream_radio = this.streamEditor.stream_radio;\n      if (\n        this.playlistEditor.streams[index].movie_name !== undefined &&\n        this.playlistEditor.streams[index].movie_year !== undefined &&\n        this.playlistEditor.streams[index].tmdb_id !== undefined\n      ) {\n        this.playlistEditor.streams[\n          index\n        ].movie_name = this.streamEditor.movie_name;\n        this.playlistEditor.streams[\n          index\n        ].movie_year = this.streamEditor.movie_year;\n        this.playlistEditor.streams[index].tmdb_id = this.streamEditor.tmdb_id;\n      }\n      if (\n        this.playlistEditor.streams[index].serie_name !== undefined &&\n        this.playlistEditor.streams[index].serie_season !== undefined &&\n        this.playlistEditor.streams[index].serie_episode !== undefined\n      ) {\n        this.playlistEditor.streams[\n          index\n        ].serie_name = this.streamEditor.serie_name;\n        this.playlistEditor.streams[\n          index\n        ].serie_season = this.streamEditor.serie_season;\n        this.playlistEditor.streams[\n          index\n        ].serie_episode = this.streamEditor.serie_episode;\n      }\n      this.playlistEditor.streams[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.streamEditor.modal = false;\n    },\n    sortGroupAlphaUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_name > a.group_name ? 1 : a.group_name > b.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupAlphaDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_name > b.group_name ? 1 : b.group_name > a.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_type > a.group_type ? 1 : a.group_type > b.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_type > b.group_type ? 1 : b.group_type > a.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaUp() {\n      //ERNST HIER\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return b.stream_tvg_name > a.stream_tvg_name\n              ? 1\n              : a.stream_tvg_name > b.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return b.movie_name > a.movie_name\n              ? 1\n              : a.movie_name > b.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return b.serie_name > a.serie_name\n              ? 1\n              : a.serie_name > b.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return a.stream_tvg_name > b.stream_tvg_name\n              ? 1\n              : b.stream_tvg_name > a.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return a.movie_name > b.movie_name\n              ? 1\n              : b.movie_name > a.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return a.serie_name > b.serie_name\n              ? 1\n              : b.serie_name > a.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenUp() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        b.stream_is_hidden > a.stream_is_hidden\n          ? 1\n          : a.stream_is_hidden > b.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        a.stream_is_hidden > b.stream_is_hidden\n          ? 1\n          : b.stream_is_hidden > a.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    addGroup() {\n      httpService\n        .post(\"editor/add-group\", { playlist_id: this.playlistEditor.id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            return new Promise((resolve) => {\n              this.playlistEditor.groups.push(res.data);\n              this.activeGroup = this.playlistEditor.groups[\n                this.playlistEditor.groups.length - 1\n              ].id;\n              this.activeGroups = [\n                this.playlistEditor.groups[\n                  this.playlistEditor.groups.length - 1\n                ].id,\n              ];\n              resolve();\n            }).then(() => {\n              this.editGroupModal(true);\n            });\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"editor.add-group-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    loadStreams() {\n      this.activeStream = -1;\n      this.activeStreams = [];\n      this.playlistEditor.streams = [];\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroup\n      );\n      let group = this.playlistEditor.groups[index];\n      this.isLoading = true;\n      httpService\n        .get(\n          `editor/streams/${this.playlistEditor.id}/${group.id}/${group.group_type}`\n        )\n        .then((res) => {\n          document.body.scrollTop = 0;\n          document.documentElement.scrollTop = 0;\n          if (res.status === true) {\n            let streams = res.data.map((stream) => {\n              const str = Object.assign({}, stream);\n              str.source_stream_tvg_name = stream.stream_tvg_name;\n              str.source_stream_tvg_id = stream.stream_tvg_id;\n              str.source_stream_tvg_logo = stream.stream_tvg_logo;\n              str.source_stream_tvg_chno = stream.stream_tvg_chno;\n              str.source_stream_tvg_shift = stream.stream_tvg_shift;\n              str.source_stream_parent_code = stream.stream_parent_code;\n              str.source_stream_audio_track = stream.stream_audio_track;\n              str.source_stream_aspect_ratio = stream.stream_aspect_ratio;\n              str.source_stream_radio = stream.stream_radio;\n              str.source_stream_order = stream.stream_order;\n              str.source_stream_is_hidden = stream.stream_is_hidden;\n              str.modified = false;\n              str.stream_is_removed = 0;\n              if (group.group_type == 2) {\n                if (str.movie_name == \"\") {\n                  str.movie_name = str.stream_tvg_name;\n                  str.source_movie_name = str.stream_tvg_name;\n                } else {\n                  str.source_movie_name = stream.movie_name;\n                }\n                str.source_movie_year = stream.movie_year;\n                str.source_tmdb_id = stream.tmdb_id;\n              }\n              if (group.group_type == 3) {\n                if (str.serie_name == \"\") {\n                  str.serie_name = str.stream_tvg_name;\n                  str.source_serie_name = str.stream_tvg_name;\n                } else {\n                  str.source_serie_name = stream.serie_name;\n                }\n                str.source_serie_season = stream.serie_season;\n                str.source_serie_episode = stream.serie_episode;\n              }\n              return str;\n            });\n            streams.sort((a, b) =>\n              a.source_stream_order > b.source_stream_order\n                ? 1\n                : b.source_stream_order > a.source_stream_order\n                ? -1\n                : 0\n            );\n            this.playlistEditor.streams = streams;\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    moveToSelectedGroup() {\n      this.isLoading = true;\n      let streams = this.activeStreams.join();\n      let index = this.playlistEditor.groups.findIndex((group) => {\n        return group.id == this.activeGroup;\n      });\n      httpService\n        .post(`editor/move-to-group/${this.activeGroupType}`, {\n          playlist_id: this.playlistEditor.id,\n          streams: streams,\n          group_id: this.activeGroups[0],\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status && res.data) {\n            this.loadPlaylist(this.playlistEditor.id, index);\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    saveChangesModal(show, save = false) {\n      this.saveChanges.modal = show;\n      if (save) {\n        this.doSave();\n      } else {\n        this.loadStreams();\n      }\n    },\n    radioBrowserModal(show, save = false) {\n      if (show) {\n        this.radioBrowser.search = \"\";\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      }\n      if (save) {\n        this.isLoading = true;\n        let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let order = this.playlistEditor.streams.length;\n        const streams = this.radioBrowser.active.map((index) => {\n          let radio = this.radioBrowser.results[index];\n          return {\n            source_stream_url: radio.url,\n            stream_tvg_name: radio.name,\n            stream_tvg_id: \"\",\n            stream_tvg_logo: radio.favicon,\n            stream_radio: true,\n            stream_order: order++,\n          };\n        });\n        httpService\n          .post(`editor/add-streams/${this.activeGroupType}`, {\n            playlist_id: this.playlistEditor.id,\n            group_id: this.getGroupWithId(this.activeGroup).id,\n            streams: streams,\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status) {\n              this.loadPlaylist(this.playlistEditor.id, groupIndex);\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n      this.radioBrowser.modal = show;\n    },\n    findRadiobrowser(search) {\n      if (search.length === 0) {\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      } else {\n        httpService\n          .post(\"editor/find-radiobrowser\", {\n            search: search,\n          })\n          .then((res) => {\n            this.radioBrowser.active = [];\n            if (res.status) {\n              this.radioBrowser.results = res.data;\n            } else {\n              this.radioBrowser.results = [];\n            }\n          })\n          .catch(() => {\n            this.radioBrowser.active = [];\n            this.radioBrowser.results = [];\n          });\n      }\n    },\n    soundcloudModal(show, save = false) {\n      if (show) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      }\n      if (save) {\n        if (this.soundcloud.track) {\n          this.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.soundcloud.url,\n              stream_tvg_name: this.soundcloud.track.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.soundcloud.track.artwork_url.replace(\n                \"large.jpg\",\n                \"t500x500.jpg\"\n              ),\n              stream_radio: true,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.isLoading = false;\n            });\n        }\n      }\n      this.soundcloud.modal = show;\n    },\n    getSoundcloudTrack(url, client_id) {\n      if (url.length === 0 || !/soundcloud\\.com/.test(url)) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      } else {\n        httpService\n          .post(\"editor/soundcloud-track\", {\n            url: url,\n            client_id: client_id,\n          })\n          .then((res) => {\n            if (res.status && Object.keys(res.data).length) {\n              this.soundcloud.track = res.data;\n            } else {\n              this.soundcloud.track = null;\n            }\n          })\n          .catch(() => {\n            this.soundcloud.track = null;\n          });\n      }\n    },\n    groupDoubleClick() {\n      if (this.activeGroups.length === 1) {\n        this.editGroupModal(true);\n      }\n    },\n    streamDoubleClick() {\n      if (this.activeStreams.length === 1) {\n        this.editStreamModal(true);\n      }\n    },\n  },\n  beforeMount() {\n    document.body.classList.add(\"right-menu\");\n    EventBus.$on(\"search\", this.searchEditor);\n    EventBus.$on(\"print\", this.printEditor);\n    EventBus.$on(\"tab-change\", this.doTabChange);\n    EventBus.$on(\"save\", this.doSave);\n    EventBus.$on(\"cancel\", this.doCancel);\n    EventBus.$on(\"editor-playlist\", this.loadPlaylist);\n  },\n  beforeDestroy() {\n    document.body.classList.remove(\"right-menu\");\n    EventBus.$off(\"search\", this.searchEditor);\n    EventBus.$off(\"print\", this.printEditor);\n    EventBus.$off(\"tab-change\", this.doTabChange);\n    EventBus.$off(\"save\", this.doSave);\n    EventBus.$off(\"cancel\", this.doCancel);\n    EventBus.$off(\"editor-playlist\", this.loadPlaylist);\n  },\n  watch: {\n    dragStream: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    dragGroup: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    activeGroup: function (val) {\n      if (this.playlistEditor.changed) {\n        this.saveChangesModal(true);\n      } else {\n        this.loadStreams();\n      }\n    },\n    \"playlistEditor.changed\": function (val) {\n      EventBus.$emit(\"editor-changes\", val);\n    },\n    \"radioBrowser.search\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.findRadiobrowser(val);\n      }, 500);\n    },\n    \"soundcloud.url\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.getSoundcloudTrack(val, vm.soundcloudClientId);\n      }, 500);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.editor-stream,\n.editor-group {\n  margin-top: 0.1rem;\n  -webkit-user-select: none;\n  -webkit-touch-callout: none;\n  -khtml-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n\n  &:focus,\n  &:focus-within {\n    &.selected {\n      background-color: $theme-color-1 !important;\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n\n  &.selected {\n    background-color: $theme-color-1 !important;\n    &.success {\n      background-color: $success-color !important;\n    }\n    &.danger {\n      background-color: $error-color !important;\n    }\n    &.info {\n      background-color: $info-color !important;\n    }\n\n    a,\n    i,\n    span {\n      color: $button-text-color !important;\n    }\n  }\n\n  &.active {\n    border-color: rgba($theme-color-1, 0.6) !important;\n\n    a,\n    span {\n      font-weight: bold;\n    }\n    a,\n    i,\n    span {\n      color: $theme-color-1;\n    }\n  }\n\n  &.hidden {\n    opacity: 0.5;\n  }\n}\n\n.editor-stream {\n  .stream-icon {\n    float: right;\n    max-height: 16px;\n  }\n}\n\n.editor-stream-icon {\n  max-width: 100%;\n  max-height: 250px;\n  height: auto !important;\n}\n\n.editor-movie-poster {\n  max-height: 250px;\n  width: auto !important;\n}\n\n.flip-list-move {\n  transition: transform 0.5s;\n}\n.no-move {\n  transition: transform 0s;\n}\n.ghost {\n  opacity: 0.5;\n}\n\n.handle {\n  cursor: move;\n  vertical-align: middle;\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n}\n\n.radiobrowser-stations {\n  overflow: hidden;\n\n  .ps {\n    max-height: 300px;\n    padding-top: 0.25rem;\n    padding-bottom: 0.5rem;\n  }\n\n  .radiobrowser-station {\n    margin-top: 0.1rem;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n\n    &:focus,\n    &:focus-within {\n      &.selected {\n        background-color: $theme-color-1 !important;\n\n        a,\n        i,\n        span {\n          color: $button-text-color !important;\n        }\n      }\n\n      &.active {\n        border-color: rgba($theme-color-1, 0.6) !important;\n\n        a,\n        span {\n          font-weight: bold;\n        }\n        a,\n        i,\n        span {\n          color: $theme-color-1;\n        }\n      }\n    }\n\n    &.selected {\n      background-color: $theme-color-1 !important;\n      &.success {\n        background-color: $success-color !important;\n      }\n      &.danger {\n        background-color: $error-color !important;\n      }\n      &.info {\n        background-color: $info-color !important;\n      }\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n}\n\n.soundcloud-info {\n  width: max-content;\n\n  .cover {\n    max-height: 300px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/app/xtream"}]}