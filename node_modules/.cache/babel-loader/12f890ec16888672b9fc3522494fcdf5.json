{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCB7IElTX0JST1dTRVIgfSBmcm9tICcuLi8uLi9jb25zdGFudHMvZW52JzsKaW1wb3J0IHsgaXNOdW1iZXIsIGlzT2JqZWN0LCBpc1N0cmluZyB9IGZyb20gJy4uLy4uL3V0aWxzL2luc3BlY3QnOwppbXBvcnQgeyBtYXRoUm91bmQgfSBmcm9tICcuLi8uLi91dGlscy9tYXRoJzsKaW1wb3J0IHsgdG9JbnRlZ2VyIH0gZnJvbSAnLi4vLi4vdXRpbHMvbnVtYmVyJzsKaW1wb3J0IHsga2V5cyB9IGZyb20gJy4uLy4uL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IEJWU2Nyb2xsU3B5IH0gZnJvbSAnLi9oZWxwZXJzL2J2LXNjcm9sbHNweS5jbGFzcyc7IC8vIEtleSB3ZSB1c2UgdG8gc3RvcmUgb3VyIGluc3RhbmNlCgp2YXIgQlZfU0NST0xMU1BZID0gJ19fQlZfU2Nyb2xsU3B5X18nOyAvLyBQcmUtY29tcGlsZWQgcmVndWxhciBleHByZXNzaW9ucwoKdmFyIG9ubHlEaWdpdHNSRSA9IC9eXGQrJC87CnZhciBvZmZzZXRSRSA9IC9eKGF1dG98cG9zaXRpb258b2Zmc2V0KSQvOyAvLyBCdWlsZCBhIFNjcm9sbFNweSBjb25maWcgYmFzZWQgb24gYmluZGluZ3MgKGlmIGFueSkKLy8gQXJndW1lbnRzIGFuZCBtb2RpZmllcnMgdGFrZSBwcmVjZWRlbmNlIG92ZXIgcGFzc2VkIHZhbHVlIGNvbmZpZyBvYmplY3QKCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBub3QgZWFzeSB0byB0ZXN0ICovCgp2YXIgcGFyc2VCaW5kaW5ncyA9IGZ1bmN0aW9uIHBhcnNlQmluZGluZ3MoYmluZGluZ3MpCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBub3QgZWFzeSB0byB0ZXN0ICovCnsKICB2YXIgY29uZmlnID0ge307IC8vIElmIGFyZ3VtZW50LCBhc3N1bWUgZWxlbWVudCBJRAoKICBpZiAoYmluZGluZ3MuYXJnKSB7CiAgICAvLyBFbGVtZW50IElEIHNwZWNpZmllZCBhcyBhcmcKICAgIC8vIFdlIG11c3QgcHJlcGVuZCAnIycgdG8gYmVjb21lIGEgQ1NTIHNlbGVjdG9yCiAgICBjb25maWcuZWxlbWVudCA9ICIjIi5jb25jYXQoYmluZGluZ3MuYXJnKTsKICB9IC8vIFByb2Nlc3MgbW9kaWZpZXJzCgoKICBrZXlzKGJpbmRpbmdzLm1vZGlmaWVycykuZm9yRWFjaChmdW5jdGlvbiAobW9kKSB7CiAgICBpZiAob25seURpZ2l0c1JFLnRlc3QobW9kKSkgewogICAgICAvLyBPZmZzZXQgdmFsdWUKICAgICAgY29uZmlnLm9mZnNldCA9IHRvSW50ZWdlcihtb2QsIDApOwogICAgfSBlbHNlIGlmIChvZmZzZXRSRS50ZXN0KG1vZCkpIHsKICAgICAgLy8gT2Zmc2V0IG1ldGhvZAogICAgICBjb25maWcubWV0aG9kID0gbW9kOwogICAgfQogIH0pOyAvLyBQcm9jZXNzIHZhbHVlCgogIGlmIChpc1N0cmluZyhiaW5kaW5ncy52YWx1ZSkpIHsKICAgIC8vIFZhbHVlIGlzIGEgQ1NTIElEIG9yIHNlbGVjdG9yCiAgICBjb25maWcuZWxlbWVudCA9IGJpbmRpbmdzLnZhbHVlOwogIH0gZWxzZSBpZiAoaXNOdW1iZXIoYmluZGluZ3MudmFsdWUpKSB7CiAgICAvLyBWYWx1ZSBpcyBvZmZzZXQKICAgIGNvbmZpZy5vZmZzZXQgPSBtYXRoUm91bmQoYmluZGluZ3MudmFsdWUpOwogIH0gZWxzZSBpZiAoaXNPYmplY3QoYmluZGluZ3MudmFsdWUpKSB7CiAgICAvLyBWYWx1ZSBpcyBjb25maWcgb2JqZWN0CiAgICAvLyBGaWx0ZXIgdGhlIG9iamVjdCBiYXNlZCBvbiBvdXIgc3VwcG9ydGVkIGNvbmZpZyBvcHRpb25zCiAgICBrZXlzKGJpbmRpbmdzLnZhbHVlKS5maWx0ZXIoZnVuY3Rpb24gKGspIHsKICAgICAgcmV0dXJuICEhQlZTY3JvbGxTcHkuRGVmYXVsdFR5cGVba107CiAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7CiAgICAgIGNvbmZpZ1trXSA9IGJpbmRpbmdzLnZhbHVlW2tdOwogICAgfSk7CiAgfQoKICByZXR1cm4gY29uZmlnOwp9OyAvLyBBZGQgb3IgdXBkYXRlIFNjcm9sbFNweSBvbiBvdXIgZWxlbWVudAoKCnZhciBhcHBseVNjcm9sbHNweSA9IGZ1bmN0aW9uIGFwcGx5U2Nyb2xsc3B5KGVsLCBiaW5kaW5ncywgdm5vZGUpCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBub3QgZWFzeSB0byB0ZXN0ICovCnsKICBpZiAoIUlTX0JST1dTRVIpIHsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICByZXR1cm47CiAgfQoKICB2YXIgY29uZmlnID0gcGFyc2VCaW5kaW5ncyhiaW5kaW5ncyk7CgogIGlmIChlbFtCVl9TQ1JPTExTUFldKSB7CiAgICBlbFtCVl9TQ1JPTExTUFldLnVwZGF0ZUNvbmZpZyhjb25maWcsIHZub2RlLmNvbnRleHQuJHJvb3QpOwogIH0gZWxzZSB7CiAgICBlbFtCVl9TQ1JPTExTUFldID0gbmV3IEJWU2Nyb2xsU3B5KGVsLCBjb25maWcsIHZub2RlLmNvbnRleHQuJHJvb3QpOwogIH0KfTsgLy8gUmVtb3ZlIFNjcm9sbFNweSBvbiBvdXIgZWxlbWVudAoKLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IG5vdCBlYXN5IHRvIHRlc3QgKi8KCgp2YXIgcmVtb3ZlU2Nyb2xsc3B5ID0gZnVuY3Rpb24gcmVtb3ZlU2Nyb2xsc3B5KGVsKQovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogbm90IGVhc3kgdG8gdGVzdCAqLwp7CiAgaWYgKGVsW0JWX1NDUk9MTFNQWV0pIHsKICAgIGVsW0JWX1NDUk9MTFNQWV0uZGlzcG9zZSgpOwogICAgZWxbQlZfU0NST0xMU1BZXSA9IG51bGw7CiAgICBkZWxldGUgZWxbQlZfU0NST0xMU1BZXTsKICB9Cn07Ci8qCiAqIEV4cG9ydCBvdXIgZGlyZWN0aXZlCiAqLwoKCmV4cG9ydCB2YXIgVkJTY3JvbGxzcHkgPSB7CiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IG5vdCBlYXN5IHRvIHRlc3QgKi8KICBiaW5kOiBmdW5jdGlvbiBiaW5kKGVsLCBiaW5kaW5ncywgdm5vZGUpIHsKICAgIGFwcGx5U2Nyb2xsc3B5KGVsLCBiaW5kaW5ncywgdm5vZGUpOwogIH0sCgogIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBub3QgZWFzeSB0byB0ZXN0ICovCiAgaW5zZXJ0ZWQ6IGZ1bmN0aW9uIGluc2VydGVkKGVsLCBiaW5kaW5ncywgdm5vZGUpIHsKICAgIGFwcGx5U2Nyb2xsc3B5KGVsLCBiaW5kaW5ncywgdm5vZGUpOwogIH0sCgogIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBub3QgZWFzeSB0byB0ZXN0ICovCiAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZWwsIGJpbmRpbmdzLCB2bm9kZSkgewogICAgaWYgKGJpbmRpbmdzLnZhbHVlICE9PSBiaW5kaW5ncy5vbGRWYWx1ZSkgewogICAgICBhcHBseVNjcm9sbHNweShlbCwgYmluZGluZ3MsIHZub2RlKTsKICAgIH0KICB9LAoKICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogbm90IGVhc3kgdG8gdGVzdCAqLwogIGNvbXBvbmVudFVwZGF0ZWQ6IGZ1bmN0aW9uIGNvbXBvbmVudFVwZGF0ZWQoZWwsIGJpbmRpbmdzLCB2bm9kZSkgewogICAgaWYgKGJpbmRpbmdzLnZhbHVlICE9PSBiaW5kaW5ncy5vbGRWYWx1ZSkgewogICAgICBhcHBseVNjcm9sbHNweShlbCwgYmluZGluZ3MsIHZub2RlKTsKICAgIH0KICB9LAoKICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogbm90IGVhc3kgdG8gdGVzdCAqLwogIHVuYmluZDogZnVuY3Rpb24gdW5iaW5kKGVsKSB7CiAgICByZW1vdmVTY3JvbGxzcHkoZWwpOwogIH0KfTs="},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js"],"names":["IS_BROWSER","isNumber","isObject","isString","mathRound","toInteger","keys","BVScrollSpy","BV_SCROLLSPY","onlyDigitsRE","offsetRE","parseBindings","bindings","config","arg","element","concat","modifiers","forEach","mod","test","offset","method","value","filter","k","DefaultType","applyScrollspy","el","vnode","updateConfig","context","$root","removeScrollspy","dispose","VBScrollspy","bind","inserted","update","oldValue","componentUpdated","unbind"],"mappings":"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","sourcesContent":["import { IS_BROWSER } from '../../constants/env';\nimport { isNumber, isObject, isString } from '../../utils/inspect';\nimport { mathRound } from '../../utils/math';\nimport { toInteger } from '../../utils/number';\nimport { keys } from '../../utils/object';\nimport { BVScrollSpy } from './helpers/bv-scrollspy.class'; // Key we use to store our instance\n\nvar BV_SCROLLSPY = '__BV_ScrollSpy__'; // Pre-compiled regular expressions\n\nvar onlyDigitsRE = /^\\d+$/;\nvar offsetRE = /^(auto|position|offset)$/; // Build a ScrollSpy config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  var config = {}; // If argument, assume element ID\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.element = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (onlyDigitsRE.test(mod)) {\n      // Offset value\n      config.offset = toInteger(mod, 0);\n    } else if (offsetRE.test(mod)) {\n      // Offset method\n      config.method = mod;\n    }\n  }); // Process value\n\n  if (isString(bindings.value)) {\n    // Value is a CSS ID or selector\n    config.element = bindings.value;\n  } else if (isNumber(bindings.value)) {\n    // Value is offset\n    config.offset = mathRound(bindings.value);\n  } else if (isObject(bindings.value)) {\n    // Value is config object\n    // Filter the object based on our supported config options\n    keys(bindings.value).filter(function (k) {\n      return !!BVScrollSpy.DefaultType[k];\n    }).forEach(function (k) {\n      config[k] = bindings.value[k];\n    });\n  }\n\n  return config;\n}; // Add or update ScrollSpy on our element\n\n\nvar applyScrollspy = function applyScrollspy(el, bindings, vnode)\n/* istanbul ignore next: not easy to test */\n{\n  if (!IS_BROWSER) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].updateConfig(config, vnode.context.$root);\n  } else {\n    el[BV_SCROLLSPY] = new BVScrollSpy(el, config, vnode.context.$root);\n  }\n}; // Remove ScrollSpy on our element\n\n/* istanbul ignore next: not easy to test */\n\n\nvar removeScrollspy = function removeScrollspy(el)\n/* istanbul ignore next: not easy to test */\n{\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].dispose();\n    el[BV_SCROLLSPY] = null;\n    delete el[BV_SCROLLSPY];\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBScrollspy = {\n  /* istanbul ignore next: not easy to test */\n  bind: function bind(el, bindings, vnode) {\n    applyScrollspy(el, bindings, vnode);\n  },\n\n  /* istanbul ignore next: not easy to test */\n  inserted: function inserted(el, bindings, vnode) {\n    applyScrollspy(el, bindings, vnode);\n  },\n\n  /* istanbul ignore next: not easy to test */\n  update: function update(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n\n  /* istanbul ignore next: not easy to test */\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n\n  /* istanbul ignore next: not easy to test */\n  unbind: function unbind(el) {\n    removeScrollspy(el);\n  }\n};"]}]}