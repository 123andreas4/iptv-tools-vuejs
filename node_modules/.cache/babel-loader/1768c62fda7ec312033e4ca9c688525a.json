{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/string-similarity/src/index.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/string-similarity/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5tYXAuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiKTsKCm1vZHVsZS5leHBvcnRzID0gewogIGNvbXBhcmVUd29TdHJpbmdzOiBjb21wYXJlVHdvU3RyaW5ncywKICBmaW5kQmVzdE1hdGNoOiBmaW5kQmVzdE1hdGNoCn07CgpmdW5jdGlvbiBjb21wYXJlVHdvU3RyaW5ncyhmaXJzdCwgc2Vjb25kKSB7CiAgZmlyc3QgPSBmaXJzdC5yZXBsYWNlKC9ccysvZywgJycpOwogIHNlY29uZCA9IHNlY29uZC5yZXBsYWNlKC9ccysvZywgJycpOwogIGlmIChmaXJzdCA9PT0gc2Vjb25kKSByZXR1cm4gMTsgLy8gaWRlbnRpY2FsIG9yIGVtcHR5CgogIGlmIChmaXJzdC5sZW5ndGggPCAyIHx8IHNlY29uZC5sZW5ndGggPCAyKSByZXR1cm4gMDsgLy8gaWYgZWl0aGVyIGlzIGEgMC1sZXR0ZXIgb3IgMS1sZXR0ZXIgc3RyaW5nCgogIHZhciBmaXJzdEJpZ3JhbXMgPSBuZXcgTWFwKCk7CgogIGZvciAodmFyIGkgPSAwOyBpIDwgZmlyc3QubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICB2YXIgYmlncmFtID0gZmlyc3Quc3Vic3RyaW5nKGksIGkgKyAyKTsKICAgIHZhciBjb3VudCA9IGZpcnN0QmlncmFtcy5oYXMoYmlncmFtKSA/IGZpcnN0QmlncmFtcy5nZXQoYmlncmFtKSArIDEgOiAxOwogICAgZmlyc3RCaWdyYW1zLnNldChiaWdyYW0sIGNvdW50KTsKICB9CgogIDsKICB2YXIgaW50ZXJzZWN0aW9uU2l6ZSA9IDA7CgogIGZvciAodmFyIF9pID0gMDsgX2kgPCBzZWNvbmQubGVuZ3RoIC0gMTsgX2krKykgewogICAgdmFyIF9iaWdyYW0gPSBzZWNvbmQuc3Vic3RyaW5nKF9pLCBfaSArIDIpOwoKICAgIHZhciBfY291bnQgPSBmaXJzdEJpZ3JhbXMuaGFzKF9iaWdyYW0pID8gZmlyc3RCaWdyYW1zLmdldChfYmlncmFtKSA6IDA7CgogICAgaWYgKF9jb3VudCA+IDApIHsKICAgICAgZmlyc3RCaWdyYW1zLnNldChfYmlncmFtLCBfY291bnQgLSAxKTsKICAgICAgaW50ZXJzZWN0aW9uU2l6ZSsrOwogICAgfQogIH0KCiAgcmV0dXJuIDIuMCAqIGludGVyc2VjdGlvblNpemUgLyAoZmlyc3QubGVuZ3RoICsgc2Vjb25kLmxlbmd0aCAtIDIpOwp9CgpmdW5jdGlvbiBmaW5kQmVzdE1hdGNoKG1haW5TdHJpbmcsIHRhcmdldFN0cmluZ3MpIHsKICBpZiAoIWFyZUFyZ3NWYWxpZChtYWluU3RyaW5nLCB0YXJnZXRTdHJpbmdzKSkgdGhyb3cgbmV3IEVycm9yKCdCYWQgYXJndW1lbnRzOiBGaXJzdCBhcmd1bWVudCBzaG91bGQgYmUgYSBzdHJpbmcsIHNlY29uZCBzaG91bGQgYmUgYW4gYXJyYXkgb2Ygc3RyaW5ncycpOwogIHZhciByYXRpbmdzID0gW107CiAgdmFyIGJlc3RNYXRjaEluZGV4ID0gMDsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YXJnZXRTdHJpbmdzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgY3VycmVudFRhcmdldFN0cmluZyA9IHRhcmdldFN0cmluZ3NbaV07CiAgICB2YXIgY3VycmVudFJhdGluZyA9IGNvbXBhcmVUd29TdHJpbmdzKG1haW5TdHJpbmcsIGN1cnJlbnRUYXJnZXRTdHJpbmcpOwogICAgcmF0aW5ncy5wdXNoKHsKICAgICAgdGFyZ2V0OiBjdXJyZW50VGFyZ2V0U3RyaW5nLAogICAgICByYXRpbmc6IGN1cnJlbnRSYXRpbmcKICAgIH0pOwoKICAgIGlmIChjdXJyZW50UmF0aW5nID4gcmF0aW5nc1tiZXN0TWF0Y2hJbmRleF0ucmF0aW5nKSB7CiAgICAgIGJlc3RNYXRjaEluZGV4ID0gaTsKICAgIH0KICB9CgogIHZhciBiZXN0TWF0Y2ggPSByYXRpbmdzW2Jlc3RNYXRjaEluZGV4XTsKICByZXR1cm4gewogICAgcmF0aW5nczogcmF0aW5ncywKICAgIGJlc3RNYXRjaDogYmVzdE1hdGNoLAogICAgYmVzdE1hdGNoSW5kZXg6IGJlc3RNYXRjaEluZGV4CiAgfTsKfQoKZnVuY3Rpb24gYXJlQXJnc1ZhbGlkKG1haW5TdHJpbmcsIHRhcmdldFN0cmluZ3MpIHsKICBpZiAodHlwZW9mIG1haW5TdHJpbmcgIT09ICdzdHJpbmcnKSByZXR1cm4gZmFsc2U7CiAgaWYgKCFBcnJheS5pc0FycmF5KHRhcmdldFN0cmluZ3MpKSByZXR1cm4gZmFsc2U7CiAgaWYgKCF0YXJnZXRTdHJpbmdzLmxlbmd0aCkgcmV0dXJuIGZhbHNlOwogIGlmICh0YXJnZXRTdHJpbmdzLmZpbmQoZnVuY3Rpb24gKHMpIHsKICAgIHJldHVybiB0eXBlb2YgcyAhPT0gJ3N0cmluZyc7CiAgfSkpIHJldHVybiBmYWxzZTsKICByZXR1cm4gdHJ1ZTsKfQ=="},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/string-similarity/src/index.js"],"names":["module","exports","compareTwoStrings","findBestMatch","first","second","replace","length","firstBigrams","Map","i","bigram","substring","count","has","get","set","intersectionSize","mainString","targetStrings","areArgsValid","Error","ratings","bestMatchIndex","currentTargetString","currentRating","push","target","rating","bestMatch","Array","isArray","find","s"],"mappings":"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","sourcesContent":["module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n"]}]}