{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/editor.vue","mtime":1624897105965},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editor.vue"],"names":[],"mappingskDA;;AACA;;AACA;AAEA,SAAA,QAAA,QAAA,wBAAA;AACA,SAAA,WAAA,QAAA,wBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,SAAA,gBAAA,QAAA,2BAAA;AACA,SAAA,SAAA,QAAA,kBAAA;AACA,SAAA,GAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,SADA;AAEA,MAAA,SAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA,CAAA,CAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,CAAA,CALA;AAMA,MAAA,aAAA,EAAA,EANA;AAOA,MAAA,SAAA,EAAA,KAPA;AAQA,MAAA,UAAA,EAAA,KARA;AASA,MAAA,MAAA,EAAA,KATA;AAUA,MAAA,MAAA,EAAA,IAVA;AAWA,MAAA,SAAA,EAAA,KAXA;AAYA,MAAA,cAAA,EAAA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA;AALA,OAZA;AAmBA,MAAA,WAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,IAAA,EAAA,EAHA;AAIA,QAAA,EAAA,EAAA,EAJA;AAKA,QAAA,UAAA,EAAA,KALA;AAMA,QAAA,UAAA,EAAA,KANA;AAOA,QAAA,YAAA,EAAA;AAPA,OAnBA;AA4BA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA;AALA,OA5BA;AAmCA,MAAA,WAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,YAAA,EAAA;AAJA,OAnCA;AAyCA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,EAAA,EAAA,CAFA;AAGA,QAAA,UAAA,EAAA,EAHA;AAIA,QAAA,iBAAA,EAAA,EAJA;AAKA,QAAA,UAAA,EAAA,CALA;AAMA,QAAA,eAAA,EAAA;AANA,OAzCA;AAiDA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,EAAA,EAAA,CAAA,CAFA;AAGA,QAAA,eAAA,EAAA,EAHA;AAIA,QAAA,aAAA,EAAA,EAJA;AAKA,QAAA,eAAA,EAAA,EALA;AAMA,QAAA,kBAAA,EAAA,EANA;AAOA,QAAA,YAAA,EAAA,CAPA;AAQA,QAAA,gBAAA,EAAA,CARA;AASA,QAAA,gBAAA,EAAA,CATA;AAUA,QAAA,UAAA,EAAA,EAVA;AAWA,QAAA,UAAA,EAAA,EAXA;AAYA,QAAA,UAAA,EAAA,EAZA;AAaA,QAAA,YAAA,EAAA,CAbA;AAcA,QAAA,aAAA,EAAA,CAdA;AAeA,QAAA,iBAAA,EAAA;AAfA,OAjDA;AAkEA,MAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,MAAA,EAAA,EAJA;AAKA,QAAA,MAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OAlEA;AA0EA,MAAA,UAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA;AALA,OA1EA;AAiFA,MAAA,OAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA;AANA,OAjFA;AAyFA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA;AANA,OAzFA;AAiGA,MAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA;AANA,OAjGA;AAyGA,MAAA,QAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAzGA;AAgHA,MAAA,QAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAhHA;AAuHA,MAAA,QAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA,EALA;AAMA,QAAA,IAAA,EAAA,EANA;AAOA,QAAA,MAAA,EAAA,EAPA;AAQA,QAAA,KAAA,EAAA;AARA,OAvHA;AAiIA,MAAA,UAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA,EALA;AAMA,QAAA,SAAA,EAAA;AANA,OAjIA;AAyIA,MAAA,SAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,YAAA,EAAA,EAJA;AAKA,QAAA,GAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA;AANA,OAzIA;AAiJA,MAAA,SAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA,EANA;AAOA,QAAA,MAAA,EAAA,EAPA;AAQA,QAAA,KAAA,EAAA;AARA,OAjJA;AA2JA,MAAA,WAAA,EAAA;AACA,QAAA,SAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,SAAA,EAAA;AANA,OA3JA;AAmKA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAnKA;AAsKA,MAAA,UAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,aAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,eAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,eAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA;AAtKA,KAAA;AA4KA,GAjLA;AAkLA,EAAA,QAAA,kCACA,UAAA,CAAA,CAAA,aAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,oBAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AAAA;;AACA,UAAA,KAAA,MAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,QAAA;AACA,OAFA,MAEA;AACA,YAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,MAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,QAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,iBACA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,EAAA,KACA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CADA,IAEA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CAFA,IAGA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CAHA,IAIA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CAJA,IAKA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,SAAA,EAAA,KAAA,CAAA,EAAA,CALA,IAMA,KAAA,CAAA,EAAA,yBAAA,OAAA,CAAA,aAAA,GAAA,KAAA,CAAA,EAAA,CAPA;AASA,SAVA,CAAA;AAWA;AACA,KAnBA;AAoBA,IAAA,gBApBA,8BAoBA;AACA,aAAA,KAAA,cAAA,CAAA,EAAA,KAAA,SAAA;AACA,KAtBA;AAuBA,IAAA,iBAvBA,+BAuBA;AACA,aAAA,KAAA,YAAA,CAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,KAzBA;AA0BA,IAAA,kBA1BA,gCA0BA;AACA,aAAA,KAAA,aAAA,CAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,KA5BA;AA6BA,IAAA,gBA7BA,8BA6BA;AACA,aACA,KAAA,WAAA,CAAA,EAAA,IACA,KAAA,cAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EAAA,OAAA,IAAA,CAFA;AAIA,KAlCA;AAmCA,IAAA,mBAnCA,iCAmCA;AACA,aACA,KAAA,WAAA,CAAA,YAAA,IACA,KAAA,WAAA,CAAA,YAAA,CAAA,iBAAA,IACA,gBAAA,CAAA,UAHA;AAKA,KAzCA;AA0CA,IAAA,cA1CA,4BA0CA;AACA,UAAA,KAAA,mBAAA,EAAA;AACA,eAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,CACA,UAAA,KAAA;AAAA,iBACA,KAAA,CAAA,gBAAA,KAAA,CAAA,IACA,KAAA,CAAA,iBAAA,IAAA,CADA,IAEA,KAAA,CAAA,UAAA,IAAA,CAHA;AAAA,SADA,CAAA;AAMA;;AACA,aAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,gBAAA,KAAA,CAAA;AAAA,OADA,CAAA;AAGA,KAtDA;AAuDA,IAAA,eAvDA,6BAuDA;AACA,aAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,iBAAA,KAAA,CAAA;AAAA,OADA,CAAA;AAGA,KA3DA;AA4DA,IAAA,eA5DA,6BA4DA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,IAAA,MAAA,CAAA,WAAA;AAAA,OADA,CAAA;AAGA,aAAA,KAAA,GAAA,CAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,UAAA,GAAA,CAAA;AACA,KAjEA;AAkEA,IAAA,aAlEA,2BAkEA;AACA,UAAA,CAAA,KAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,eAAA,KAAA,QAAA,CAAA,KAAA;AACA;;AACA,UAAA,cAAA,GAAA,KAAA,eAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,QAAA,CAAA,MAAA,EAAA,GAAA,CAAA;AACA,aAAA,KAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,OAFA,CAAA;AAGA,KA3EA;AA4EA,IAAA,cA5EA,4BA4EA;AACA,UAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,eAAA,KAAA,SAAA,CAAA,QAAA;AACA;;AACA,UAAA,cAAA,GAAA,KAAA,eAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,SAAA,CAAA,MAAA,EAAA,GAAA,CAAA;AACA,aAAA,KAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,OAFA,CAAA;AAGA,KArFA;AAsFA,IAAA,gBAtFA,8BAsFA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,aAAA,CACA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,EAAA,CAAA;AAHA,OADA,EAMA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,mBAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,cAAA,CAAA,IAAA;AACA;AACA;AARA,OANA,EAgBA;AACA,QAAA,OAAA,EAAA;AADA,OAhBA,EAmBA;AACA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,YAAA,sBAAA,EAAA,CAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,WAAA,CAAA;AACA;AAJA,OAnBA,EAyBA;AACA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CADA;AAEA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,YAAA,GAAA,EAAA;AACA;AAJA,OAzBA,EA+BA;AACA,QAAA,OAAA,EAAA;AADA,OA/BA,EAkCA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,mBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAlCA,EAyCA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAzCA,EAgDA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAhDA,EAuDA;AACA,QAAA,OAAA,EAAA;AADA,OAvDA,EA0DA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,QAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,YAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,qBAAA;AACA;AACA;AARA,OA1DA,EAoEA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,YAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,oBAAA;AACA;AACA;AARA,OApEA,CAAA;AA+EA,KAvKA;AAwKA,IAAA,iBAxKA,+BAwKA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,aAAA,CACA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,mBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,EAAA,CAAA;AAHA,OADA,EAMA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,eAAA,CAAA,IAAA;AACA;AACA;AARA,OANA,EAgBA;AACA,QAAA,OAAA,EAAA;AADA,OAhBA,EAmBA;AACA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CADA;AAEA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,aAAA,sBAAA,EAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,WAAA,CAAA;AACA;AAJA,OAnBA,EAyBA;AACA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CADA;AAEA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,aAAA,GAAA,EAAA;AACA;AAJA,OAzBA,EA+BA;AACA,QAAA,OAAA,EAAA;AADA,OA/BA,EAkCA;AACA,QAAA,QAAA,EACA,EAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CAAA,IACA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CADA,IAEA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,EAAA,UAAA,KACA,EAAA,CAAA,eAHA,IAIA,EAAA,CAAA,YAAA,CAAA,CAAA,MAAA,EAAA,CAAA,WANA;AAOA,QAAA,IAAA,EAAA,iBAPA;AAQA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,+BAAA,CARA;AASA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,mBAAA;AACA;AAXA,OAlCA,EA+CA;AACA,QAAA,OAAA,EAAA;AADA,OA/CA,EAkDA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,mBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAlDA,EAyDA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAzDA,EAgEA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAFA;AAGA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,CAAA;AACA;AALA,OAhEA,EAuEA;AACA,QAAA,OAAA,EAAA;AADA,OAvEA,EA0EA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CAAA,IAAA,EAAA,CAAA,eAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,gBAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,aAAA,CAAA,IAAA;AACA;AANA,OA1EA,EAkFA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CAAA,IAAA,EAAA,CAAA,eAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,YAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,sBAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,UAAA,EAAA,CAAA,cAAA,CAAA,IAAA;AACA;AANA,OAlFA,EA0FA;AACA,QAAA,OAAA,EAAA;AADA,OA1FA,EA6FA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CAAA,IAAA,EAAA,CAAA,eAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,qBAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,aAAA,CAAA,MAAA,IAAA,EAAA,CAAA,eAAA,IAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,iBAAA;AACA;AACA;AARA,OA7FA,EAuGA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,QAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,sBAAA;AACA;AACA;AARA,OAvGA,EAiHA;AACA,QAAA,OAAA,EAAA;AADA,OAjHA,EAoHA;AACA,QAAA,QAAA,EAAA,EAAA,CAAA,aAAA,CAAA,MAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA,CAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,EAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,qBAAA;AACA;AACA;AARA,OApHA,CAAA;AA+HA;AAzSA,IAlLA;AA6dA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,CADA,EACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,GAAA,CAAA,GAAA,CAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;AACA,KARA;AASA,IAAA,iBATA,6BASA,CATA,EASA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,YAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,YAAA,GAAA,CAAA,GAAA,CAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;AACA,KAhBA;AAiBA,IAAA,WAjBA,uBAiBA,OAjBA,EAiBA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,KAnBA;AAoBA,IAAA,YApBA,wBAoBA,MApBA,EAoBA;AACA,UAAA,MAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA,GAAA,MAAA;AACA;AACA,KA1BA;AA2BA,IAAA,WA3BA,yBA2BA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,QAAA,EAAA,KAAA;AACA,KA7BA;AA8BA,IAAA,YA9BA,wBA8BA,MA9BA,EA8BA;AACA,aAAA,IAAA,IAAA,CAAA,YAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACA,KAhCA;AAiCA,IAAA,UAjCA,sBAiCA,IAjCA,EAiCA;AACA,aAAA,IAAA,IAAA,CAAA,IAAA,EAAA,cAAA,CACA,KAAA,EAAA,CAAA,aAAA,CADA,EAEA,KAAA,WAFA,CAAA;AAIA,KAtCA;AAuCA,IAAA,iBAvCA,6BAuCA,IAvCA,EAuCA;AACA,aAAA,IAAA,IAAA,CAAA,IAAA,EAAA,kBAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,EAAA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,OAFA;AAGA,QAAA,GAAA,EAAA;AAHA,OAAA,CAAA;AAKA,KA7CA;AA8CA,IAAA,aA9CA,yBA8CA,GA9CA,EA8CA;AACA,UAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,CAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AAEA,UAAA,IAAA,GAAA,KAAA,EAAA,CAAA,cAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA,EAAA,CAAA,eAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,EAAA,CAAA,gBAAA,CAAA;AACA,UAAA,OAAA,GAAA,KAAA,EAAA,CAAA,iBAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,EAAA,CAAA,gBAAA,CAAA;AACA,UAAA,OAAA,GAAA,KAAA,EAAA,CAAA,iBAAA,CAAA;AAEA,UAAA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,IAAA,oBAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,MAAA,oBAAA,OAAA,MAAA,CAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,MAAA,oBAAA,OAAA,MAAA,CAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,QAAA,GAAA,QAAA;AACA,KA/DA;AAiEA,IAAA,cAjEA,0BAiEA,EAjEA,EAiEA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,OADA,CAAA;AAGA,aAAA,KAAA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,KAtEA;AAuEA,IAAA,eAvEA,2BAuEA,EAvEA,EAuEA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CACA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,EAAA,IAAA,EAAA;AAAA,OADA,CAAA;AAGA,aAAA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,KA5EA;AA6EA,IAAA,MA7EA,oBA6EA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,KAAA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,EAAA,IAAA,MAAA,CAAA,WAAA;AACA,SAFA,CAAA;;AAGA,YAAA,YAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CACA,MADA,CACA,UAAA,KAAA;AAAA,iBAAA,CAAA,KAAA,CAAA,gBAAA,IAAA,KAAA,CAAA,QAAA;AAAA,SADA,EAEA,GAFA,CAEA,UAAA,KAAA,EAAA;AACA,iBAAA;AACA,YAAA,EAAA,EAAA,KAAA,CAAA,EADA;AAEA,YAAA,UAAA,EAAA,KAAA,CAAA,UAFA;AAGA,YAAA,WAAA,EAAA,KAAA,CAAA,WAHA;AAIA,YAAA,UAAA,EAAA,KAAA,CAAA,UAJA;AAKA,YAAA,iBAAA,EAAA,KAAA,CAAA,iBALA;AAMA,YAAA,eAAA,EAAA,KAAA,CAAA;AANA,WAAA;AAQA,SAXA,CAAA;;AAYA,YAAA,YAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CACA,MADA,CACA,UAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,gBAAA,IAAA,KAAA,CAAA,QAAA;AAAA,SADA,EAEA,GAFA,CAEA,UAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,EAAA;AAAA,SAFA,EAGA,IAHA,EAAA;;AAKA,YAAA,aAAA;;AACA,gBAAA,MAAA,CAAA,eAAA;AACA;AACA,eAAA,CAAA;AACA,YAAA,aAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CACA,MADA,CAEA,UAAA,MAAA;AAAA,qBAAA,MAAA,CAAA,iBAAA,KAAA,CAAA,IAAA,MAAA,CAAA,QAAA;AAAA,aAFA,EAIA,GAJA,CAIA,UAAA,MAAA,EAAA;AACA,qBAAA;AACA,gBAAA,EAAA,EAAA,MAAA,CAAA,EADA;AAEA,gBAAA,iBAAA,EAAA,MAAA,CAAA,iBAFA;AAGA,gBAAA,eAAA,EAAA,MAAA,CAAA,eAHA;AAIA,gBAAA,aAAA,EAAA,MAAA,CAAA,aAJA;AAKA,gBAAA,eAAA,EAAA,MAAA,CAAA,eALA;AAMA,gBAAA,kBAAA,EAAA,MAAA,CAAA,kBANA;AAOA,gBAAA,YAAA,EAAA,MAAA,CAAA,YAPA;AAQA,gBAAA,gBAAA,EAAA,MAAA,CAAA,gBARA;AASA,gBAAA,YAAA,EAAA,MAAA,CAAA;AATA,eAAA;AAWA,aAhBA,CAAA;AAiBA;AACA;;AACA,eAAA,CAAA;AACA,YAAA,aAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CACA,MADA,CAEA,UAAA,MAAA;AAAA,qBAAA,MAAA,CAAA,iBAAA,KAAA,CAAA,IAAA,MAAA,CAAA,QAAA;AAAA,aAFA,EAIA,GAJA,CAIA,UAAA,MAAA,EAAA;AACA,qBAAA;AACA,gBAAA,EAAA,EAAA,MAAA,CAAA,EADA;AAEA,gBAAA,iBAAA,EAAA,MAAA,CAAA,iBAFA;AAGA,gBAAA,UAAA,EAAA,MAAA,CAAA,UAHA;AAIA,gBAAA,UAAA,EAAA,MAAA,CAAA,UAJA;AAKA,gBAAA,OAAA,EAAA,MAAA,CAAA,OALA;AAMA,gBAAA,eAAA,EAAA,MAAA,CAAA,eANA;AAOA,gBAAA,gBAAA,EAAA,MAAA,CAAA,gBAPA;AAQA,gBAAA,YAAA,EAAA,MAAA,CAAA;AARA,eAAA;AAUA,aAfA,CAAA;AAgBA;AACA;;AACA,eAAA,CAAA;AACA,YAAA,aAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CACA,MADA,CAEA,UAAA,MAAA;AAAA,qBAAA,MAAA,CAAA,iBAAA,KAAA,CAAA,IAAA,MAAA,CAAA,QAAA;AAAA,aAFA,EAIA,GAJA,CAIA,UAAA,MAAA,EAAA;AACA,qBAAA;AACA,gBAAA,EAAA,EAAA,MAAA,CAAA,EADA;AAEA,gBAAA,iBAAA,EAAA,MAAA,CAAA,iBAFA;AAGA,gBAAA,UAAA,EAAA,MAAA,CAAA,UAHA;AAIA,gBAAA,YAAA,EAAA,MAAA,CAAA,YAJA;AAKA,gBAAA,aAAA,EAAA,MAAA,CAAA,aALA;AAMA,gBAAA,OAAA,EAAA,MAAA,CAAA,OANA;AAOA,gBAAA,eAAA,EAAA,MAAA,CAAA,eAPA;AAQA,gBAAA,gBAAA,EAAA,MAAA,CAAA,gBARA;AASA,gBAAA,YAAA,EAAA,MAAA,CAAA;AATA,eAAA;AAWA,aAhBA,CAAA;AAiBA;AA3DA;;AA6DA,YAAA,aAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CACA,MADA,CACA,UAAA,MAAA;AAAA,iBAAA,MAAA,CAAA,iBAAA,KAAA,CAAA,IAAA,MAAA,CAAA,QAAA;AAAA,SADA,EAEA,GAFA,CAEA,UAAA,MAAA;AAAA,iBAAA,MAAA,CAAA,EAAA;AAAA,SAFA,EAGA,IAHA,EAAA;;AAKA,YAAA,QAAA,GAAA,EAAA;;AACA,YAAA,YAAA,CAAA,MAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CACA,WAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AACA,YAAA,WAAA,EAAA,MAAA,CAAA,cAAA,CAAA,EADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA,CADA;AAMA;;AACA,YAAA,YAAA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,QAAA,CAAA,IAAA,CACA,WAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AACA,YAAA,WAAA,EAAA,MAAA,CAAA,cAAA,CAAA,EADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA,CADA;AAMA;;AACA,YAAA,aAAA,CAAA,MAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CACA,WAAA,CAAA,IAAA,iCAAA,MAAA,CAAA,eAAA,GAAA;AACA,YAAA,WAAA,EAAA,MAAA,CAAA,cAAA,CAAA,EADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA,CADA;AAMA;;AACA,YAAA,aAAA,CAAA,MAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,CACA,WAAA,CAAA,IAAA,iCAAA,MAAA,CAAA,eAAA,GAAA;AACA,YAAA,WAAA,EAAA,MAAA,CAAA,cAAA,CAAA,EADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA,CADA;AAMA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA;AACA,SAHA;AAIA,OA9HA,CAAA;AA+HA,KA/MA;AAgNA,IAAA,QAhNA,sBAgNA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,KAAA,aAAA,EAAA,EAAA,KAAA,cAAA,EAAA,CAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,cAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAHA;AAIA,KAtNA;AAuNA,IAAA,WAvNA,uBAuNA,GAvNA,EAuNA;AACA,WAAA,SAAA,GAAA,GAAA;AACA,KAzNA;AA0NA,IAAA,gBA1NA,4BA0NA,MA1NA,EA0NA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,MAAA,sBAAA,MAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,kBAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,WAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,QAAA,OAAA,CAAA,MAAA,CAAA;AACA,OAPA,CAAA;AAQA,KAnOA;AAoOA,IAAA,iBApOA,6BAoOA,MApOA,EAoOA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,sBAAA,MAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,OAAA,CAAA,CAAA,CAAA,CAAA,mBAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,OAAA,CAAA,CAAA,CAAA,CAAA,YAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,QAAA,OAAA,CAAA,OAAA,CAAA;AACA,OAPA,CAAA;AAQA,KA7OA;AA8OA,IAAA,iBA9OA,+BA8OA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,iBACA,CAAA,CAAA,kBAAA,GAAA,CAAA,CAAA,kBAAA,GACA,CADA,GAEA,CAAA,CAAA,kBAAA,GAAA,CAAA,CAAA,kBAAA,GACA,CAAA,CADA,GAEA,CALA;AAAA,SAAA;;AAOA,QAAA,OAAA;AACA,OATA,CAAA;AAUA,KAzPA;AA0PA,IAAA,kBA1PA,gCA0PA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,iBACA,CAAA,CAAA,mBAAA,GAAA,CAAA,CAAA,mBAAA,GACA,CADA,GAEA,CAAA,CAAA,mBAAA,GAAA,CAAA,CAAA,mBAAA,GACA,CAAA,CADA,GAEA,CALA;AAAA,SAAA;;AAOA,QAAA,OAAA;AACA,OATA,CAAA;AAUA,KArQA;AAsQA,IAAA,aAtQA,2BAsQA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,YAAA;AACA,cAAA,KAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA,YAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AACA,YAAA,KAAA,CAAA,gBAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,iBAAA;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,iBAAA;AACA,YAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,wBAAA;AACA,YAAA,KAAA,CAAA,eAAA,GAAA,KAAA,CAAA,sBAAA;AACA;;AACA,UAAA,OAAA;AACA,SAZA;AAaA,OAdA,CAAA;AAeA,KAtRA;AAuRA,IAAA,cAvRA,4BAuRA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,kBAAA,GAAA,IAAA,CAAA,YAAA;AACA,cAAA,MAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,YAAA,MAAA,CAAA,iBAAA,GAAA,CAAA;AACA,YAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,sBAAA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,oBAAA;AACA,YAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,sBAAA;AACA,YAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,sBAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,uBAAA;AACA,YAAA,MAAA,CAAA,kBAAA,GAAA,MAAA,CAAA,yBAAA;AACA,YAAA,MAAA,CAAA,kBAAA,GAAA,MAAA,CAAA,yBAAA;AACA,YAAA,MAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,0BAAA;AACA,YAAA,MAAA,CAAA,YAAA,GAAA,MAAA,CAAA,mBAAA;AACA,YAAA,MAAA,CAAA,YAAA,GAAA,MAAA,CAAA,mBAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,uBAAA;;AACA,gBACA,MAAA,CAAA,UAAA,KAAA,SAAA,IACA,MAAA,CAAA,UAAA,KAAA,SAFA,EAGA;AACA,cAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,iBAAA;AACA,cAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,iBAAA;AACA;;AACA,gBACA,MAAA,CAAA,UAAA,KAAA,SAAA,IACA,MAAA,CAAA,YAAA,KAAA,SADA,IAEA,MAAA,CAAA,aAAA,KAAA,SAHA,EAIA;AACA,cAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,iBAAA;AACA,cAAA,MAAA,CAAA,YAAA,GAAA,MAAA,CAAA,mBAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,oBAAA;AACA;AACA;;AACA,UAAA,OAAA;AACA,SAnCA;AAoCA,OArCA,CAAA;AAsCA,KA9TA;AA+TA,IAAA,qBA/TA,mCA+TA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,eAAA,GACA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,eADA;AAEA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAxUA;AAyUA,IAAA,sBAzUA,oCAyUA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,gBAAA,GACA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,gBADA;AAEA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAlVA;AAmVA,IAAA,iBAnVA,+BAmVA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,cAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,YAAA,IAAA,CAAA,EAAA;AACA,iBAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,YAAA,GAAA,CAAA;AACA,WAFA,MAEA;AACA,iBAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,YAAA,GAAA,CAAA;AACA;;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KA/VA;AAgWA,IAAA,oBAhWA,kCAgWA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,gBAAA,GAAA,CAAA;AACA,eAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAxWA;AAyWA,IAAA,qBAzWA,mCAyWA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,iBAAA,GAAA,CAAA;AACA,eAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAjXA;AAkXA,IAAA,YAlXA,wBAkXA,GAlXA,EAkXA;AAAA;;AAAA,UAAA,WAAA,uEAAA,SAAA;AACA,WAAA,SAAA,GAAA,IAAA;;AACA,UAAA,KAAA,cAAA,CAAA,OAAA,EAAA;AACA,aAAA,MAAA;AACA;;AACA,WAAA,cAAA,CAAA,EAAA,GAAA,GAAA;AACA,MAAA,WAAA,CACA,GADA,yBACA,GADA,GAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,MAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,kBAAA,GAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AACA,cAAA,GAAA,CAAA,wBAAA,GAAA,KAAA,CAAA,iBAAA;AACA,cAAA,GAAA,CAAA,sBAAA,GAAA,KAAA,CAAA,eAAA;AACA,cAAA,GAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,UAAA;AACA,cAAA,GAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,UAAA;AACA,cAAA,GAAA,CAAA,gBAAA,GAAA,KAAA;AACA,cAAA,GAAA,CAAA,QAAA,GAAA,KAAA;AACA,qBAAA,GAAA;AACA,aATA,CAAA;;AAUA,gBAAA,MAAA,CAAA,MAAA,EAAA;AACA,kBAAA,WAAA,KAAA,SAAA,EAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA;AACA,eAFA,MAEA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,WAAA,EAAA,EAAA;;AACA,gBAAA,MAAA,CAAA,WAAA;AACA;AACA;AACA,WAnBA;AAoBA;;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA1BA,EA2BA,KA3BA,CA2BA,YAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA7BA;AA8BA,KAtZA;AAuZA,IAAA,oBAvZA,gCAuZA,IAvZA,EAuZA;AACA,UAAA,GAAA,GAAA,KAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,KA9ZA;AA+ZA,IAAA,qBA/ZA,iCA+ZA,IA/ZA,EA+ZA;AACA,UAAA,GAAA,GAAA,KAAA,aAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,aAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,aAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,KAtaA;AAuaA,IAAA,2BAvaA,uCAuaA,IAvaA,EAuaA;AACA,UAAA,GAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,KA9aA;AA+aA,IAAA,wBA/aA,oCA+aA,IA/aA,EA+aA;AACA,UAAA,GAAA,GAAA,KAAA,SAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,SAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,KAtbA;AAubA,IAAA,YAvbA,wBAubA,KAvbA,EAubA;AACA,aAAA,KAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA;AAAA,OAAA,EAAA,OAAA,CAAA,KAAA,CAAA;AACA,KAzbA;AA0bA,IAAA,yBA1bA,qCA0bA,IA1bA,EA0bA;AACA,UAAA,SAAA,GAAA,KAAA,YAAA,CAAA,KAAA,iBAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,YAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,GAAA,CAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,SAAA,EAAA,CAAA,IAAA,SAAA,GAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA;AACA,YAAA,CAAA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,IAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA;AACA;AACA;AACA,KAncA;AAocA,IAAA,aApcA,yBAocA,MApcA,EAocA;AACA,aAAA,KAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA;AAAA,OAAA,EAAA,OAAA,CAAA,MAAA,CAAA;AACA,KAtcA;AAucA,IAAA,0BAvcA,sCAucA,IAvcA,EAucA;AACA,UAAA,SAAA,GAAA,KAAA,aAAA,CAAA,KAAA,kBAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,aAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,GAAA,CAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,SAAA,EAAA,CAAA,IAAA,SAAA,GAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA;AACA,YAAA,CAAA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACA,eAAA,aAAA,CAAA,IAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA;AACA;AACA;AACA,KAhdA;AAidA,IAAA,gCAjdA,4CAidA,KAjdA,EAidA;AACA,UAAA,SAAA,GACA,KAAA,YAAA,CAAA,MAAA,CAAA,KAAA,YAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,CADA;AAEA,UAAA,GAAA,GAAA,KAAA,GAAA,SAAA,GAAA,CAAA,GAAA,CAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,SAAA,EAAA,CAAA,IAAA,KAAA,GAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA;AACA,YAAA,CAAA,KAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA;AACA,KA1dA;AA2dA,IAAA,6BA3dA,yCA2dA,KA3dA,EA2dA;AACA,UAAA,SAAA,GACA,KAAA,SAAA,CAAA,YAAA,CAAA,KAAA,SAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA,CADA;AAEA,UAAA,GAAA,GAAA,KAAA,GAAA,SAAA,GAAA,CAAA,GAAA,CAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,SAAA,EAAA,CAAA,IAAA,KAAA,GAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA;AACA,YAAA,CAAA,KAAA,SAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,SAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA;AACA,KApeA;AAqeA,IAAA,oBAreA,gCAqeA,IAreA,EAqeA;AACA,WAAA,YAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAxeA;AAyeA,IAAA,qBAzeA,iCAyeA,IAzeA,EAyeA;AACA,WAAA,aAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,aAAA,CAAA,IAAA,CAAA,IAAA;AACA,KA5eA;AA6eA,IAAA,2BA7eA,uCA6eA,IA7eA,EA6eA;AACA,WAAA,YAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAhfA;AAifA,IAAA,wBAjfA,oCAifA,IAjfA,EAifA;AACA,WAAA,SAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,SAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACA,KApfA;AAqfA,IAAA,mBArfA,+BAqfA,IArfA,EAqfA;AAAA,UAAA,IAAA,uEAAA,CAAA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAxfA;AAyfA,IAAA,cAzfA,4BAyfA;AAAA;;AACA,UAAA,OAAA,GAAA,EAAA;;AACA,UAAA,KAAA,WAAA,CAAA,UAAA,EAAA;AACA,QAAA,OAAA,IAAA,GAAA;AACA;;AACA,UAAA,KAAA,WAAA,CAAA,UAAA,EAAA;AACA,QAAA,OAAA,IAAA,GAAA;AACA;;AACA,UAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,EAAA,KAAA,CAAA,EAAA,OAAA,CAAA;;AACA,cAAA,QAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA,cAAA,QAAA,CAAA,KAAA,WAAA,CAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBACA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CADA,EAEA;AACA,qBAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA,qBAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,GACA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,KAAA,WAAA,CAAA,EAFA,CADA;AAKA;AACA;AACA,WAbA,MAaA;AACA,iBAAA,cAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,cAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,OAAA,CAAA,WAAA,CAAA,EAFA,CAAA;AAIA,aANA;AAOA;;AACA;AAEA;;AACA,aAAA,CAAA;AACA,cAAA,QAAA,CAAA,KAAA,WAAA,CAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;AACA,kBACA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,CADA,EAEA;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,eAAA,GACA,KAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,eAAA,CAAA,OAAA,CACA,EADA,EAEA,KAAA,WAAA,CAAA,EAFA,CADA;AAKA;;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,UAAA,GACA,KAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,KAAA,WAAA,CAAA,EAFA,CADA;AAKA;;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,UAAA,GACA,KAAA,cAAA,CAAA,OAAA,CAAA,EAAA,EAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,KAAA,WAAA,CAAA,EAFA,CADA;AAKA;AACA;AACA;AACA,WA/BA,MA+BA;AACA,iBAAA,eAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,kBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA,CAAA,OAAA,CACA,EADA,EAEA,OAAA,CAAA,WAAA,CAAA,EAFA,CAAA;AAIA;;AACA,kBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,OAAA,CAAA,WAAA,CAAA,EAFA,CAAA;AAIA;;AACA,kBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CACA,EADA,EAEA,OAAA,CAAA,WAAA,CAAA,EAFA,CAAA;AAIA;AACA,aAtBA;AAuBA;;AACA;AArFA;;AAuFA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,KAAA;AACA,KA3lBA;AA4lBA,IAAA,iBA5lBA,6BA4lBA,IA5lBA,EA4lBA;AAAA,UAAA,IAAA,uEAAA,CAAA;AACA,WAAA,YAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,YAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA/lBA;AAgmBA,IAAA,eAhmBA,6BAgmBA;AACA,UAAA,MAAA,GAAA,KAAA,YAAA,CAAA,MAAA;AACA,UAAA,MAAA,GAAA,KAAA,YAAA,CAAA,MAAA;;AACA,cAAA,QAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA,cAAA,QAAA,CAAA,KAAA,YAAA,CAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBACA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CADA,EAEA;AACA,qBAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA,qBAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,GACA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,UAAA,GAAA,MADA;AAEA;AACA;AACA,WAVA,MAUA;AACA,iBAAA,cAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,cAAA,KAAA,CAAA,UAAA,GAAA,MAAA,GAAA,KAAA,CAAA,UAAA,GAAA,MAAA;AACA,aAHA;AAIA;;AACA;AAEA;;AACA,aAAA,CAAA;AACA,cAAA,QAAA,CAAA,KAAA,YAAA,CAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,iBAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EAAA,EAAA;AACA,kBACA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,EAAA,CADA,EAEA;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,eAAA,GACA,MAAA,GACA,KAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,eADA,GAEA,MAHA;AAIA;;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,UAAA,GACA,MAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,UAAA,GAAA,MADA;AAEA;;AACA,oBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,QAAA,GAAA,IAAA;AACA,uBAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,UAAA,GACA,MAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,GAAA,EAAA,UAAA,GAAA,MADA;AAEA;AACA;AACA;AACA,WAxBA,MAwBA;AACA,gBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,mBAAA,eAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,eAAA,GACA,MAAA,GAAA,MAAA,CAAA,eAAA,GAAA,MADA;AAEA,eAJA;AAKA;;AACA,gBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,mBAAA,eAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,GAAA,MAAA,CAAA,UAAA,GAAA,MAAA;AACA,eAHA;AAIA;;AACA,gBAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,mBAAA,eAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,GAAA,MAAA,CAAA,UAAA,GAAA,MAAA;AACA,eAHA;AAIA;AACA;;AACA;AApEA;;AAsEA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,WAAA,YAAA,CAAA,KAAA,GAAA,KAAA;AACA,KA3qBA;AA4qBA,IAAA,gBA5qBA,4BA4qBA,IA5qBA,EA4qBA,IA5qBA,EA4qBA;AACA,WAAA,WAAA,CAAA,IAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA/qBA;AAgrBA,IAAA,UAhrBA,wBAgrBA;AAAA;;AACA,UAAA,MAAA,GAAA,KAAA,WAAA,CAAA,MAAA;AACA,UAAA,MAAA;AACA,UAAA,OAAA;;AACA,UAAA,QAAA,CAAA,KAAA,WAAA,CAAA,YAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,OAAA,CAAA,YAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,SAFA,CAAA;AAGA,QAAA,OAAA,GAAA,KAAA,eAAA,CAAA,MAAA,CAAA,UAAA,MAAA,EAAA;AACA,iBAAA,OAAA,CAAA,aAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AACA,SAFA,CAAA;AAGA,OAPA,MAOA;AACA,QAAA,MAAA,GAAA,KAAA,cAAA;AACA,QAAA,OAAA,GAAA,KAAA,eAAA;AACA;;AACA,cAAA,QAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,oBAAA,QAAA,CAAA,MAAA,CAAA;AACA,mBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,SAAA,EAAA;AACA;;AACA,mBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;;AACA,mBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;AAZA;AAcA,WAfA;AAgBA;AAEA;;AACA,aAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,oBAAA,QAAA,CAAA,MAAA,CAAA;AACA,mBAAA,CAAA;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA,CAAA,SAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,SAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,SAAA,EAAA;AACA;;AACA;;AACA,mBAAA,CAAA;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA,CAAA,WAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;;AACA;;AACA,mBAAA,CAAA;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA,CAAA,WAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;;AACA,oBAAA,OAAA,CAAA,eAAA,KAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;;AACA;AA1CA;AA4CA,WA7CA;AA8CA;AArEA;;AAuEA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,KAAA;AACA,KAxwBA;AAywBA,IAAA,cAzwBA,0BAywBA,IAzwBA,EAywBA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,CAAA;AAAA,OADA,CAAA;AAGA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA;;AACA,UAAA,KAAA,EAAA;AACA,aAAA,WAAA,CAAA,EAAA,GAAA,KAAA,YAAA,CAAA,CAAA,CAAA;AACA,aAAA,WAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA;AACA,aAAA,WAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA;AACA,aAAA,WAAA,CAAA,eAAA,GAAA,KAAA,CAAA,eAAA;AACA,aAAA,WAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,iBAAA;AACA,aAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,KAtxBA;AAuxBA,IAAA,eAvxBA,2BAuxBA,IAvxBA,EAuxBA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CACA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,EAAA,KAAA,OAAA,CAAA,aAAA,CAAA,CAAA,CAAA;AAAA,OADA,CAAA;AAGA,UAAA,MAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,UAAA,MAAA,EAAA;AACA,aAAA,YAAA,CAAA,EAAA,GAAA,KAAA,aAAA,CAAA,CAAA,CAAA;AACA,aAAA,YAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA;AACA,aAAA,YAAA,CAAA,aAAA,GAAA,MAAA,CAAA,aAAA;AACA,aAAA,YAAA,CAAA,eAAA,GAAA,MAAA,CAAA,eAAA;AACA,aAAA,YAAA,CAAA,kBAAA,GAAA,MAAA,CAAA,kBAAA;AACA,aAAA,YAAA,CAAA,YAAA,GAAA,MAAA,CAAA,YAAA;AACA,aAAA,YAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,gBAAA;AACA,aAAA,YAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,iBAAA;AACA,aAAA,YAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,gBAAA;;AACA,YACA,MAAA,CAAA,UAAA,KAAA,SAAA,IACA,MAAA,CAAA,UAAA,KAAA,SADA,IAEA,MAAA,CAAA,OAAA,KAAA,SAHA,EAIA;AACA,eAAA,YAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,eAAA,YAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,eAAA,YAAA,CAAA,OAAA,GAAA,MAAA,CAAA,OAAA;AACA;;AACA,YACA,MAAA,CAAA,UAAA,KAAA,SAAA,IACA,MAAA,CAAA,YAAA,KAAA,SADA,IAEA,MAAA,CAAA,aAAA,KAAA,SAHA,EAIA;AACA,eAAA,YAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,eAAA,YAAA,CAAA,YAAA,GAAA,MAAA,CAAA,YAAA;AACA,eAAA,YAAA,CAAA,aAAA,GAAA,MAAA,CAAA,aAAA;AACA;;AACA,aAAA,YAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,KA1zBA;AA2zBA,IAAA,SA3zBA,uBA2zBA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,OAAA,CAAA,WAAA,CAAA,EAAA;AAAA,OADA,CAAA;AAGA,WAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,UAAA,GACA,KAAA,WAAA,CAAA,UADA;AAEA,WAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,UAAA,GACA,KAAA,WAAA,CAAA,UADA;AAEA,WAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,eAAA,GACA,KAAA,WAAA,CAAA,eADA;AAEA,WAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,iBAAA,GACA,KAAA,WAAA,CAAA,iBADA;AAEA,WAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAAA,QAAA,GAAA,IAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,KAAA;AACA,KA10BA;AA20BA,IAAA,UA30BA,wBA20BA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CACA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,EAAA,KAAA,OAAA,CAAA,aAAA,CAAA,CAAA,CAAA;AAAA,OADA,CAAA;AAGA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,eAAA,GACA,KAAA,YAAA,CAAA,eADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,aAAA,GACA,KAAA,YAAA,CAAA,aADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,eAAA,GACA,KAAA,YAAA,CAAA,eADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,kBAAA,GACA,KAAA,YAAA,CAAA,kBADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,gBAAA,GACA,KAAA,YAAA,CAAA,gBADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,YAAA,GACA,KAAA,YAAA,CAAA,YADA;AAEA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,iBAAA,GACA,KAAA,YAAA,CAAA,iBADA;;AAEA,UACA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,KAAA,SAAA,IACA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,KAAA,SADA,IAEA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,OAAA,KAAA,SAHA,EAIA;AACA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,GACA,KAAA,YAAA,CAAA,UADA;AAEA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,GACA,KAAA,YAAA,CAAA,UADA;AAEA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,OAAA,GAAA,KAAA,YAAA,CAAA,OAAA;AACA;;AACA,UACA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,KAAA,SAAA,IACA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,YAAA,KAAA,SADA,IAEA,KAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,aAAA,KAAA,SAHA,EAIA;AACA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,UAAA,GACA,KAAA,YAAA,CAAA,UADA;AAEA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,YAAA,GACA,KAAA,YAAA,CAAA,YADA;AAEA,aAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,aAAA,GACA,KAAA,YAAA,CAAA,aADA;AAEA;;AACA,WAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,QAAA,GAAA,IAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,WAAA,YAAA,CAAA,KAAA,GAAA,KAAA;AACA,KAv3BA;AAw3BA,IAAA,gBAx3BA,8BAw3BA;AACA,WAAA,cAAA,CAAA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,CADA;AAAA,OAAA,CAAA;AAGA,WAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KA93BA;AA+3BA,IAAA,kBA/3BA,gCA+3BA;AACA,WAAA,cAAA,CAAA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,CADA;AAAA,OAAA,CAAA;AAGA,WAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAr4BA;AAs4BA,IAAA,eAt4BA,6BAs4BA;AACA,WAAA,cAAA,CAAA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,CADA;AAAA,OAAA,CAAA;AAGA,WAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KA54BA;AA64BA,IAAA,iBA74BA,+BA64BA;AACA,WAAA,cAAA,CAAA,MAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,CADA;AAAA,OAAA,CAAA;AAGA,WAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAn5BA;AAo5BA,IAAA,iBAp5BA,+BAo5BA;AAAA;;AACA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,gBAAA,OAAA,CAAA,eAAA;AACA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,eAAA,GAAA,CAAA,CAAA,eAAA,GACA,CADA,GAEA,CAAA,CAAA,eAAA,GAAA,CAAA,CAAA,eAAA,GACA,CAAA,CADA,GAEA,CAJA;;AAKA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CADA,GAEA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CAAA,CADA,GAEA,CAJA;;AAKA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CADA,GAEA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CAAA,CADA,GAEA,CAJA;AAdA;AAoBA,OArBA,CAAA;AAsBA,WAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KA96BA;AA+6BA,IAAA,mBA/6BA,iCA+6BA;AAAA;;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,gBAAA,OAAA,CAAA,eAAA;AACA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,eAAA,GAAA,CAAA,CAAA,eAAA,GACA,CADA,GAEA,CAAA,CAAA,eAAA,GAAA,CAAA,CAAA,eAAA,GACA,CAAA,CADA,GAEA,CAJA;;AAKA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CADA,GAEA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CAAA,CADA,GAEA,CAJA;;AAKA,eAAA,CAAA;AACA,mBAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CADA,GAEA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,GACA,CAAA,CADA,GAEA,CAJA;AAdA;AAoBA,OArBA,CAAA;AAsBA,WAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAx8BA;AAy8BA,IAAA,kBAz8BA,gCAy8BA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,gBAAA,GACA,CADA,GAEA,CAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,gBAAA,GACA,CAAA,CADA,GAEA,CALA;AAAA,OAAA,CAAA;AAOA,WAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KAn9BA;AAo9BA,IAAA,oBAp9BA,kCAo9BA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,gBAAA,GACA,CADA,GAEA,CAAA,CAAA,gBAAA,GAAA,CAAA,CAAA,gBAAA,GACA,CAAA,CADA,GAEA,CALA;AAAA,OAAA,CAAA;AAOA,WAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA,KA99BA;AA+9BA,IAAA,QA/9BA,sBA+9BA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,IADA,CACA,kBADA,EACA;AAAA,QAAA,WAAA,EAAA,KAAA,cAAA,CAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,IAAA,IAAA,GAAA,CAAA,IAAA,EAAA;AACA,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,CAAA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA;;AACA,YAAA,OAAA,CAAA,WAAA,GACA,OAAA,CAAA,cAAA,CAAA,MAAA,CACA,OAAA,CAAA,cAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CADA,EAEA,EAHA;AAIA,YAAA,OAAA,CAAA,YAAA,GAAA,CACA,OAAA,CAAA,cAAA,CAAA,MAAA,CACA,OAAA,CAAA,cAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CADA,EAEA,EAHA,CAAA;AAKA,YAAA,OAAA;AACA,WAZA,EAYA,IAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,cAAA,CAAA,IAAA;AACA,WAdA,CAAA;AAeA;AACA,OArBA,EAsBA,KAtBA,CAsBA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,QAAA,OAAA,CAAA,OAAA,CACA,OADA,EAEA,OAAA,CAAA,EAAA,CAAA,gBAAA,CAFA,EAGA,OAAA,CAAA,EAAA,CAAA,wBAAA,CAHA,EAIA,gBAJA,EAKA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SALA;AAOA,OA/BA;AAgCA,KAjgCA;AAkgCA,IAAA,SAlgCA,uBAkgCA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,IADA,CACA,mBADA,EACA;AACA,QAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,QAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA;AAHA,OADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,IAAA,IAAA,GAAA,CAAA,IAAA,EAAA;AACA,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AACA,YAAA,OAAA,CAAA,YAAA,GACA,OAAA,CAAA,cAAA,CAAA,OAAA,CACA,OAAA,CAAA,cAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CADA,EAEA,EAHA;AAIA,YAAA,OAAA,CAAA,aAAA,GAAA,CACA,OAAA,CAAA,cAAA,CAAA,OAAA,CACA,OAAA,CAAA,cAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CADA,EAEA,EAHA,CAAA;AAKA,YAAA,OAAA;AACA,WAZA,EAYA,IAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,eAAA,CAAA,IAAA;AACA,WAdA,CAAA;AAeA;AACA,OAzBA,EA0BA,KA1BA,CA0BA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,QAAA,OAAA,CAAA,OAAA,CACA,OADA,EAEA,OAAA,CAAA,EAAA,CAAA,gBAAA,CAFA,EAGA,OAAA,CAAA,EAAA,CAAA,yBAAA,CAHA,EAIA,gBAJA,EAKA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SALA;AAOA,OAnCA;AAoCA,KAxiCA;AAyiCA,IAAA,WAziCA,yBAyiCA;AAAA;;AACA,WAAA,YAAA,GAAA,CAAA,CAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,cAAA,CAAA,OAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CACA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA,KAAA,OAAA,CAAA,WAAA;AAAA,OADA,CAAA;AAGA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,0BAEA,KAAA,cAAA,CAAA,EAFA,cAEA,KAAA,CAAA,EAFA,cAEA,KAAA,CAAA,UAFA,GAIA,IAJA,CAIA,UAAA,GAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,SAAA,GAAA,CAAA;AACA,QAAA,QAAA,CAAA,eAAA,CAAA,SAAA,GAAA,CAAA;;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,cAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,GAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACA,YAAA,GAAA,CAAA,sBAAA,GAAA,MAAA,CAAA,eAAA;AACA,YAAA,GAAA,CAAA,oBAAA,GAAA,MAAA,CAAA,aAAA;AACA,YAAA,GAAA,CAAA,sBAAA,GAAA,MAAA,CAAA,eAAA;AACA,YAAA,GAAA,CAAA,sBAAA,GAAA,MAAA,CAAA,eAAA;AACA,YAAA,GAAA,CAAA,uBAAA,GAAA,MAAA,CAAA,gBAAA;AACA,YAAA,GAAA,CAAA,yBAAA,GAAA,MAAA,CAAA,kBAAA;AACA,YAAA,GAAA,CAAA,yBAAA,GAAA,MAAA,CAAA,kBAAA;AACA,YAAA,GAAA,CAAA,0BAAA,GAAA,MAAA,CAAA,mBAAA;AACA,YAAA,GAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,uBAAA,GAAA,MAAA,CAAA,gBAAA;AACA,YAAA,GAAA,CAAA,QAAA,GAAA,KAAA;AACA,YAAA,GAAA,CAAA,iBAAA,GAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,UAAA,IAAA,CAAA,EAAA;AACA,kBAAA,GAAA,CAAA,UAAA,IAAA,EAAA,EAAA;AACA,gBAAA,GAAA,CAAA,UAAA,GAAA,GAAA,CAAA,eAAA;AACA,gBAAA,GAAA,CAAA,iBAAA,GAAA,GAAA,CAAA,eAAA;AACA,eAHA,MAGA;AACA,gBAAA,GAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,UAAA;AACA;;AACA,cAAA,GAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,UAAA;AACA,cAAA,GAAA,CAAA,cAAA,GAAA,MAAA,CAAA,OAAA;AACA;;AACA,gBAAA,KAAA,CAAA,UAAA,IAAA,CAAA,EAAA;AACA,kBAAA,GAAA,CAAA,UAAA,IAAA,EAAA,EAAA;AACA,gBAAA,GAAA,CAAA,UAAA,GAAA,GAAA,CAAA,eAAA;AACA,gBAAA,GAAA,CAAA,iBAAA,GAAA,GAAA,CAAA,eAAA;AACA,eAHA,MAGA;AACA,gBAAA,GAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,UAAA;AACA;;AACA,cAAA,GAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,YAAA;AACA,cAAA,GAAA,CAAA,oBAAA,GAAA,MAAA,CAAA,aAAA;AACA,cAAA,GAAA,CAAA,cAAA,GAAA,MAAA,CAAA,OAAA;AACA;;AACA,mBAAA,GAAA;AACA,WArCA,CAAA;AAsCA,UAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,mBACA,CAAA,CAAA,mBAAA,GAAA,CAAA,CAAA,mBAAA,GACA,CADA,GAEA,CAAA,CAAA,mBAAA,GAAA,CAAA,CAAA,mBAAA,GACA,CAAA,CADA,GAEA,CALA;AAAA,WAAA;AAOA,UAAA,OAAA,CAAA,cAAA,CAAA,OAAA,GAAA,OAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAhDA,MAgDA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA;AACA,OA1DA,EA2DA,KA3DA,CA2DA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA7DA;AA8DA,KAhnCA;AAinCA,IAAA,mBAjnCA,iCAinCA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,UAAA,OAAA,GAAA,KAAA,aAAA,CAAA,IAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,OAFA,CAAA;AAGA,MAAA,WAAA,CACA,IADA,gCACA,KAAA,eADA,GACA;AACA,QAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,QAAA,EAAA,KAAA,YAAA,CAAA,CAAA;AAHA,OADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACA;AACA,OAXA,EAYA,KAZA,CAYA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAeA,KAtoCA;AAuoCA,IAAA,gBAvoCA,4BAuoCA,IAvoCA,EAuoCA;AAAA,UAAA,IAAA,uEAAA,KAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,IAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA;AACA;AACA,KA9oCA;AA+oCA,IAAA,iBA/oCA,6BA+oCA,IA/oCA,EA+oCA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,YAAA,CAAA,MAAA,GAAA,EAAA;AACA,aAAA,YAAA,CAAA,OAAA,GAAA,EAAA;AACA,aAAA,YAAA,CAAA,MAAA,GAAA,EAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SAAA,GAAA,IAAA;AACA,YAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,SAFA,CAAA;AAGA,YAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,YAAA,OAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,iBAAA;AACA,YAAA,iBAAA,EAAA,KAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,CAAA,IAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,CAAA,OAJA;AAKA,YAAA,YAAA,EAAA,IALA;AAMA,YAAA,YAAA,EAAA,KAAA;AANA,WAAA;AAQA,SAVA,CAAA;AAWA,QAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,UAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,UAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,SAXA,EAYA,KAZA,CAYA,YAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAdA;AAeA;;AACA,WAAA,YAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAvrCA;AAwrCA,IAAA,gBAxrCA,4BAwrCA,MAxrCA,EAwrCA;AAAA;;AACA,UAAA,MAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,OAAA,GAAA,EAAA;AACA,aAAA,YAAA,CAAA,MAAA,GAAA,EAAA;AACA,OAHA,MAGA;AACA,aAAA,YAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,WAAA,CACA,IADA,CACA,0BADA,EACA;AACA,UAAA,MAAA,EAAA;AADA,SADA,EAIA,IAJA,CAIA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,MAAA,GAAA,EAAA;;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,YAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,OAAA,CAAA,YAAA,CAAA,OAAA,GAAA,EAAA;AACA;;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAZA,EAaA,KAbA,CAaA,YAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,OAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAjBA;AAkBA;AACA,KAjtCA;AAktCA,IAAA,eAltCA,2BAktCA,IAltCA,EAktCA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,UAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,UAAA,CAAA,KAAA,EAAA;AACA,eAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,UAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,UAAA,CAAA,KAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,UAAA,CAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CACA,WADA,EAEA,cAFA,CAJA;AAQA,YAAA,YAAA,EAAA,IARA;AASA,YAAA,YAAA,EAAA,KAAA;AATA,WADA,CAAA;AAaA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA7vCA;AA8vCA,IAAA,kBA9vCA,8BA8vCA,GA9vCA,EA8vCA,SA9vCA,EA8vCA;AAAA;;AACA,UAAA,GAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA,OAHA,MAGA;AACA,aAAA,UAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,WAAA,CACA,IADA,CACA,yBADA,EACA;AACA,UAAA,GAAA,EAAA,GADA;AAEA,UAAA,SAAA,EAAA;AAFA,SADA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,MAAA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,EAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,OAAA,CAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA;;AACA,UAAA,OAAA,CAAA,UAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAZA,EAaA,KAbA,CAaA,YAAA;AACA,UAAA,OAAA,CAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA,UAAA,OAAA,CAAA,UAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAhBA;AAiBA;AACA,KAtxCA;AAuxCA,IAAA,YAvxCA,wBAuxCA,IAvxCA,EAuxCA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,OAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,OAAA,CAAA,KAAA,EAAA;AACA,eAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,OAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,OAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,kCAAA,KAAA,OAAA,CAAA,OAAA,uBAJA;AAKA,YAAA,YAAA,EAAA,KAAA;AALA,WADA,CAAA;AASA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA/zCA;AAg0CA,IAAA,cAh0CA,0BAg0CA,OAh0CA,EAg0CA;AAAA;;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,OAAA,CAAA,KAAA,GAAA,GAAA;AACA,QAAA,OAAA,CAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAHA;AAIA,KAt0CA;AAu0CA,IAAA,UAv0CA,sBAu0CA,IAv0CA,EAu0CA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,KAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAJA;AAKA,YAAA,YAAA,EAAA,KAAA;AALA,WADA,CAAA;AASA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA/2CA;AAg3CA,IAAA,cAh3CA,0BAg3CA,OAh3CA,EAg3CA;AAAA;;AACA,WAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,IADA,CACA,oBADA,EACA;AAAA,QAAA,QAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OALA;AAMA,KAx3CA;AAy3CA,IAAA,gBAz3CA,4BAy3CA,IAz3CA,EAy3CA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,WAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,WAAA,CAAA,KAAA,EAAA;AACA,eAAA,WAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,WAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,WAAA,CAAA,KAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,WAAA,CAAA,KAAA,CAAA,kBAJA;AAKA,YAAA,YAAA,EAAA,KAAA;AALA,WADA,CAAA;AASA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAj6CA;AAk6CA,IAAA,oBAl6CA,gCAk6CA,OAl6CA,EAk6CA;AAAA;;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,IADA,CACA,0BADA,EACA;AAAA,QAAA,QAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,OALA;AAMA,KA16CA;AA26CA,IAAA,aA36CA,yBA26CA,IA36CA,EA26CA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,QAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,KAAA,EAAA;AACA,eAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,QAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,IAJA;AAKA,YAAA,YAAA,EAAA,KAAA;AALA,WADA,CAAA;AASA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAn9CA;AAo9CA,IAAA,iBAp9CA,6BAo9CA,GAp9CA,EAo9CA;AAAA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAHA;AAIA,KA19CA;AA29CA,IAAA,aA39CA,yBA29CA,IA39CA,EA29CA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,QAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,aAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,KAAA,EAAA;AACA,eAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,WAFA,CAAA;AAGA,cAAA,KAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,CACA;AACA,YAAA,iBAAA,EAAA,KAAA,QAAA,CAAA,GADA;AAEA,YAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAAA,KAFA;AAGA,YAAA,aAAA,EAAA,EAHA;AAIA,YAAA,eAAA,EAAA,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAAA,QAJA;AAKA,YAAA,YAAA,EAAA,KAAA;AALA,WADA,CAAA;AASA,UAAA,WAAA,CACA,IADA,8BACA,KAAA,eADA,GACA;AACA,YAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,YAAA,QAAA,EAAA,KAAA,cAAA,CAAA,KAAA,WAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;;AACA,gBAAA,GAAA,CAAA,MAAA,EAAA;AACA,cAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,WAXA,EAYA,KAZA,CAYA,YAAA;AACA,YAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,WAdA;AAeA;AACA;;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAngDA;AAogDA,IAAA,iBApgDA,6BAogDA,GApgDA,EAogDA;AAAA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAHA;AAIA,KA1gDA;AA2gDA,IAAA,gBA3gDA,8BA2gDA;AACA,UAAA,KAAA,YAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,cAAA,CAAA,IAAA;AACA;AACA,KA/gDA;AAghDA,IAAA,iBAhhDA,+BAghDA;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,eAAA,CAAA,IAAA;AACA;AACA,KAphDA;AAqhDA,IAAA,iBArhDA,+BAqhDA;AAAA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,CACA,uBADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CACA,GADA,CACA,UAAA,OAAA,EAAA;AACA,cAAA,EAAA,GAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CACA,UAAA,GAAA;AAAA,mBAAA,GAAA,CAAA,IAAA,CAAA,WAAA,MAAA,OAAA,CAAA,WAAA,EAAA;AAAA,WADA,CAAA;;AAGA,iBAAA;AACA,YAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,GAAA,OADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA;AAIA,SATA,EAUA,IAVA,CAUA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,IAAA,CAAA,WAAA,KAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,GACA,CAAA,CADA,GAEA,CAAA,CAAA,IAAA,CAAA,WAAA,KAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,GACA,CADA,GAEA,CAJA;AAKA,SAhBA,CAAA;AAiBA,QAAA,OAAA,CAAA,UAAA,CAAA,SAAA,sBAAA,OAAA,CAAA,QAAA,CAAA,SAAA;AACA,OAtBA,EAuBA,KAvBA,CAuBA,YAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAzBA;AA0BA,KAjjDA;AAkjDA,IAAA,kBAljDA,gCAkjDA;AAAA;;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,CACA,2BADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CACA,GADA,CACA,UAAA,OAAA,EAAA;AACA,cAAA,EAAA,GAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CACA,UAAA,GAAA;AAAA,mBAAA,GAAA,CAAA,IAAA,CAAA,WAAA,MAAA,OAAA,CAAA,WAAA,EAAA;AAAA,WADA,CAAA;;AAGA,iBAAA;AACA,YAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,GAAA,OADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA;AAIA,SATA,EAUA,IAVA,CAUA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,IAAA,CAAA,WAAA,KAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,GACA,CAAA,CADA,GAEA,CAAA,CAAA,IAAA,CAAA,WAAA,KAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,GACA,CADA,GAEA,CAJA;AAKA,SAhBA,CAAA;;AAiBA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AAAA,UAAA,IAAA,EAAA,OAAA,CAAA,EAAA,CAAA,aAAA,CAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,SAAA,sBAAA,OAAA,CAAA,WAAA,CAAA,SAAA;AACA,OAvBA,EAwBA,KAxBA,CAwBA,YAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA1BA;AA2BA,KA/kDA;AAglDA,IAAA,aAhlDA,yBAglDA,OAhlDA,EAglDA;AAAA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,wBACA,OADA,GAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA;AACA,YAAA,IAAA,EAAA,IAAA,CAAA,KADA;AAEA,YAAA,KAAA,EAAA,IAAA,CAAA;AAFA,WAAA;AAIA,SALA,CAAA;AAMA,OAXA,EAYA,KAZA,CAYA,YAAA;AACA,QAAA,OAAA,CAAA,QAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAeA,KAjmDA;AAkmDA,IAAA,aAlmDA,yBAkmDA,IAlmDA,EAkmDA;AAAA,UAAA,IAAA,uEAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,eAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,GAAA,QAAA,CAAA,eAAA;AACA;;AACA,WAAA,QAAA,CAAA,MAAA,GAAA,EAAA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,UAAA,QAAA,CAAA,eAAA,0CAAA,KAAA,QAAA,CAAA,OAAA,cAAA,KAAA,QAAA,CAAA,IAAA;AACA,UAAA,QAAA,CAAA,QAAA,GAAA,IAAA;AACA,eAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAjnDA;AAknDA,IAAA,eAlnDA,2BAknDA,OAlnDA,EAknDA;AAAA;;AACA,WAAA,UAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,wBACA,OADA,GAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,UAAA,CAAA,IAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,UAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,UAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,QAAA;AAAA,SAAA,CAAA;AACA,OANA,EAOA,KAPA,CAOA,YAAA;AACA,QAAA,OAAA,CAAA,UAAA,CAAA,SAAA,GAAA,KAAA;AACA,OATA;AAUA,KA9nDA;AA+nDA,IAAA,eA/nDA,2BA+nDA,IA/nDA,EA+nDA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,UAAA,CAAA,IAAA,GAAA,EAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA;;AACA,YAAA,gBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,YAAA,OAAA,GAAA,EAAA;;AACA,YAAA,KAAA,UAAA,CAAA,SAAA,IAAA,CAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,MAAA;AAAA,mBAAA,CAAA,MAAA,CAAA,eAAA,CAAA,MAAA;AAAA,WAAA,CAAA;AACA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,cAAA,MAAA,GAAA,gBAAA,CAAA,aAAA,CACA,MAAA,CAAA,MAAA,CAAA,eAAA,CAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CADA,EAEA,OAAA,CAAA,UAAA,CAAA,KAFA,EAGA,SAHA;AAIA,cAAA,MAAA,GAAA,gBAAA,CAAA,aAAA,CACA,MAAA,CAAA,MAAA,CAAA,aAAA,CADA,EAEA,OAAA,CAAA,UAAA,CAAA,KAFA,EAGA,SAHA;;AAIA,cAAA,MAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,eAAA,0CAAA,OAAA,CAAA,UAAA,CAAA,OAAA,cAAA,MAAA,CAAA,MAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,WAJA,MAIA,IAAA,MAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,eAAA,0CAAA,OAAA,CAAA,UAAA,CAAA,OAAA,cAAA,MAAA,CAAA,MAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,SAlBA;AAmBA,aAAA,cAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAlqDA;AAmqDA,IAAA,eAnqDA,2BAmqDA,OAnqDA,EAmqDA;AAAA;;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,2BACA,OADA,GAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;AACA,OALA,EAMA,KANA,CAMA,YAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA,GAAA,KAAA;AACA,OARA;AASA,KA9qDA;AA+qDA,IAAA,gBA/qDA,4BA+qDA,IA/qDA,EA+qDA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA;;AACA,YAAA,gBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,YAAA,OAAA,GAAA,EAAA;;AACA,YAAA,KAAA,WAAA,CAAA,SAAA,IAAA,CAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,GAAA,KAAA,cAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,MAAA;AAAA,mBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA,IAAA,MAAA,CAAA,aAAA,CAAA,MAAA,IAAA,CAAA;AAAA,WAAA,CAAA;AACA;;AACA,YAAA,YAAA,GAAA,KAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,iBAAA,OAAA,CAAA,QAAA;AAAA,SAAA,CAAA;AACA,YAAA,UAAA,GAAA,KAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,iBAAA,OAAA,CAAA,MAAA;AAAA,SAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA;AACA,cAAA,MAAA,GAAA,gBAAA,CAAA,aAAA,CACA,MAAA,CAAA,MAAA,CAAA,eAAA,CADA,EAEA,YAFA,EAGA,SAHA;AAIA,cAAA,MAAA,GAAA,gBAAA,CAAA,aAAA,CACA,MAAA,CAAA,MAAA,CAAA,aAAA,CADA,EAEA,UAFA,EAGA,SAHA;AAIA,cAAA,MAAA,GAAA,gBAAA,CAAA,aAAA,CACA,MAAA,CAAA,MAAA,CAAA,eAAA,CAAA,CAAA,OAAA,CAAA,4BAAA,EAAA,EAAA,CADA,EAEA,YAFA,EAGA,SAHA;;AAIA,cAAA,MAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,MAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,WAJA,MAIA,IAAA,MAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,OAAA;AAAA,qBAAA,OAAA,CAAA,QAAA,KAAA,MAAA,CAAA,MAAA;AAAA,aAAA,EAAA,MAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,WAJA,MAIA,IAAA,MAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,OAAA;AAAA,qBAAA,OAAA,CAAA,QAAA,KAAA,MAAA,CAAA,MAAA;AAAA,aAAA,EAAA,MAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,WAJA,MAIA;AACA,YAAA,OAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,SA9BA;AA+BA,aAAA,cAAA,CAAA,OAAA,GAAA,OAAA;AACA;;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA7tDA;AA8tDA,IAAA,aA9tDA,yBA8tDA,OA9tDA,EA8tDA;AAAA;;AACA,WAAA,SAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,WAAA,CACA,GADA,2BACA,OADA,GAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,OAAA,EAAA;AACA,iBAAA;AACA,YAAA,IAAA,EAAA,OAAA,CAAA,QADA;AAEA,YAAA,KAAA,EAAA,OAAA,CAAA;AAFA,WAAA;AAIA,SALA,CAAA;AAMA,OAXA,EAYA,KAZA,CAYA,YAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAeA,KA/uDA;AAgvDA,IAAA,cAhvDA,0BAgvDA,IAhvDA,EAgvDA;AAAA,UAAA,IAAA,uEAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,eAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SAAA,CAAA,OAAA,GAAA,EAAA;AACA,aAAA,SAAA,CAAA,KAAA,GAAA,QAAA,CAAA,eAAA;AACA;;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,EAAA;;AACA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,UAAA,QAAA,CAAA,aAAA,GAAA,KAAA,SAAA,CAAA,OAAA;AACA,UAAA,QAAA,CAAA,QAAA,GAAA,IAAA;AACA,eAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,SAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA/vDA;AAgwDA,IAAA,cAhwDA,0BAgwDA,IAhwDA,EAgwDA;AAAA;;AAAA,UAAA,IAAA,uEAAA,KAAA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SAAA,CAAA,IAAA,GAAA,IAAA;AACA,aAAA,SAAA,CAAA,GAAA,GAAA,IAAA;AACA,aAAA,SAAA,CAAA,MAAA,GAAA,EAAA;AACA,aAAA,SAAA,CAAA,YAAA,GAAA,EAAA;AACA;;AACA,UAAA,IAAA,EAAA;AACA,aAAA,SAAA,GAAA,IAAA;AACA,YAAA,UAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,EAAA,IAAA,OAAA,CAAA,WAAA;AACA,SAFA,CAAA;AAGA,QAAA,WAAA,CACA,IADA,CACA,eADA,EACA;AACA,UAAA,WAAA,EAAA,KAAA,cAAA,CAAA,EADA;AAEA,UAAA,MAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,KAAA,EAAA,KAAA;AAAA,mBAAA,OAAA,CAAA,SAAA,CAAA,YAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AAAA,WAAA;AAFA,SADA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACA;AACA,SAVA,EAWA,KAXA,CAWA,YAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAbA;AAcA;;AACA,WAAA,SAAA,CAAA,KAAA,GAAA,IAAA;AACA,KA5xDA;AA6xDA,IAAA,SA7xDA,qBA6xDA,KA7xDA,EA6xDA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,MAAA;;AACA,UAAA,WAAA,KAAA,IAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,SAAA,CAAA,SAAA,GAAA,IAAA;AACA,aAAA,eAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EACA,IADA,CACA,UAAA,OAAA,EAAA;AACA,UAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,KAAA;;AACA,UAAA,OAAA,CAAA,QAAA,CAAA,OAAA;AACA,SAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,OAAA,CACA,OADA,EAEA,OAAA,CAAA,EAAA,CAAA,gBAAA,CAFA,EAGA,KAHA,EAIA,gBAJA,EAKA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,SAAA,EAAA;AAAA,WALA;AAOA,SAbA;AAcA;AACA,KAhzDA;AAizDA,IAAA,QAjzDA,oBAizDA,OAjzDA,EAizDA;AAAA;;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,GAAA,CACA,KADA,CAEA,OAFA,EAGA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA;AAAA,OAHA,EAIA,IAJA,EAMA,IANA,CAMA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,QAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,YAAA,GAAA,EAAA;AACA,OAXA,EAYA,KAZA,CAYA,UAAA,KAAA,EAAA;AACA,QAAA,EAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,EAAA,CAAA,OAAA,CACA,OADA,EAEA,EAAA,CAAA,EAAA,CAAA,gBAAA,CAFA,EAGA,KAHA,EAIA,gBAJA,EAKA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SALA;AAOA,OArBA;AAsBA,KA10DA;AA20DA,IAAA,eA30DA,2BA20DA,IA30DA,EA20DA;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,KAAA;AAAA,iBAAA,OAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,SAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,UAAA,KAAA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA;AAAA,SAAA;;AACA,QAAA,MAAA,CAAA,UAAA,CAAA,IAAA;AACA,OAJA,CAAA;AAKA;AAl1DA,GA7dA;AAizEA,EAAA,WAjzEA,yBAizEA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,YAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA,WAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,YAAA,EAAA,KAAA,WAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,MAAA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,QAAA;;AACA,QAAA,KAAA,kBAAA,EAAA;AACA,WAAA,YAAA,CAAA,KAAA,kBAAA;AACA;;AACA,SAAA,iBAAA;AACA,SAAA,kBAAA;AACA,GA7zEA;AA8zEA,EAAA,aA9zEA,2BA8zEA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,YAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,WAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,YAAA,EAAA,KAAA,WAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA,KAAA,MAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,QAAA;AACA,GAr0EA;AAs0EA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,GAAA,EAAA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA;AACA,KALA;AAMA,IAAA,SAAA,EAAA,mBAAA,GAAA,EAAA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,cAAA,CAAA,OAAA,GAAA,IAAA;AACA;AACA,KAVA;AAWA,IAAA,WAAA,EAAA,qBAAA,GAAA,EAAA;AACA,UAAA,KAAA,cAAA,CAAA,OAAA,EAAA;AACA,aAAA,gBAAA,CAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA;AACA;AACA,KAjBA;AAkBA,8BAAA,+BAAA,GAAA,EAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,GAAA;AACA,KApBA;AAqBA,2BAAA,4BAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,YAAA,CAAA,MAAA,CAAA;AACA,WAAA,YAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,EAAA,CAAA,gBAAA,CAAA,GAAA;AACA,OAFA,EAEA,GAFA,CAAA;AAGA,KA3BA;AA4BA,sBAAA,uBAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,YAAA,CAAA,MAAA,CAAA;AACA,WAAA,YAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,kBAAA;AACA,OAFA,EAEA,GAFA,CAAA;AAGA,KAlCA;AAmCA,mBAAA,oBAAA,GAAA,EAAA;AACA,UAAA,CAAA,GAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,UAAA,cAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,CAAA;AACA,YAAA,QAAA,GAAA,CACA,yBADA,EACA;AACA,0BAFA,EAEA;AACA,yBAHA,EAGA;AACA,6BAJA,EAIA;AACA,2BALA,CAKA;AALA,SAAA;;AAQA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,cAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,iBAAA,OAAA,CAAA,OAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA;AACA;AACA;;AAEA,YAAA,MAAA,GAAA,GAAA,CAAA,KAAA,CAAA,aAAA,CAAA;;AACA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,cAAA,eAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,iBAAA,OAAA,CAAA,OAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA;;AAEA,aAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AACA,OA1BA,MA0BA;AACA,YAAA;AACA,cAAA,IAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA;AACA,eAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA,SAHA,CAGA,OAAA,KAAA,EAAA;AACA,eAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA;AACA;AACA,KA1EA;AA2EA,uBAAA,wBAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,OAAA,CAAA,MAAA,CAAA;AACA,WAAA,OAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,MAAA,EAAA;AACA,UAAA,EAAA,CAAA,cAAA,CAAA,GAAA;AACA,SAFA,MAEA;AACA,UAAA,EAAA,CAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,OANA,EAMA,GANA,CAAA;AAOA,KArFA;AAsFA,iBAAA,kBAAA,GAAA,EAAA;AACA,UAAA,cAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,GAAA,CAAA,KAAA,CACA,8IADA,CAAA;;AAGA,YAAA,KAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAFA,MAEA;AACA,eAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,OATA,MASA;AACA,aAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,KAnGA;AAoGA,qBAAA,sBAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,MAAA,EAAA;AACA,UAAA,EAAA,CAAA,cAAA,CAAA,GAAA;AACA,SAFA,MAEA;AACA,UAAA,EAAA,CAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,OANA,EAMA,GANA,CAAA;AAOA,KA9GA;AA+GA,uBAAA,wBAAA,GAAA,EAAA;AACA,UAAA,oBAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,GAAA,CAAA,KAAA,CACA,kEADA,CAAA;;AAGA,YAAA,KAAA,CAAA,MAAA,IAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,WAAA,CAAA,OAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAFA,MAEA,IAAA,KAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,eAAA,WAAA,CAAA,OAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAFA,MAEA;AACA,eAAA,WAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,OAXA,MAWA;AACA,aAAA,WAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,KA9HA;AA+HA,2BAAA,4BAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,WAAA,CAAA,MAAA,CAAA;AACA,WAAA,WAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,YAAA,GAAA,CAAA,MAAA,EAAA;AACA,UAAA,EAAA,CAAA,oBAAA,CAAA,GAAA;AACA,SAFA,MAEA;AACA,UAAA,EAAA,CAAA,WAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,OANA,EAMA,GANA,CAAA;AAOA,KAzIA;AA0IA,oBAAA,qBAAA,GAAA,EAAA;AACA,UAAA,mBAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,EAAA,GAAA,IAAA;AACA,QAAA,YAAA,CAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AACA,aAAA,QAAA,CAAA,MAAA,GAAA,UAAA,CAAA,YAAA;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,iBAAA,CAAA,GAAA;AACA,WAFA,MAEA;AACA,YAAA,EAAA,CAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,SANA,EAMA,GANA,CAAA;AAOA;AACA,KAtJA;AAuJA,oBAAA,qBAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;;AACA,UAAA,yBAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,QAAA,YAAA,CAAA,KAAA,cAAA,CAAA;AACA,aAAA,cAAA,GAAA,UAAA,CAAA,YAAA;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,EAAA,CAAA,iBAAA,CAAA,GAAA;AACA,WAFA,MAEA;AACA,YAAA,EAAA,CAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA,SANA,EAMA,GANA,CAAA;AAOA;AACA,KAnKA;AAoKA,wBAAA,yBAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,EAAA;AACA,aAAA,aAAA,CAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AACA;AACA,KA1KA;AA2KA,0BAAA,2BAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,EAAA;AACA,aAAA,eAAA,CAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,CAAA,IAAA,GAAA,EAAA;AACA;AACA,KAjLA;AAkLA,yBAAA,0BAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,EAAA;AACA,aAAA,aAAA,CAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,CAAA,OAAA,GAAA,EAAA;AACA;AACA,KAxLA;AAyLA,2BAAA,4BAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,EAAA;AACA,aAAA,eAAA,CAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,WAAA,CAAA,QAAA,GAAA,EAAA;AACA;AACA,KA/LA;AAgMA,IAAA,kBAAA,EAAA,4BAAA,GAAA,EAAA;AACA,WAAA,YAAA,CAAA,GAAA;AACA;AAlMA;AAt0EA,CAAA","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"editor\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <!--  \n\n      FIND / REPLACE\n\n    -->\n    <erd-modal\n      v-show=\"findReplace.modal\"\n      @close=\"findAndReplaceModal(false)\"\n      :title=\"$t('editor.find-replace')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.search-for\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findReplace.from\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.replace-with\") }}</label>\n        <erd-input class=\"mt-1 mb-2 w-100\" v-model=\"findReplace.to\"></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.options\") }}</label>\n        <erd-checkbox class=\"mt-1\" v-model=\"findReplace.replaceAll\">{{\n          $t(\"editor.replace-all-occurences\")\n        }}</erd-checkbox>\n        <erd-checkbox class=\"mb-2\" v-model=\"findReplace.ignoreCase\">{{\n          $t(\"editor.ignore-case\")\n        }}</erd-checkbox>\n        <template v-if=\"findReplace.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"findReplace.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findAndReplaceModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"findAndReplace\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      PREFIX / SUFFIX\n\n    -->\n    <erd-modal\n      v-show=\"prefixSuffix.modal\"\n      @close=\"prefixSuffixModal(false)\"\n      :title=\"$t('editor.add-prefix-suffix')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.prefix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.prefix\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.suffix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.suffix\"\n        ></erd-input>\n        <template v-if=\"prefixSuffix.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"prefixSuffix.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"prefixSuffixModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"addPrefixSuffix\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      CONVERT CASE\n\n    -->\n    <erd-modal\n      v-show=\"convertCase.modal\"\n      @close=\"convertCaseModal(false)\"\n      :title=\"$t('editor.change-case')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"d-block mb-2\">{{ $t(\"editor.options\") }}</label>\n        <erd-radiobutton :value=\"0\" v-model=\"convertCase.method\">{{\n          $t(\"editor.title-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton :value=\"1\" v-model=\"convertCase.method\">{{\n          $t(\"editor.upper-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton class=\"mb-2\" :value=\"2\" v-model=\"convertCase.method\">{{\n          $t(\"editor.lower-case\")\n        }}</erd-radiobutton>\n        <template v-if=\"convertCase.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"convertCase.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"convertCaseModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"changeCase\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT GROUP\n\n    -->\n    <erd-modal\n      v-show=\"groupEditor.modal\"\n      @close=\"editGroupModal(false)\"\n      :title=\"$t('editor.edit-group')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"canEditGroupType\">\n          <label class=\"w-100\">{{ $t(\"editor.group-type\") }}</label>\n          <erd-select\n            class=\"w-100 mt-1 mb-2\"\n            :items=\"groupTypes\"\n            v-model=\"groupEditor.group_type\"\n            v-if=\"groupEditor.modal\"\n          ></erd-select>\n        </template>\n        <label class=\"w-100\">{{ $t(\"editor.group-name\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_name\"\n        ></erd-input>\n        <!--<label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_parent_code\"\n        ></erd-input>-->\n        <erd-checkbox class=\"mb-2\" v-model=\"groupEditor.group_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editGroupModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editGroup\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT STREAM\n\n    -->\n    <erd-modal\n      v-show=\"streamEditor.modal\"\n      @close=\"editStreamModal(false)\"\n      :title=\"$t('editor.edit-stream')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"activeGroupType === 1\">\n          <label class=\"w-100\">{{ $t(\"editor.name-placeholder\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.epg-channel-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_id\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.stream-icon\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-stream-icon\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <!--<label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-3 w-100\"\n            v-model=\"streamEditor.stream_parent_code\"\n          ></erd-input>-->\n          <erd-checkbox\n            class=\"mb-1\"\n            v-model=\"streamEditor.stream_radio\"\n            :true-value=\"1\"\n            :false-value=\"0\"\n            >{{ $t(\"editor.radio\") }}</erd-checkbox\n          >\n        </template>\n        <template v-if=\"activeGroupType === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.movie-name\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-year\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_year\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.tmdb-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.tmdb_id\"\n          ></erd-input>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-poster\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-movie-poster\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n        </template>\n        <template v-if=\"activeGroupType === 3\">\n          <label class=\"w-100\">{{ $t(\"xtream.name\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.season\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_season\"\n            type=\"number\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.episode\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_episode\"\n            type=\"number\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.tmdb-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.tmdb_id\"\n          ></erd-input>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.serie-poster\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-movie-poster\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n        </template>\n        <erd-checkbox class=\"mb-1\" v-model=\"streamEditor.stream_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editStreamModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editStream\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      SAVE CHANGES\n\n    -->\n    <erd-modal\n      v-show=\"saveChanges.modal\"\n      @close=\"saveChangesModal(false)\"\n      :title=\"$t('editor.save-changes')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <p>{{ $t(\"editor.save-changes-text\") }}</p>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"saveChangesModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"saveChangesModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      RADIOBROWSER\n\n    -->\n    <erd-modal\n      v-show=\"radioBrowser.modal\"\n      @close=\"radioBrowserModal(false)\"\n      :title=\"$t('editor.import-radiobrowser')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\" for=\"radiobrowser-search\">{{\n          $t(\"menu.search\")\n        }}</label>\n        <erd-input\n          id=\"radiobrowser-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"radioBrowser.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <div class=\"radiobrowser-stations\">\n          <erd-spinner\n            v-if=\"radioBrowser.isLoading\"\n            size=\"lg\"\n            overlay\n            absolute\n          ></erd-spinner>\n          <p class=\"mb-1 pb-0\" v-if=\"radioBrowser.results.length\">\n            {{ $t(\"editor.select-radio-stations\") }}\n          </p>\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              :class=\"{ selected: radioBrowser.active.includes(index) }\"\n              v-for=\"(station, index) in radioBrowser.results\"\n              :key=\"`radiobrowser-station-${index}-${station.name}`\"\n              @click.ctrl=\"toggleRadiobrowserSelection(index)\"\n              @click.shift=\"selectRadiobrowserRangeSelection(index)\"\n              @click.exact=\"selectRadiobrowserSelection(index)\"\n            >\n              <span class=\"station-name\">{{ station.name }}</span>\n              <span class=\"text-muted text-small ml-1\">{{\n                station.language.replace(/\\b\\w/g, (l) => l.toUpperCase())\n              }}</span>\n              <span class=\"text-muted text-small float-right\"\n                >{{ station.codec }} - {{ station.bitrate }}</span\n              >\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"radioBrowserModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"radioBrowserModal(false, true)\"\n          :disabled=\"\n            radioBrowser.isLoading || radioBrowser.results.length === 0\n          \"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      SOUNDCLOUD\n\n    -->\n    <erd-modal\n      v-show=\"soundcloud.modal\"\n      @close=\"soundcloudModal(false)\"\n      :title=\"$t('editor.import-soundcloud')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"soundcloud.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"soundcloud-url\">{{\n          $t(\"radio.soundcloud-url\")\n        }}</label>\n        <erd-input\n          id=\"soundcloud-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"soundcloud.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('radio.soundcloud-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"soundcloud.track\"\n        >\n          <img\n            :src=\"\n              soundcloud.track.artwork_url.replace('large.jpg', 't500x500.jpg')\n            \"\n            class=\"cover mt-2\"\n          />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ soundcloud.track.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(soundcloud.track.likes_count) }}\n              {{ $t(\"radio.likes\") }} <small>•</small>\n              {{ formatDateYoutube(soundcloud.track.display_date) }}\n              <small>•</small>\n              {{ formatSeconds(soundcloud.track.duration / 1000) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"soundcloudModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"soundcloudModal(false, true)\"\n          :disabled=\"soundcloud.isLoading || soundcloud.track === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      YOUTUBE\n\n    -->\n    <erd-modal\n      v-show=\"youtube.modal\"\n      @close=\"youtubeModal(false)\"\n      :title=\"$t('editor.import-youtube')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"youtube.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"youtube-url\">{{\n          $t(\"editor.youtube-url\")\n        }}</label>\n        <erd-input\n          id=\"youtube-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"youtube.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.youtube-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"youtube.video\"\n        >\n          <img\n            :src=\"`https://i.ytimg.com/vi/${youtube.videoId}/maxresdefault.jpg`\"\n            class=\"cover mt-2\"\n          />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ youtube.video.videoDetails.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(youtube.video.videoDetails.viewCount) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(youtube.video.videoDetails.lengthSeconds) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"youtubeModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"youtubeModal(false, true)\"\n          :disabled=\"youtube.isLoading || youtube.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      VIMEO\n\n    -->\n    <erd-modal\n      v-show=\"vimeo.modal\"\n      @close=\"vimeoModal(false)\"\n      :title=\"$t('editor.import-vimeo')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"vimeo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"vimeo-url\">{{\n          $t(\"editor.vimeo-url\")\n        }}</label>\n        <erd-input\n          id=\"vimeo-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"vimeo.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.vimeo-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"vimeo.video\"\n        >\n          <img :src=\"vimeo.video.video.thumbs.base\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ vimeo.video.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatSeconds(vimeo.video.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"vimeoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"vimeoModal(false, true)\"\n          :disabled=\"vimeo.isLoading || vimeo.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      DAILYMOTION\n\n    -->\n    <erd-modal\n      v-show=\"dailymotion.modal\"\n      @close=\"dailymotionModal(false)\"\n      :title=\"$t('editor.import-dailymotion')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"dailymotion.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"dailymotion-url\">{{\n          $t(\"editor.dailymotion-url\")\n        }}</label>\n        <erd-input\n          id=\"dailymotion-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"dailymotion.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.dailymotion-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"dailymotion.video\"\n        >\n          <img :src=\"dailymotion.video.thumbnail_1080_url\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ dailymotion.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(dailymotion.video.views_total) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(dailymotion.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"dailymotionModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"dailymotionModal(false, true)\"\n          :disabled=\"dailymotion.isLoading || dailymotion.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      TED-TALKS\n\n    -->\n    <erd-modal\n      v-show=\"tedTalks.modal\"\n      @close=\"tedTalksModal(false)\"\n      :title=\"$t('editor.import-ted-talks')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"tedTalks.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"tedTalks-url\">{{\n          $t(\"editor.ted-talks-url\")\n        }}</label>\n        <erd-input\n          id=\"tedTalks-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"tedTalks.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.ted-talks-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"tedTalks.video\"\n        >\n          <img :src=\"tedTalks.video.hero\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ tedTalks.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(tedTalks.video.viewed_count) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(tedTalks.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"tedTalksModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"tedTalksModal(false, true)\"\n          :disabled=\"tedTalks.isLoading || tedTalks.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      XHAMSTER\n\n    -->\n    <erd-modal\n      v-show=\"xhamster.modal\"\n      @close=\"xhamsterModal(false)\"\n      :title=\"$t('editor.import-xhamster')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"xhamster.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"xhamster-url\">{{\n          $t(\"editor.xhamster-url\")\n        }}</label>\n        <erd-input\n          id=\"xhamster-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xhamster.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.xhamster-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"xhamster.video\"\n        >\n          <img :src=\"xhamster.video.videoEntity.thumbBig\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ xhamster.video.videoEntity.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatSeconds(xhamster.video.videoEntity.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"xhamsterModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"xhamsterModal(false, true)\"\n          :disabled=\"xhamster.isLoading || xhamster.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      FIND LOGO\n\n    -->\n    <erd-modal\n      v-show=\"findLogo.modal\"\n      @close=\"findLogoModal(false)\"\n      :title=\"`${$t('editor.find-logo')}: ${findLogo.title}`\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"findLogo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"logo-countries\"\n          id=\"logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"findLogo.countries\"\n          v-model=\"findLogo.country\"\n        ></erd-select>\n        <label class=\"w-100\" for=\"find-logo-search\">{{\n          $t(\"editor.find-logo-search\")\n        }}</label>\n        <erd-input\n          id=\"find-logo-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findLogo.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <label class=\"w-100\" for=\"logos\">{{ $t(\"editor.logos\") }}</label>\n        <erd-select\n          key=\"logo-logos\"\n          id=\"logos\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"filteredLogos\"\n          v-model=\"findLogo.logo\"\n        ></erd-select>\n        <div class=\"find-logo form-control mb-2 w-100 text-center\">\n          <a\n            :href=\"`http://static.iptv-tools.com/${findLogo.country}/${findLogo.logo}`\"\n            target=\"_blank\"\n          >\n            <img\n              v-if=\"findLogo.logo.length\"\n              :src=\"`http://static.iptv-tools.com/${findLogo.country}/${findLogo.logo}`\"\n              class=\"stream-logo mt-2\"\n          /></a>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findLogoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"findLogoModal(false, true)\"\n          :disabled=\"findLogo.isLoading || findLogo.logos.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      ASSIGN LOGOS\n\n    -->\n    <erd-modal\n      v-show=\"assignLogo.modal\"\n      @close=\"assignLogoModal(false)\"\n      :title=\"$t('editor.assign-stream-logos')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <erd-spinner\n          v-if=\"assignLogo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"assign-logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"assign-logo-countries\"\n          id=\"assign-logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"assignLogo.countries\"\n          v-model=\"assignLogo.country\"\n        ></erd-select>\n        <erd-radiobutton\n          class=\"mt-1\"\n          :value=\"1\"\n          v-model=\"assignLogo.assignAll\"\n          >{{ $t(\"editor.assign-all-streams\") }}</erd-radiobutton\n        >\n        <erd-radiobutton :value=\"0\" v-model=\"assignLogo.assignAll\">{{\n          $t(\"editor.assign-missing-only\")\n        }}</erd-radiobutton>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"assignLogoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"assignLogoModal(false, true)\"\n          :disabled=\"assignLogo.isLoading || assignLogo.country.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      IMPORT M3U\n\n    -->\n    <erd-modal\n      v-show=\"importM3U.modal\"\n      @close=\"importM3UModal(false)\"\n      :title=\"$t('editor.import-m3u')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <label class=\"d-block mb-1\" for=\"title\">{{\n          $t(\"m3u.file\")\n        }}</label>\n        <erd-input\n          class=\"w-100\"\n          type=\"file\"\n          accept=\".m3u8, .m3u\"\n          v-model=\"importM3U.file\"\n          @change=\"uploadM3U\"\n        ></erd-input>\n        <div class=\"radiobrowser-stations\">\n          <erd-spinner\n            v-if=\"importM3U.isLoading\"\n            size=\"lg\"\n            overlay\n            absolute\n          ></erd-spinner>\n          <p class=\"mb-1 pb-0\" v-if=\"importM3U.groups.length\">\n            {{ $t(\"editor.select-groups\") }}\n          </p>\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              :class=\"{ selected: importM3U.importGroups.includes(index) }\"\n              v-for=\"(group, index) in importM3U.groups\"\n              :key=\"`import-group-${index}-${group.name}`\"\n              @click.ctrl=\"toggleImportM3USelection(index)\"\n              @click.shift=\"selectImportM3URangeSelection(index)\"\n              @click.exact=\"selectImportM3USelection(index)\"\n            >\n              <span class=\"station-name\">{{ group.name }}</span>\n              <span class=\"text-muted text-small ml-2\">{{ $t(`category-type.${group.type}`) }}</span>\n              <span class=\"text-muted text-small float-right\"\n                >{{ group.streams.length }}</span\n              >\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"importM3UModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"importM3UModal(false, true)\"\n          :disabled=\"importM3U.isLoading || importM3U.groups.length === 0 || importM3U.importGroups.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      ASSIGN TVG-ID\n\n    -->\n    <erd-modal\n      v-show=\"assignTVGID.modal\"\n      @close=\"assignTVGIDModal(false)\"\n      :title=\"$t('editor.assign-tv-guide')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <erd-spinner\n          v-if=\"assignTVGID.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"assign-tv-guide-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"assign-tv-guide-countries\"\n          id=\"assign-tv-guide-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"assignTVGID.countries\"\n          v-model=\"assignTVGID.country\"\n        ></erd-select>\n        <erd-radiobutton\n          class=\"mt-1\"\n          :value=\"1\"\n          v-model=\"assignTVGID.assignAll\"\n          >{{ $t(\"editor.assign-all-streams\") }}</erd-radiobutton\n        >\n        <erd-radiobutton :value=\"0\" v-model=\"assignTVGID.assignAll\">{{\n          $t(\"editor.assign-epg-missing-only\")\n        }}</erd-radiobutton>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"assignTVGIDModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"assignTVGIDModal(false, true)\"\n          :disabled=\"assignTVGID.isLoading || assignTVGID.country.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      FIND TVG-ID\n\n    -->\n    <erd-modal\n      v-show=\"findTVGID.modal\"\n      @close=\"findTVGIDModal(false)\"\n      :title=\"`${$t('editor.find-tv-guide')}: ${findTVGID.title}`\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 find-channel-id\">\n        <erd-spinner\n          v-if=\"findTVGID.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"logo-countries\"\n          id=\"logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"findTVGID.countries\"\n          v-model=\"findTVGID.country\"\n        ></erd-select>\n        <label class=\"w-100\" for=\"find-tvguide-search\">{{\n          $t(\"editor.find-logo-search\")\n        }}</label>\n        <erd-input\n          id=\"find-tvguide-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findTVGID.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <label class=\"w-100\" for=\"channels\">{{ $t(\"editor.channel\") }}</label>\n        <erd-select\n          key=\"tvguide-channels\"\n          id=\"channels\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"filteredTVGIDS\"\n          v-model=\"findTVGID.channel\"\n        ></erd-select>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findTVGIDModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"findTVGIDModal(false, true)\"\n          :disabled=\"findTVGID.isLoading || findTVGID.channels.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      APP MENU\n\n    -->\n    <erd-app-menu icon=\"la-tools\">\n      <div class=\"pt-3 select-none\" v-if=\"playlistSelected\">\n        <erd-collapse :title=\"$t('editor.import-m3u')\" key=\"import-m3u\" small>\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"importM3UModal(true)\"\n                ><i class=\"las la-file-import mr-1\"></i\n                >{{ $t(\"editor.import-file\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse :title=\"$t('editor.sort-groups')\" key=\"sort-groups\" small>\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeUp\"\n                ><i class=\"las la-sort-numeric-up mr-1\"></i\n                >{{ $t(\"editor.sort-type-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeDown\"\n                ><i class=\"las la-sort-numeric-down mr-1\"></i\n                >{{ $t(\"editor.sort-type-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.sort-streams')\"\n          key=\"sort-streams\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenUp\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenDown\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-radio')\"\n          key=\"import-radio\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"radioBrowserModal(true)\"\n                ><i class=\"las la-broadcast-tower mr-1\"></i\n                >{{ $t(\"editor.import-radiobrowser\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-music')\"\n          key=\"import-music\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"soundcloudModal(true)\"\n                ><i class=\"lab la-soundcloud mr-1\"></i\n                >{{ $t(\"editor.import-soundcloud\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.import-video')\"\n          key=\"import-video\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"youtubeModal(true)\"\n                ><i class=\"lab la-youtube mr-1\"></i\n                >{{ $t(\"editor.import-youtube\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"vimeoModal(true)\"\n                ><i class=\"lab la-vimeo mr-1\"></i\n                >{{ $t(\"editor.import-vimeo\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"dailymotionModal(true)\"\n                ><i class=\"lab la-youtube mr-1\"></i\n                >{{ $t(\"editor.import-dailymotion\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"tedTalksModal(true)\"\n                ><i class=\"las la-comments mr-1\"></i\n                >{{ $t(\"editor.import-ted-talks\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"xhamsterModal(true)\"\n                ><i class=\"las la-heart mr-1\"></i\n                >{{ $t(\"editor.import-xhamster\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.assign-logos')\"\n          key=\"assign-logos\"\n          small\n          v-if=\"activeGroupType == 1\"\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"assignLogoModal(true)\"\n                ><i class=\"las la-photo-video mr-1\"></i\n                >{{ $t(\"editor.assign-stream-logos\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.assign-tv-guide')\"\n          key=\"assign-tv-guide\"\n          small\n          v-if=\"activeGroupType == 1\"\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"assignTVGIDModal(true)\"\n                ><i class=\"las la-th-list mr-1\"></i\n                >{{ $t(\"editor.assign-tvg-ids\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n      </div>\n    </erd-app-menu>\n    <erd-row class=\"m-0 p-0\" v-if=\"playlistSelected\">\n      <!--  \n\n        GROUPS\n\n      -->\n      <erd-col xl=\"4\" lg=\"4\" md=\"12\" class=\"pr-lg-0\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.groups\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredGroups.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"groupContextMenu\"\n          depth=\"1\"\n          ref=\"context-group\"\n        ></erd-context-menu>\n        <div @contextmenu.prevent=\"openContext('context-group')\">\n          <draggable\n            v-model=\"playlistEditor.groups\"\n            @start=\"dragGroup = true\"\n            @end=\"dragGroup = false\"\n            @change=\"groupDragChanged\"\n            animation=\"200\"\n            group=\"groups\"\n            ghost-class=\"ghost\"\n            scroll-sensitivity=\"200\"\n            selected-class=\"selected\"\n            handle=\".handle\"\n            :force-fallback=\"true\"\n            :multi-drag=\"true\"\n          >\n            <transition-group\n              type=\"transition\"\n              :name=\"!dragGroup ? 'flip-list' : null\"\n            >\n              <div\n                class=\"form-control editor-group\"\n                :class=\"{\n                  selected: activeGroups.includes(group.id),\n                  active: activeGroup === group.id,\n                  hidden: group.group_is_hidden,\n                }\"\n                v-for=\"(group, index) in filteredGroups\"\n                :key=\"`group-${index}`\"\n                @click.ctrl=\"toggleGroupSelection(group.id)\"\n                @click.shift=\"selectGroupRangeSelection(group.id)\"\n                @click.exact=\"selectGroupSelection(group.id)\"\n                @dblclick=\"groupDoubleClick\"\n              >\n                <i class=\"las la-braille handle mr-2\"></i>\n                <a href=\"#\" @click.prevent=\"activeGroup = group.id\">{{\n                  group.group_name\n                }}</a>\n                <span class=\"text-muted text-small ml-2\">{{ $t(`category-type.${group.group_type}`) }}</span>\n                <span class=\"float-right\">{{ group.streams }}</span>\n              </div>\n            </transition-group>\n          </draggable>\n        </div>\n      </erd-col>\n      <!--  \n\n        STREAMS\n\n      -->\n      <erd-col xl=\"8\" lg=\"8\" md=\"12\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.streams\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredStreams.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"streamContextMenu\"\n          depth=\"1\"\n          ref=\"context-stream\"\n        ></erd-context-menu>\n        <!-- LIVE -->\n        <template v-if=\"activeGroupType === 1 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}-${stream.id}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{ stream.stream_tvg_name }}</span>\n                  <span class=\"text-muted\">{{ stream.stream_tvg_id }}</span>\n                  <i class=\"ml-2 las la-music\" v-if=\"stream.stream_radio\"></i>\n                  <img\n                    class=\"stream-icon\"\n                    v-if=\"stream.stream_tvg_logo\"\n                    :src=\"stream.stream_tvg_logo\"\n                  />\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- MOVIES -->\n        <template v-if=\"activeGroupType === 2 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{\n                    stream.movie_name && stream.movie_name.length\n                      ? stream.movie_name\n                      : stream.stream_tvg_name\n                  }}</span>\n                  <span class=\"text-muted\">{{ stream.movie_year }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- SERIES -->\n        <template v-if=\"activeGroupType === 3 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{\n                    stream.serie_name && stream.serie_name.length\n                      ? stream.serie_name\n                      : stream.stream_tvg_name\n                  }}</span>\n                  <span class=\"text-muted mr-1\">{{\n                    $t(\"editor.season\").format(stream.serie_season)\n                  }}</span>\n                  <span class=\"text-muted\">{{\n                    $t(\"editor.episode\").format(stream.serie_episode)\n                  }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n      </erd-col>\n    </erd-row>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-escape */\n\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\nimport draggable from \"vuedraggable\";\nimport { SubscriptionType } from \"../../../constants/config\";\nimport { countries } from \"../../../helpers\";\nimport { m3u } from \"../../../plugins/m3u\";\n\nexport default {\n  components: {\n    draggable,\n  },\n  data() {\n    return {\n      countries,\n      activeTab: 0,\n      activeGroup: -1,\n      activeGroups: [],\n      activeStream: -1,\n      activeStreams: [],\n      dragGroup: false,\n      dragStream: false,\n      editor: false,\n      search: null,\n      isLoading: false,\n      playlistEditor: {\n        id: undefined,\n        playlist: null,\n        groups: [],\n        streams: [],\n        changed: false,\n      },\n      findReplace: {\n        type: 0,\n        modal: false,\n        from: \"\",\n        to: \"\",\n        replaceAll: false,\n        ignoreCase: false,\n        selectedOnly: 0,\n      },\n      prefixSuffix: {\n        type: 0,\n        modal: false,\n        prefix: \"\",\n        suffix: \"\",\n        selectedOnly: 0,\n      },\n      convertCase: {\n        type: 0,\n        modal: false,\n        method: 0,\n        selectedOnly: 0,\n      },\n      groupEditor: {\n        modal: false,\n        id: 0,\n        group_name: \"\",\n        group_parent_code: \"\",\n        group_type: 1,\n        group_is_hidden: 0,\n      },\n      streamEditor: {\n        modal: false,\n        id: -1,\n        stream_tvg_name: \"\",\n        stream_tvg_id: \"\",\n        stream_tvg_logo: \"\",\n        stream_parent_code: \"\",\n        stream_radio: 0,\n        stream_is_hidden: 0,\n        stream_is_custom: 0,\n        movie_name: \"\",\n        movie_year: \"\",\n        serie_name: \"\",\n        serie_season: 0,\n        serie_episode: 0,\n        source_stream_url: \"\",\n      },\n      radioBrowser: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        active: [],\n        search: \"\",\n        results: [],\n      },\n      soundcloud: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        track: null,\n      },\n      youtube: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      vimeo: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      dailymotion: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      tedTalks: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        video: null,\n      },\n      xhamster: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        video: null,\n      },\n      findLogo: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        logos: [],\n        logo: \"\",\n        search: \"\",\n        title: \"\",\n      },\n      assignLogo: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        logos: [],\n        assignAll: 0,\n      },\n      importM3U: {\n        isLoading: false,\n        modal: false,\n        groups: [],\n        importGroups: [],\n        m3u: null,\n        file: null,\n      },\n      findTVGID: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        channels: [],\n        channel: \"\",\n        search: \"\",\n        title: \"\",\n      },\n      assignTVGID: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        channels: [],\n        assignAll: 0,\n      },\n      saveChanges: {\n        modal: false,\n      },\n      groupTypes: [\n        { text: this.$t(\"xtream.live\"), value: 1 },\n        { text: this.$t(\"xtream.movies\"), value: 2 },\n        { text: this.$t(\"xtream.series\"), value: 3 },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"soundcloudClientId\", \"movieSeriePlaylist\"]),\n    searchFiltered() {\n      if (this.search === null) {\n        return this.accounts;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.accounts.filter((account) => {\n          return (\n            String(account.title).match(re) ||\n            String(account.host).match(re) ||\n            String(account.port).match(re) ||\n            String(account.username).match(re) ||\n            String(account.password).match(re) ||\n            this.formatDate(account.synced_at).match(re) ||\n            this.$t(`sync-interval.${account.sync_interval}`).match(re)\n          );\n        });\n      }\n    },\n    playlistSelected() {\n      return this.playlistEditor.id !== undefined;\n    },\n    lastSelectedGroup() {\n      return this.activeGroups[this.activeGroups.length - 1];\n    },\n    lastSelectedStream() {\n      return this.activeStreams[this.activeStreams.length - 1];\n    },\n    canEditGroupType() {\n      return (\n        this.groupEditor.id &&\n        this.getGroupWithId(this.groupEditor.id).streams == 0\n      );\n    },\n    subscriptionLimited() {\n      return (\n        this.currentUser.subscription &&\n        this.currentUser.subscription.subscription_type ==\n          SubscriptionType.Enthusiast\n      );\n    },\n    filteredGroups() {\n      if (this.subscriptionLimited) {\n        return this.playlistEditor.groups.filter(\n          (group) =>\n            group.group_is_removed !== 1 &&\n            group.source_group_type == 1 &&\n            group.group_type == 1\n        );\n      }\n      return this.playlistEditor.groups.filter(\n        (group) => group.group_is_removed !== 1\n      );\n    },\n    filteredStreams() {\n      return this.playlistEditor.streams.filter(\n        (group) => group.stream_is_removed !== 1\n      );\n    },\n    activeGroupType() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == this.activeGroup\n      );\n      return index > -1 ? this.playlistEditor.groups[index].group_type : 0;\n    },\n    filteredLogos() {\n      if (!this.findLogo.search.length) {\n        return this.findLogo.logos;\n      }\n      let selectedStream = this.getStreamWithId(this.activeStreams[0]);\n      let re = new RegExp(this.findLogo.search, \"i\");\n      return this.findLogo.logos.filter((logo) => {\n        return logo.text.match(re);\n      });\n    },\n    filteredTVGIDS() {\n      if (!this.findTVGID.search.length) {\n        return this.findTVGID.channels;\n      }\n      let selectedStream = this.getStreamWithId(this.activeStreams[0]);\n      let re = new RegExp(this.findTVGID.search, \"i\");\n      return this.findTVGID.channels.filter((channel) => {\n        return channel.text.match(re);\n      });\n    },\n    groupContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-group\"),\n          onClick: vm.addGroup,\n        },\n        {\n          disabled: vm.activeGroups.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-group\"),\n          onClick: function () {\n            if (vm.activeGroups.length === 1) {\n              vm.editGroupModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeGroups = [...vm.playlistEditor.groups.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeGroups = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 1);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.toggleGroupVisibility();\n            }\n          },\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.deleteSelectedGroups();\n            }\n          },\n        },\n      ];\n    },\n    streamContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-stream\"),\n          onClick: vm.addStream,\n        },\n        {\n          disabled: vm.activeStreams.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-stream\"),\n          onClick: function () {\n            if (vm.activeStreams.length === 1) {\n              vm.editStreamModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeStreams = [...vm.playlistEditor.streams.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeStreams = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled:\n            vm.activeGroups.length !== 1 ||\n            vm.activeStreams.length === 0 ||\n            vm.getGroupWithId(vm.activeGroups[0]).group_type !==\n              vm.activeGroupType ||\n            vm.activeGroups[0] === vm.activeGroup,\n          icon: \"la-chevron-left\",\n          text: vm.$t(\"editor.move-to-selected-group\"),\n          onClick: function () {\n            vm.moveToSelectedGroup();\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 2);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length !== 1 || vm.activeGroupType !== 1,\n          icon: \"la-photo-video\",\n          text: vm.$t(\"editor.find-logo\"),\n          onClick: function () {\n            vm.findLogoModal(true);\n          },\n        },\n        {\n          disabled: vm.activeStreams.length !== 1 || vm.activeGroupType !== 1,\n          icon: \"la-th-list\",\n          text: vm.$t(\"editor.find-tv-guide\"),\n          onClick: function () {\n            vm.findTVGIDModal(true);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0 || vm.activeGroupType !== 1,\n          icon: \"la-music\",\n          text: vm.$t(\"editor.toggle-radio\"),\n          onClick: function () {\n            if (vm.activeStreams.length && vm.activeGroupType == 1) {\n              vm.toggleStreamRadio();\n            }\n          },\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.toggleStreamVisibility();\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.deleteSelectedStreams();\n            }\n          },\n        },\n      ];\n    },\n  },\n  methods: {\n    groupDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.playlistEditor.groups[i].group_order != i + 1) {\n          this.playlistEditor.groups[i].group_order = i + 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n    },\n    streamDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.playlistEditor.streams[i].stream_order != i + 1) {\n          this.playlistEditor.streams[i].stream_order = i + 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n    },\n    openContext(context) {\n      this.$refs[context].open();\n    },\n    searchEditor(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printEditor() {\n      document.getElementById(\"editor\").print();\n    },\n    formatNumber(number) {\n      return new Intl.NumberFormat(this.$t(\"date.locale\")).format(number);\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    formatDateYoutube(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n\n    getGroupWithId(id) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == id\n      );\n      return this.playlistEditor.groups[index];\n    },\n    getStreamWithId(id) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id == id\n      );\n      return this.playlistEditor.streams[index];\n    },\n    doSave() {\n      this.isLoading = true;\n      this.playlistEditor.changed = false;\n      return new Promise((resolve) => {\n        let index = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let updateGroups = this.playlistEditor.groups\n          .filter((group) => !group.group_is_removed && group.modified)\n          .map((group) => {\n            return {\n              id: group.id,\n              group_name: group.group_name,\n              group_order: group.group_order,\n              group_type: group.group_type,\n              group_parent_code: group.group_parent_code,\n              group_is_hidden: group.group_is_hidden,\n            };\n          });\n        let deleteGroups = this.playlistEditor.groups\n          .filter((group) => group.group_is_removed && group.modified)\n          .map((group) => group.id)\n          .join();\n\n        let updateStreams;\n        switch (this.activeGroupType) {\n          // Live streams\n          case 1:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  stream_tvg_name: stream.stream_tvg_name,\n                  stream_tvg_id: stream.stream_tvg_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_parent_code: stream.stream_parent_code,\n                  stream_radio: stream.stream_radio,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Movies\n          case 2:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  movie_name: stream.movie_name,\n                  movie_year: stream.movie_year,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Series\n          case 3:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  serie_name: stream.serie_name,\n                  serie_season: stream.serie_season,\n                  serie_episode: stream.serie_episode,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n        }\n        let deleteStreams = this.playlistEditor.streams\n          .filter((stream) => stream.stream_is_removed === 1 && stream.modified)\n          .map((stream) => stream.id)\n          .join();\n\n        let requests = [];\n        if (updateGroups.length) {\n          requests.push(\n            httpService.post(\"editor/update-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: updateGroups,\n            })\n          );\n        }\n        if (deleteGroups.length) {\n          index = 0;\n          requests.push(\n            httpService.post(\"editor/delete-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: deleteGroups,\n            })\n          );\n        }\n        if (updateStreams.length) {\n          requests.push(\n            httpService.post(`editor/update-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: updateStreams,\n            })\n          );\n        }\n        if (deleteStreams.length) {\n          requests.push(\n            httpService.post(`editor/delete-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: deleteStreams,\n            })\n          );\n        }\n        Promise.all(requests).then((res) => {\n          this.loadPlaylist(this.playlistEditor.id, index);\n          resolve(res);\n        });\n      });\n    },\n    doCancel() {\n      this.isLoading = true;\n      Promise.all([this.restoreGroups(), this.restoreStreams()]).then(() => {\n        this.playlistEditor.changed = false;\n        this.isLoading = false;\n      });\n    },\n    doTabChange(tab) {\n      this.activeTab = tab;\n    },\n    updateGroupOrder(source) {\n      return new Promise((resolve) => {\n        let groups = [...source];\n        for (let i = 0; i < groups.length; i++) {\n          groups[i].source_group_order = i + 1;\n          groups[i].group_order = i + 1;\n        }\n        resolve(groups);\n      });\n    },\n    updateStreamOrder(source) {\n      return new Promise((resolve) => {\n        let streams = [...source];\n        for (let i = 0; i < streams.length; i++) {\n          streams[i].source_stream_order = i + 1;\n          streams[i].stream_order = i + 1;\n        }\n        resolve(streams);\n      });\n    },\n    restoreGroupOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.groups.sort((a, b) =>\n          a.source_group_order > b.source_group_order\n            ? 1\n            : b.source_group_order > a.source_group_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreStreamOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.streams.sort((a, b) =>\n          a.source_stream_order > b.source_stream_order\n            ? 1\n            : b.source_stream_order > a.source_stream_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreGroups() {\n      return new Promise((resolve) => {\n        this.restoreGroupOrder().then(() => {\n          let group;\n          for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n            group = this.playlistEditor.groups[i];\n            group.modified = false;\n            group.group_is_removed = 0;\n            group.group_type = group.source_group_type;\n            group.group_name = group.source_group_name;\n            group.parent_code = group.source_group_parent_code;\n            group.group_is_hidden = group.source_group_is_hidden;\n          }\n          resolve();\n        });\n      });\n    },\n    restoreStreams() {\n      return new Promise((resolve) => {\n        this.restoreStreamOrder().then(() => {\n          let stream;\n          for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n            stream = this.playlistEditor.streams[i];\n            stream.modified = false;\n            stream.stream_is_removed = 0;\n            stream.stream_tvg_name = stream.source_stream_tvg_name;\n            stream.stream_tvg_id = stream.source_stream_tvg_id;\n            stream.stream_tvg_logo = stream.source_stream_tvg_logo;\n            stream.stream_tvg_chno = stream.source_stream_tvg_chno;\n            stream.stream_tvg_shift = stream.source_stream_tvg_shift;\n            stream.stream_parent_code = stream.source_stream_parent_code;\n            stream.stream_audio_track = stream.source_stream_audio_track;\n            stream.stream_aspect_ratio = stream.source_stream_aspect_ratio;\n            stream.stream_radio = stream.source_stream_radio;\n            stream.stream_order = stream.source_stream_order;\n            stream.stream_is_hidden = stream.source_stream_is_hidden;\n            if (\n              stream.movie_name !== undefined &&\n              stream.movie_year !== undefined\n            ) {\n              stream.movie_name = stream.source_movie_name;\n              stream.movie_year = stream.source_movie_year;\n            }\n            if (\n              stream.serie_name !== undefined &&\n              stream.serie_season !== undefined &&\n              stream.serie_episode !== undefined\n            ) {\n              stream.serie_name = stream.source_serie_name;\n              stream.serie_season = stream.source_serie_season;\n              stream.serie_episode = stream.source_serie_episode;\n            }\n          }\n          resolve();\n        });\n      });\n    },\n    toggleGroupVisibility() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_hidden =\n            !this.playlistEditor.groups[i].group_is_hidden;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamVisibility() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_hidden =\n            !this.playlistEditor.streams[i].stream_is_hidden;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamRadio() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          if (this.playlistEditor.streams[i].stream_radio == 0) {\n            this.playlistEditor.streams[i].stream_radio = 1;\n          } else {\n            this.playlistEditor.streams[i].stream_radio = 0;\n          }\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedGroups() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_removed = 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedStreams() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_removed = 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    loadPlaylist(val, group_index = undefined) {\n      this.isLoading = true;\n      if (this.playlistEditor.changed) {\n        this.doSave();\n      }\n      this.playlistEditor.id = val;\n      httpService\n        .get(`editor/groups/${val}`)\n        .then((res) => {\n          if (res.status === true) {\n            this.updateGroupOrder(res.data).then((groups) => {\n              this.playlistEditor.groups = groups.map((group) => {\n                const grp = Object.assign({}, group);\n                grp.source_group_parent_code = group.group_parent_code;\n                grp.source_group_is_hidden = group.group_is_hidden;\n                grp.source_group_name = group.group_name;\n                grp.source_group_type = group.group_type;\n                grp.group_is_removed = false;\n                grp.modified = false;\n                return grp;\n              });\n              if (groups.length) {\n                if (group_index === undefined) {\n                  this.activeGroup = this.playlistEditor.groups[0].id;\n                } else {\n                  this.activeGroup = this.playlistEditor.groups[group_index].id;\n                  this.loadStreams();\n                }\n              }\n            });\n          }\n          this.isLoading = false;\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    toggleGroupSelection(item) {\n      let idx = this.activeGroups.indexOf(item);\n      if (idx !== -1) {\n        this.activeGroups.splice(idx, 1);\n      } else {\n        this.activeGroups.push(item);\n      }\n    },\n    toggleStreamSelection(item) {\n      let idx = this.activeStreams.indexOf(item);\n      if (idx !== -1) {\n        this.activeStreams.splice(idx, 1);\n      } else {\n        this.activeStreams.push(item);\n      }\n    },\n    toggleRadiobrowserSelection(item) {\n      let idx = this.radioBrowser.active.indexOf(item);\n      if (idx !== -1) {\n        this.radioBrowser.active.splice(idx, 1);\n      } else {\n        this.radioBrowser.active.push(item);\n      }\n    },\n    toggleImportM3USelection(item) {\n      let idx = this.importM3U.importGroups.indexOf(item);\n      if (idx !== -1) {\n        this.importM3U.importGroups.splice(idx, 1);\n      } else {\n        this.importM3U.importGroups.push(item);\n      }\n    },\n    indexOfGroup(group) {\n      return this.playlistEditor.groups.map((g) => g.id).indexOf(group);\n    },\n    selectGroupRangeSelection(item) {\n      const lastIndex = this.indexOfGroup(this.lastSelectedGroup);\n      const itemIndex = this.indexOfGroup(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.activeGroups.push(this.playlistEditor.groups[i].id);\n        }\n      }\n    },\n    indexOfStream(stream) {\n      return this.playlistEditor.streams.map((g) => g.id).indexOf(stream);\n    },\n    selectStreamRangeSelection(item) {\n      const lastIndex = this.indexOfStream(this.lastSelectedStream);\n      const itemIndex = this.indexOfStream(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.activeStreams.push(this.playlistEditor.streams[i].id);\n        }\n      }\n    },\n    selectRadiobrowserRangeSelection(index) {\n      const lastIndex =\n        this.radioBrowser.active[this.radioBrowser.active.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.radioBrowser.active.includes(i)) {\n          this.radioBrowser.active.push(i);\n        }\n      }\n    },\n    selectImportM3URangeSelection(index) {\n      const lastIndex =\n        this.importM3U.importGroups[this.importM3U.importGroups.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.importM3U.importGroups.includes(i)) {\n          this.importM3U.importGroups.push(i);\n        }\n      }\n    },\n    selectGroupSelection(item) {\n      this.activeGroups.length = 0;\n      this.activeGroups.push(item);\n    },\n    selectStreamSelection(item) {\n      this.activeStreams.length = 0;\n      this.activeStreams.push(item);\n    },\n    selectRadiobrowserSelection(item) {\n      this.radioBrowser.active.length = 0;\n      this.radioBrowser.active.push(item);\n    },\n    selectImportM3USelection(item) {\n      this.importM3U.importGroups.length = 0;\n      this.importM3U.importGroups.push(item);\n    },\n    findAndReplaceModal(show, type = 1) {\n      this.findReplace.type = type;\n      this.findReplace.modal = show;\n    },\n    findAndReplace() {\n      let options = \"\";\n      if (this.findReplace.replaceAll) {\n        options += \"g\";\n      }\n      if (this.findReplace.ignoreCase) {\n        options += \"i\";\n      }\n      let re = new RegExp(this.findReplace.from.replace(\"|\", \"\\\\|\"), options);\n      switch (parseInt(this.findReplace.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[i].group_name =\n                  this.playlistEditor.groups[i].group_name.replace(\n                    re,\n                    this.findReplace.to\n                  );\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = group.group_name.replace(\n                re,\n                this.findReplace.to\n              );\n            });\n          }\n          break;\n\n        // Streams\n        case 2:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].stream_tvg_name =\n                    this.playlistEditor.streams[i].stream_tvg_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].movie_name =\n                    this.playlistEditor.streams[i].movie_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].serie_name =\n                    this.playlistEditor.streams[i].serie_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n              }\n            }\n          } else {\n            this.filteredStreams.map((stream) => {\n              if (this.activeGroupType === 1) {\n                stream.modified = true;\n                stream.stream_tvg_name = stream.stream_tvg_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 2) {\n                stream.modified = true;\n                stream.movie_name = stream.movie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 3) {\n                stream.modified = true;\n                stream.serie_name = stream.serie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n            });\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.findReplace.modal = false;\n    },\n    prefixSuffixModal(show, type = 1) {\n      this.prefixSuffix.type = type;\n      this.prefixSuffix.modal = show;\n    },\n    addPrefixSuffix() {\n      let prefix = this.prefixSuffix.prefix;\n      let suffix = this.prefixSuffix.suffix;\n      switch (parseInt(this.prefixSuffix.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[i].group_name =\n                  prefix + this.playlistEditor.groups[i].group_name + suffix;\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = prefix + group.group_name + suffix;\n            });\n          }\n          break;\n\n        // Stream\n        case 2:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].stream_tvg_name =\n                    prefix +\n                    this.playlistEditor.streams[i].stream_tvg_name +\n                    suffix;\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].movie_name =\n                    prefix + this.playlistEditor.streams[i].movie_name + suffix;\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].serie_name =\n                    prefix + this.playlistEditor.streams[i].serie_name + suffix;\n                }\n              }\n            }\n          } else {\n            if (this.activeGroupType === 1) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.stream_tvg_name =\n                  prefix + stream.stream_tvg_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 2) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.movie_name = prefix + stream.movie_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 3) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.serie_name = prefix + stream.serie_name + suffix;\n              });\n            }\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.prefixSuffix.modal = false;\n    },\n    convertCaseModal(show, type) {\n      this.convertCase.type = type;\n      this.convertCase.modal = show;\n    },\n    changeCase() {\n      let method = this.convertCase.method;\n      let groups;\n      let streams;\n      if (parseInt(this.convertCase.selectedOnly) === 1) {\n        groups = this.filteredGroups.filter((group) => {\n          return this.activeGroups.includes(group.id);\n        });\n        streams = this.filteredStreams.filter((stream) => {\n          return this.activeStreams.includes(stream.id);\n        });\n      } else {\n        groups = this.filteredGroups;\n        streams = this.filteredStreams;\n      }\n      switch (parseInt(this.convertCase.type)) {\n        // Categories\n        case 1:\n          groups.map((group) => {\n            switch (parseInt(method)) {\n              case 0:\n                group.modified = true;\n                group.group_name = group.group_name.titleCase();\n                break;\n              case 1:\n                group.modified = true;\n                group.group_name = group.group_name.toUpperCase();\n                break;\n              case 2:\n                group.modified = true;\n                group.group_name = group.group_name.toLowerCase();\n                break;\n            }\n          });\n          break;\n\n        // Streams\n        case 2:\n          streams.map((stream) => {\n            switch (parseInt(method)) {\n              case 0:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.titleCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.titleCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.titleCase();\n                }\n                break;\n              case 1:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toUpperCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toUpperCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toUpperCase();\n                }\n                break;\n              case 2:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toLowerCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toLowerCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toLowerCase();\n                }\n                break;\n            }\n          });\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.convertCase.modal = false;\n    },\n    editGroupModal(show) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroups[0]\n      );\n      let group = this.playlistEditor.groups[index];\n      if (group) {\n        this.groupEditor.id = this.activeGroups[0];\n        this.groupEditor.group_type = group.group_type;\n        this.groupEditor.group_name = group.group_name;\n        this.groupEditor.group_is_hidden = group.group_is_hidden;\n        this.groupEditor.group_parent_code = group.group_parent_code;\n        this.groupEditor.modal = show;\n      }\n    },\n    editStreamModal(show) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      let stream = this.playlistEditor.streams[index];\n      if (stream) {\n        this.streamEditor.id = this.activeStreams[0];\n        this.streamEditor.stream_tvg_name = stream.stream_tvg_name;\n        this.streamEditor.stream_tvg_id = stream.stream_tvg_id;\n        this.streamEditor.stream_tvg_logo = stream.stream_tvg_logo;\n        this.streamEditor.stream_parent_code = stream.stream_parent_code;\n        this.streamEditor.stream_radio = stream.stream_radio;\n        this.streamEditor.stream_is_hidden = stream.stream_is_hidden;\n        this.streamEditor.source_stream_url = stream.source_stream_url;\n        this.streamEditor.stream_is_custom = stream.stream_is_custom;\n        if (\n          stream.movie_name !== undefined &&\n          stream.movie_year !== undefined &&\n          stream.tmdb_id !== undefined\n        ) {\n          this.streamEditor.movie_name = stream.movie_name;\n          this.streamEditor.movie_year = stream.movie_year;\n          this.streamEditor.tmdb_id = stream.tmdb_id;\n        }\n        if (\n          stream.serie_name !== undefined &&\n          stream.serie_season !== undefined &&\n          stream.serie_episode !== undefined\n        ) {\n          this.streamEditor.serie_name = stream.serie_name;\n          this.streamEditor.serie_season = stream.serie_season;\n          this.streamEditor.serie_episode = stream.serie_episode;\n        }\n        this.streamEditor.modal = show;\n      }\n    },\n    editGroup() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.groupEditor.id\n      );\n      this.playlistEditor.groups[index].group_type =\n        this.groupEditor.group_type;\n      this.playlistEditor.groups[index].group_name =\n        this.groupEditor.group_name;\n      this.playlistEditor.groups[index].group_is_hidden =\n        this.groupEditor.group_is_hidden;\n      this.playlistEditor.groups[index].group_parent_code =\n        this.groupEditor.group_parent_code;\n      this.playlistEditor.groups[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.groupEditor.modal = false;\n    },\n    editStream() {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      this.playlistEditor.streams[index].stream_tvg_name =\n        this.streamEditor.stream_tvg_name;\n      this.playlistEditor.streams[index].stream_tvg_id =\n        this.streamEditor.stream_tvg_id;\n      this.playlistEditor.streams[index].stream_tvg_logo =\n        this.streamEditor.stream_tvg_logo;\n      this.playlistEditor.streams[index].stream_parent_code =\n        this.streamEditor.stream_parent_code;\n      this.playlistEditor.streams[index].stream_is_hidden =\n        this.streamEditor.stream_is_hidden;\n      this.playlistEditor.streams[index].stream_radio =\n        this.streamEditor.stream_radio;\n      this.playlistEditor.streams[index].source_stream_url =\n        this.streamEditor.source_stream_url;\n      if (\n        this.playlistEditor.streams[index].movie_name !== undefined &&\n        this.playlistEditor.streams[index].movie_year !== undefined &&\n        this.playlistEditor.streams[index].tmdb_id !== undefined\n      ) {\n        this.playlistEditor.streams[index].movie_name =\n          this.streamEditor.movie_name;\n        this.playlistEditor.streams[index].movie_year =\n          this.streamEditor.movie_year;\n        this.playlistEditor.streams[index].tmdb_id = this.streamEditor.tmdb_id;\n      }\n      if (\n        this.playlistEditor.streams[index].serie_name !== undefined &&\n        this.playlistEditor.streams[index].serie_season !== undefined &&\n        this.playlistEditor.streams[index].serie_episode !== undefined\n      ) {\n        this.playlistEditor.streams[index].serie_name =\n          this.streamEditor.serie_name;\n        this.playlistEditor.streams[index].serie_season =\n          this.streamEditor.serie_season;\n        this.playlistEditor.streams[index].serie_episode =\n          this.streamEditor.serie_episode;\n      }\n      this.playlistEditor.streams[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.streamEditor.modal = false;\n    },\n    sortGroupAlphaUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_name > a.group_name ? 1 : a.group_name > b.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupAlphaDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_name > b.group_name ? 1 : b.group_name > a.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_type > a.group_type ? 1 : a.group_type > b.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_type > b.group_type ? 1 : b.group_type > a.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaUp() {\n      //ERNST HIER\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return b.stream_tvg_name > a.stream_tvg_name\n              ? 1\n              : a.stream_tvg_name > b.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return b.movie_name > a.movie_name\n              ? 1\n              : a.movie_name > b.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return b.serie_name > a.serie_name\n              ? 1\n              : a.serie_name > b.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return a.stream_tvg_name > b.stream_tvg_name\n              ? 1\n              : b.stream_tvg_name > a.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return a.movie_name > b.movie_name\n              ? 1\n              : b.movie_name > a.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return a.serie_name > b.serie_name\n              ? 1\n              : b.serie_name > a.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenUp() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        b.stream_is_hidden > a.stream_is_hidden\n          ? 1\n          : a.stream_is_hidden > b.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        a.stream_is_hidden > b.stream_is_hidden\n          ? 1\n          : b.stream_is_hidden > a.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    addGroup() {\n      this.isLoading = true;\n      httpService\n        .post(\"editor/add-group\", { playlist_id: this.playlistEditor.id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            return new Promise((resolve) => {\n              this.playlistEditor.groups.push(res.data);\n              this.activeGroup =\n                this.playlistEditor.groups[\n                  this.playlistEditor.groups.length - 1\n                ].id;\n              this.activeGroups = [\n                this.playlistEditor.groups[\n                  this.playlistEditor.groups.length - 1\n                ].id,\n              ];\n              resolve();\n            }).then(() => {\n              this.editGroupModal(true);\n            });\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"editor.add-group-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    addStream() {\n      this.isLoading = true;\n      httpService\n        .post(\"editor/add-stream\", {\n          playlist_id: this.playlistEditor.id,\n          group_id: this.getGroupWithId(this.activeGroup).id,\n          stream_type: this.getGroupWithId(this.activeGroup).group_type,\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            return new Promise((resolve) => {\n              this.playlistEditor.streams.unshift(res.data);\n              this.activeStream =\n                this.playlistEditor.streams[\n                  this.playlistEditor.streams.length - 1\n                ].id;\n              this.activeStreams = [\n                this.playlistEditor.streams[\n                  this.playlistEditor.streams.length - 1\n                ].id,\n              ];\n              resolve();\n            }).then(() => {\n              this.editStreamModal(true);\n            });\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"editor.add-stream-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    loadStreams() {\n      this.activeStream = -1;\n      this.activeStreams = [];\n      this.playlistEditor.streams = [];\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroup\n      );\n      let group = this.playlistEditor.groups[index];\n      this.isLoading = true;\n      httpService\n        .get(\n          `editor/streams/${this.playlistEditor.id}/${group.id}/${group.group_type}`\n        )\n        .then((res) => {\n          document.body.scrollTop = 0;\n          document.documentElement.scrollTop = 0;\n          if (res.status === true) {\n            let streams = res.data.map((stream) => {\n              const str = Object.assign({}, stream);\n              str.source_stream_tvg_name = stream.stream_tvg_name;\n              str.source_stream_tvg_id = stream.stream_tvg_id;\n              str.source_stream_tvg_logo = stream.stream_tvg_logo;\n              str.source_stream_tvg_chno = stream.stream_tvg_chno;\n              str.source_stream_tvg_shift = stream.stream_tvg_shift;\n              str.source_stream_parent_code = stream.stream_parent_code;\n              str.source_stream_audio_track = stream.stream_audio_track;\n              str.source_stream_aspect_ratio = stream.stream_aspect_ratio;\n              str.source_stream_radio = stream.stream_radio;\n              str.source_stream_order = stream.stream_order;\n              str.source_stream_is_hidden = stream.stream_is_hidden;\n              str.modified = false;\n              str.stream_is_removed = 0;\n              if (group.group_type == 2) {\n                if (str.movie_name == \"\") {\n                  str.movie_name = str.stream_tvg_name;\n                  str.source_movie_name = str.stream_tvg_name;\n                } else {\n                  str.source_movie_name = stream.movie_name;\n                }\n                str.source_movie_year = stream.movie_year;\n                str.source_tmdb_id = stream.tmdb_id;\n              }\n              if (group.group_type == 3) {\n                if (str.serie_name == \"\") {\n                  str.serie_name = str.stream_tvg_name;\n                  str.source_serie_name = str.stream_tvg_name;\n                } else {\n                  str.source_serie_name = stream.serie_name;\n                }\n                str.source_serie_season = stream.serie_season;\n                str.source_serie_episode = stream.serie_episode;\n                str.source_tmdb_id = stream.tmdb_id;\n              }\n              return str;\n            });\n            streams.sort((a, b) =>\n              a.source_stream_order > b.source_stream_order\n                ? 1\n                : b.source_stream_order > a.source_stream_order\n                ? -1\n                : 0\n            );\n            this.playlistEditor.streams = streams;\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    moveToSelectedGroup() {\n      this.isLoading = true;\n      let streams = this.activeStreams.join();\n      let index = this.playlistEditor.groups.findIndex((group) => {\n        return group.id == this.activeGroup;\n      });\n      httpService\n        .post(`editor/move-to-group/${this.activeGroupType}`, {\n          playlist_id: this.playlistEditor.id,\n          streams: streams,\n          group_id: this.activeGroups[0],\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status && res.data) {\n            this.loadPlaylist(this.playlistEditor.id, index);\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    saveChangesModal(show, save = false) {\n      this.saveChanges.modal = show;\n      if (save) {\n        this.doSave();\n      } else {\n        this.loadStreams();\n      }\n    },\n    radioBrowserModal(show, save = false) {\n      if (show) {\n        this.radioBrowser.search = \"\";\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      }\n      if (save) {\n        this.isLoading = true;\n        let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let order = this.playlistEditor.streams.length;\n        const streams = this.radioBrowser.active.map((index) => {\n          let radio = this.radioBrowser.results[index];\n          return {\n            source_stream_url: radio.url,\n            stream_tvg_name: radio.name,\n            stream_tvg_id: \"\",\n            stream_tvg_logo: radio.favicon,\n            stream_radio: true,\n            stream_order: order++,\n          };\n        });\n        httpService\n          .post(`editor/add-streams/${this.activeGroupType}`, {\n            playlist_id: this.playlistEditor.id,\n            group_id: this.getGroupWithId(this.activeGroup).id,\n            streams: streams,\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status) {\n              this.loadPlaylist(this.playlistEditor.id, groupIndex);\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n      this.radioBrowser.modal = show;\n    },\n    findRadiobrowser(search) {\n      if (search.length === 0) {\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      } else {\n        this.radioBrowser.isLoading = true;\n        httpService\n          .post(\"editor/find-radiobrowser\", {\n            search: search,\n          })\n          .then((res) => {\n            this.radioBrowser.active = [];\n            if (res.status) {\n              this.radioBrowser.results = res.data;\n            } else {\n              this.radioBrowser.results = [];\n            }\n            this.radioBrowser.isLoading = false;\n          })\n          .catch(() => {\n            this.radioBrowser.active = [];\n            this.radioBrowser.results = [];\n            this.radioBrowser.isLoading = false;\n          });\n      }\n    },\n    soundcloudModal(show, save = false) {\n      if (show) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      }\n      if (save) {\n        if (this.soundcloud.track) {\n          this.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.soundcloud.url,\n              stream_tvg_name: this.soundcloud.track.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.soundcloud.track.artwork_url.replace(\n                \"large.jpg\",\n                \"t500x500.jpg\"\n              ),\n              stream_radio: true,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.isLoading = false;\n            });\n        }\n      }\n      this.soundcloud.modal = show;\n    },\n    getSoundcloudTrack(url, client_id) {\n      if (url.length === 0 || !/soundcloud\\.com/.test(url)) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      } else {\n        this.soundcloud.isLoading = true;\n        httpService\n          .post(\"editor/soundcloud-track\", {\n            url: url,\n            client_id: client_id,\n          })\n          .then((res) => {\n            if (res.status && Object.keys(res.data).length) {\n              this.soundcloud.track = res.data;\n            } else {\n              this.soundcloud.track = null;\n            }\n            this.soundcloud.isLoading = false;\n          })\n          .catch(() => {\n            this.soundcloud.track = null;\n            this.soundcloud.isLoading = false;\n          });\n      }\n    },\n    youtubeModal(show, save = false) {\n      if (show) {\n        this.youtube.url = \"\";\n        this.youtube.video = null;\n        this.youtube.isLoading = false;\n      }\n      if (save) {\n        if (this.youtube.video) {\n          this.youtube.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.youtube.url,\n              stream_tvg_name: this.youtube.video.videoDetails.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: `http://i.ytimg.com/vi/${this.youtube.videoId}/maxresdefault.jpg`,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.youtube.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.youtube.isLoading = false;\n            });\n        }\n      }\n      this.youtube.modal = show;\n    },\n    getYoutubePage(videoId) {\n      this.youtube.isLoading = true;\n      httpService.youtube(videoId).then((res) => {\n        this.youtube.video = res;\n        this.youtube.isLoading = false;\n      });\n    },\n    vimeoModal(show, save = false) {\n      if (show) {\n        this.vimeo.url = \"\";\n        this.vimeo.video = null;\n        this.vimeo.isLoading = false;\n      }\n      if (save) {\n        if (this.vimeo.video) {\n          this.vimeo.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.vimeo.url,\n              stream_tvg_name: this.vimeo.video.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.vimeo.video.video.thumbs.base,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.vimeo.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.vimeo.isLoading = false;\n            });\n        }\n      }\n      this.vimeo.modal = show;\n    },\n    getVimeoConfig(videoId) {\n      this.vimeo.isLoading = true;\n      httpService\n        .post(\"editor/vimeo-video\", { video_id: videoId })\n        .then((res) => {\n          this.vimeo.video = res.data;\n          this.vimeo.isLoading = false;\n        });\n    },\n    dailymotionModal(show, save = false) {\n      if (show) {\n        this.dailymotion.url = \"\";\n        this.dailymotion.video = null;\n        this.dailymotion.isLoading = false;\n      }\n      if (save) {\n        if (this.dailymotion.video) {\n          this.dailymotion.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.dailymotion.url,\n              stream_tvg_name: this.dailymotion.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.dailymotion.video.thumbnail_1080_url,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.dailymotion.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.dailymotion.isLoading = false;\n            });\n        }\n      }\n      this.dailymotion.modal = show;\n    },\n    getDailymotionConfig(videoId) {\n      this.dailymotion.isLoading = true;\n      httpService\n        .post(\"editor/dailymotion-video\", { video_id: videoId })\n        .then((res) => {\n          this.dailymotion.video = res.data;\n          this.dailymotion.isLoading = false;\n        });\n    },\n    tedTalksModal(show, save = false) {\n      if (show) {\n        this.tedTalks.url = \"\";\n        this.tedTalks.video = null;\n        this.tedTalks.isLoading = false;\n      }\n      if (save) {\n        if (this.tedTalks.video) {\n          this.tedTalks.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.tedTalks.url,\n              stream_tvg_name: this.tedTalks.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.tedTalks.video.hero,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.tedTalks.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.tedTalks.isLoading = false;\n            });\n        }\n      }\n      this.tedTalks.modal = show;\n    },\n    getTedTalksConfig(url) {\n      this.tedTalks.isLoading = true;\n      httpService.post(\"editor/ted-talks-video\", { url: url }).then((res) => {\n        this.tedTalks.video = res.data.talks.length ? res.data.talks[0] : null;\n        this.tedTalks.isLoading = false;\n      });\n    },\n    xhamsterModal(show, save = false) {\n      if (show) {\n        this.xhamster.url = \"\";\n        this.xhamster.video = null;\n        this.xhamster.isLoading = false;\n      }\n      if (save) {\n        if (this.xhamster.video) {\n          this.xhamster.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.xhamster.url,\n              stream_tvg_name: this.xhamster.video.videoEntity.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.xhamster.video.videoEntity.thumbBig,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.xhamster.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.xhamster.isLoading = false;\n            });\n        }\n      }\n      this.xhamster.modal = show;\n    },\n    getXhamsterConfig(url) {\n      this.xhamster.isLoading = true;\n      httpService.post(\"editor/xhamster-video\", { url: url }).then((res) => {\n        this.xhamster.video = res.data;\n        this.xhamster.isLoading = false;\n      });\n    },\n    groupDoubleClick() {\n      if (this.activeGroups.length === 1) {\n        this.editGroupModal(true);\n      }\n    },\n    streamDoubleClick() {\n      if (this.activeStreams.length === 1) {\n        this.editStreamModal(true);\n      }\n    },\n    loadLogoCountries() {\n      this.findLogo.isLoading = true;\n      httpService\n        .get(\"editor/logo-countries\")\n        .then((res) => {\n          this.findLogo.isLoading = false;\n          this.findLogo.countries = res.data\n            .map((country) => {\n              let cn = this.countries.find(\n                (cnt) => cnt.code.toLowerCase() == country.toLowerCase()\n              );\n              return {\n                text: cn ? cn.name : country,\n                value: country,\n              };\n            })\n            .sort((a, b) => {\n              return a.text.toUpperCase() < b.text.toUpperCase()\n                ? -1\n                : a.text.toUpperCase() > b.text.toUpperCase()\n                ? 1\n                : 0;\n            });\n          this.assignLogo.countries = [...this.findLogo.countries];\n        })\n        .catch(() => {\n          this.findLogo.isLoading = false;\n        });\n    },\n    loadTVGIDCountries() {\n      this.assignTVGID.isLoading = true;\n      httpService\n        .get(\"editor/tv-guide-countries\")\n        .then((res) => {\n          this.assignTVGID.isLoading = false;\n          this.assignTVGID.countries = res.data\n            .map((country) => {\n              let cn = this.countries.find(\n                (cnt) => cnt.code.toLowerCase() == country.toLowerCase()\n              );\n              return {\n                text: cn ? cn.name : country,\n                value: country,\n              };\n            })\n            .sort((a, b) => {\n              return a.text.toUpperCase() < b.text.toUpperCase()\n                ? -1\n                : a.text.toUpperCase() > b.text.toUpperCase()\n                ? 1\n                : 0;\n            });\n          this.assignTVGID.countries.unshift({ text: this.$t(\"general.all\"), value: \"all\" });\n          this.findTVGID.countries = [...this.assignTVGID.countries];\n        })\n        .catch(() => {\n          this.assignTVGID.isLoading = false;\n        });\n    },\n    loadLogosFind(country) {\n      this.findLogo.isLoading = true;\n      httpService\n        .get(`editor/logos/${country}`)\n        .then((res) => {\n          this.findLogo.logo = \"\";\n          this.findLogo.isLoading = false;\n          this.findLogo.logos = res.data.map((logo) => {\n            return {\n              text: logo.label,\n              value: logo.filename,\n            };\n          });\n        })\n        .catch(() => {\n          this.findLogo.isLoading = false;\n        });\n    },\n    findLogoModal(show, save = false) {\n      let selected = this.getStreamWithId(this.activeStreams[0]);\n      if (show) {\n        this.findLogo.logo = \"\";\n        this.findLogo.title = selected.stream_tvg_name;\n      }\n      this.findLogo.search = \"\";\n      if (save) {\n        if (selected) {\n          selected.stream_tvg_logo = `http://static.iptv-tools.com/${this.findLogo.country}/${this.findLogo.logo}`;\n          selected.modified = true;\n          this.playlistEditor.changed = true;\n        }\n      }\n      this.findLogo.modal = show;\n    },\n    loadLogosAssign(country) {\n      this.assignLogo.isLoading = true;\n      httpService\n        .get(`editor/logos/${country}`)\n        .then((res) => {\n          this.assignLogo.logo = \"\";\n          this.assignLogo.isLoading = false;\n          this.assignLogo.logos = res.data.map((logo) => logo.filename);\n        })\n        .catch(() => {\n          this.assignLogo.isLoading = false;\n        });\n    },\n    assignLogoModal(show, save = false) {\n      if (show) {\n        this.assignLogo.logo = \"\";\n      }\n      if (save) {\n        var changed = false;\n        var stringSimilarity = require(\"string-similarity\");\n        let streams = [];\n        if (this.assignLogo.assignAll == 1) {\n          streams = this.playlistEditor.streams;\n        } else {\n          streams = this.playlistEditor.streams.filter((stream) => !stream.stream_tvg_logo.length);\n        }\n        streams.map((stream) => {\n          let match1 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name).replace(/ hd$/i, \"\"),\n            this.assignLogo.logos\n          ).bestMatch;\n          let match2 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_id),\n            this.assignLogo.logos\n          ).bestMatch;\n          if (match1.rating >= 0.3) {\n            changed = true;\n            stream.stream_tvg_logo = `http://static.iptv-tools.com/${this.assignLogo.country}/${match1.target}`;\n            stream.modified = true;\n          } else if (match2.rating >= 0.5) {\n            changed = true;\n            stream.stream_tvg_logo = `http://static.iptv-tools.com/${this.assignLogo.country}/${match2.target}`;\n            stream.modified = true;\n          }\n        });\n        this.playlistEditor.changed = changed;\n      }\n      this.assignLogo.modal = show;\n    },\n    loadTVGIDAssign(country) {\n      this.assignTVGID.isLoading = true;\n      httpService\n        .get(`editor/tv-guide/${country}`)\n        .then((res) => {\n          this.assignTVGID.isLoading = false;\n          this.assignTVGID.channels = res.data;\n        })\n        .catch(() => {\n          this.assignTVGID.isLoading = false;\n        });\n    },\n    assignTVGIDModal(show, save = false) {\n      if (save) {\n        var changed = false;\n        var stringSimilarity = require(\"string-similarity\");\n        let streams = [];\n        if (this.assignTVGID.assignAll == 1) {\n          streams = this.playlistEditor.streams;\n        } else {\n          streams = this.playlistEditor.streams.filter((stream) => !stream.stream_tvg_id.length || stream.stream_tvg_id.length == 0);\n        }\n        let channelNames = this.assignTVGID.channels.map(channel => channel.tvg_name);\n        let channelIds = this.assignTVGID.channels.map(channel => channel.tvg_id);\n        streams.map((stream) => {\n          let match1 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name),\n            channelNames\n          ).bestMatch;\n          let match2 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_id),\n            channelIds\n          ).bestMatch;\n          let match3 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name).replace(/ hd$| fhd$| hevc$| h265$|/i, \"\"),\n            channelNames\n          ).bestMatch;\n          if (match2.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = match2.target;\n            stream.modified = true;\n          } else if (match1.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = this.assignTVGID.channels.find(channel => channel.tvg_name === match1.target).tvg_id;\n            stream.modified = true;\n          } else if (match3.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = this.assignTVGID.channels.find(channel => channel.tvg_name === match1.target).tvg_id;\n            stream.modified = true;\n          } else {\n            changed = true;\n            stream.stream_tvg_id = \"\";\n            stream.modified = true;\n          }\n        });\n        this.playlistEditor.changed = changed;\n      }\n      this.assignTVGID.modal = show;\n    },\n    loadTVGIDFind(country) {\n      this.findTVGID.isLoading = true;\n      httpService\n        .get(`editor/tv-guide/${country}`)\n        .then((res) => {\n          this.findTVGID.channel = \"\";\n          this.findTVGID.isLoading = false;\n          this.findTVGID.channels = res.data.map((channel) => {\n            return {\n              text: channel.tvg_name,\n              value: channel.tvg_id,\n            };\n          });\n        })\n        .catch(() => {\n          this.findTVGID.isLoading = false;\n        });\n    },\n    findTVGIDModal(show, save = false) {\n      let selected = this.getStreamWithId(this.activeStreams[0]);\n      if (show) {\n        this.findTVGID.channel = \"\";\n        this.findTVGID.title = selected.stream_tvg_name;\n      }\n      this.findTVGID.search = \"\";\n      if (save) {\n        if (selected) {\n          selected.stream_tvg_id = this.findTVGID.channel;\n          selected.modified = true;\n          this.playlistEditor.changed = true;\n        }\n      }\n      this.findTVGID.modal = show;\n    },\n    importM3UModal(show, save = false) {\n      if (show) {\n        this.importM3U.file = null;\n        this.importM3U.m3u = null;\n        this.importM3U.groups = [];\n        this.importM3U.importGroups = [];\n      }\n      if (save) {\n        this.isLoading = true;\n        let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        httpService\n          .post(\"editor/import\", {\n            playlist_id: this.playlistEditor.id,\n            import: this.importM3U.groups.filter((group, index) => this.importM3U.importGroups.includes(index))\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status) {\n              this.loadPlaylist(this.playlistEditor.id, groupIndex);\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n      this.importM3U.modal = show;\n    },\n    uploadM3U(event) {\n      const input = event.target;\n      if (\"files\" in input && input.files.length > 0) {\n        this.importM3U.isLoading = true;\n        this.readFileContent(input.files[0])\n          .then((content) => {\n            this.importM3U.isLoading = false;\n            this.parseM3U(content);\n          })\n          .catch((error) => {\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              error,\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n    parseM3U(content) {\n      let vm = this;\n      vm.importM3U.isLoading = true;\n      m3u\n        .parse(\n          content,\n          { tag: \"name\", type: [\"Movie\", \"Series\", \"VOD\", \"Live\"] },\n          true\n        )\n        .then((playlist) => {\n          this.importM3U.m3u = playlist;\n          this.importM3U.isLoading = false;\n          this.importM3U.groups = playlist.groups;\n          this.importM3U.importGroups = [];\n        })\n        .catch((error) => {\n          vm.isLoading = false;\n          vm.$notify(\n            \"error\",\n            vm.$t(\"profile.failed\"),\n            error,\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    readFileContent(file) {\n      const reader = new FileReader();\n      return new Promise((resolve, reject) => {\n        reader.onload = (event) => resolve(event.target.result);\n        reader.onerror = (error) => reject(error);\n        reader.readAsText(file);\n      });\n    },\n  },\n  beforeMount() {\n    document.body.classList.add(\"right-menu\");\n    EventBus.$on(\"search\", this.searchEditor);\n    EventBus.$on(\"print\", this.printEditor);\n    EventBus.$on(\"tab-change\", this.doTabChange);\n    EventBus.$on(\"save\", this.doSave);\n    EventBus.$on(\"cancel\", this.doCancel);\n    if (this.movieSeriePlaylist) {\n      this.loadPlaylist(this.movieSeriePlaylist);\n    }\n    this.loadLogoCountries();\n    this.loadTVGIDCountries();\n  },\n  beforeDestroy() {\n    document.body.classList.remove(\"right-menu\");\n    EventBus.$off(\"search\", this.searchEditor);\n    EventBus.$off(\"print\", this.printEditor);\n    EventBus.$off(\"tab-change\", this.doTabChange);\n    EventBus.$off(\"save\", this.doSave);\n    EventBus.$off(\"cancel\", this.doCancel);\n  },\n  watch: {\n    dragStream: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    dragGroup: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    activeGroup: function (val) {\n      if (this.playlistEditor.changed) {\n        this.saveChangesModal(true);\n      } else {\n        this.loadStreams();\n      }\n    },\n    \"playlistEditor.changed\": function (val) {\n      EventBus.$emit(\"editor-changes\", val);\n    },\n    \"radioBrowser.search\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.findRadiobrowser(val);\n      }, 500);\n    },\n    \"soundcloud.url\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.getSoundcloudTrack(val, vm.soundcloudClientId);\n      }, 500);\n    },\n    \"youtube.url\": function (val) {\n      if (!val.length) {\n        return;\n      }\n      if (/youtu\\.?be/i.test(val)) {\n        var i;\n        var patterns = [\n          /youtu\\.be\\/([^#&?]{11})/, // youtu.be/<id>\n          /\\?v=([^#&?]{11})/, // ?v=<id>\n          /&v=([^#&?]{11})/, // &v=<id>\n          /embed\\/([^#&?]{11})/, // embed/<id>\n          /\\/v\\/([^#&?]{11})/, // /v/<id>\n        ];\n\n        for (i = 0; i < patterns.length; ++i) {\n          if (patterns[i].test(val)) {\n            this.youtube.videoId = patterns[i].exec(val)[1];\n            return;\n          }\n        }\n\n        var tokens = val.split(/[/&?=#.\\s]/g);\n        for (i = 0; i < tokens.length; ++i) {\n          if (/^[^#&?]{11}$/.test(tokens[i])) {\n            this.youtube.videoId = tokens[i];\n            return;\n          }\n        }\n\n        this.youtube.videoId = \"\";\n      } else {\n        try {\n          var urlp = new URL(val);\n          this.youtube.videoId = urlp.searchParams.get(\"v\");\n        } catch (error) {\n          this.youtube.videoId = \"\";\n          console.log(error);\n        }\n      }\n    },\n    \"youtube.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.youtube.bounce);\n      this.youtube.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getYoutubePage(val);\n        } else {\n          vm.youtube.video = null;\n        }\n      }, 500);\n    },\n    \"vimeo.url\": function (val) {\n      if (/vimeo\\.com/i.test(val)) {\n        let match = val.match(\n          /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_-]+)?/i\n        );\n        if (match.length >= 2) {\n          this.vimeo.videoId = match[1];\n        } else {\n          this.vimeo.videoId = \"\";\n        }\n      } else {\n        this.vimeo.videoId = \"\";\n      }\n    },\n    \"vimeo.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.vimeo.bounce);\n      this.vimeo.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getVimeoConfig(val);\n        } else {\n          vm.vimeo.video = null;\n        }\n      }, 500);\n    },\n    \"dailymotion.url\": function (val) {\n      if (/dailymotion\\.com/i.test(val)) {\n        let match = val.match(\n          /^.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/i\n        );\n        if (match.length >= 4 && match[4]) {\n          this.dailymotion.videoId = match[4];\n        } else if (match.length >= 2) {\n          this.dailymotion.videoId = match[2];\n        } else {\n          this.dailymotion.videoId = \"\";\n        }\n      } else {\n        this.dailymotion.videoId = \"\";\n      }\n    },\n    \"dailymotion.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.dailymotion.bounce);\n      this.dailymotion.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getDailymotionConfig(val);\n        } else {\n          vm.dailymotion.video = null;\n        }\n      }, 500);\n    },\n    \"tedTalks.url\": function (val) {\n      if (/ted\\.com\\/talks/i.test(val)) {\n        let vm = this;\n        clearTimeout(this.tedTalks.bounce);\n        this.tedTalks.bounce = setTimeout(function () {\n          if (val.length) {\n            vm.getTedTalksConfig(val);\n          } else {\n            vm.tedTalks.video = null;\n          }\n        }, 500);\n      }\n    },\n    \"xhamster.url\": function (val) {\n      let vm = this;\n      if (/xhamster\\.com\\/videos/i.test(val)) {\n        clearTimeout(this.xhamsterBounce);\n        this.xhamsterBounce = setTimeout(function () {\n          if (val.length) {\n            vm.getXhamsterConfig(val);\n          } else {\n            vm.xhamster.video = null;\n          }\n        }, 500);\n      }\n    },\n    \"findLogo.country\": function (val) {\n      if (val.length) {\n        this.loadLogosFind(val);\n      } else {\n        this.findLogo.logo = \"\";\n      }\n    },\n    \"assignLogo.country\": function (val) {\n      if (val.length) {\n        this.loadLogosAssign(val);\n      } else {\n        this.assignLogo.logo = \"\";\n      }\n    },\n    \"findTVGID.country\": function (val) {\n      if (val.length) {\n        this.loadTVGIDFind(val);\n      } else {\n        this.findTVGID.channel = \"\";\n      }\n    },\n    \"assignTVGID.country\": function (val) {\n      if (val.length) {\n        this.loadTVGIDAssign(val);\n      } else {\n        this.assignTVGID.channels = [];\n      }\n    },\n    movieSeriePlaylist: function (val) {\n      this.loadPlaylist(val);\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.editor-stream,\n.editor-group {\n  margin-top: 0.1rem;\n  -webkit-user-select: none;\n  -webkit-touch-callout: none;\n  -khtml-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n\n  &:focus,\n  &:focus-within {\n    &.selected {\n      background-color: $theme-color-1 !important;\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n\n  &.selected {\n    background-color: $theme-color-1 !important;\n    &.success {\n      background-color: $success-color !important;\n    }\n    &.danger {\n      background-color: $error-color !important;\n    }\n    &.info {\n      background-color: $info-color !important;\n    }\n\n    a,\n    i,\n    span {\n      color: $button-text-color !important;\n    }\n  }\n\n  &.active {\n    border-color: rgba($theme-color-1, 0.6) !important;\n\n    a,\n    span {\n      font-weight: bold;\n    }\n    a,\n    i,\n    span {\n      color: $theme-color-1;\n    }\n  }\n\n  &.hidden {\n    opacity: 0.5;\n  }\n}\n\n.editor-stream {\n  .stream-icon {\n    float: right;\n    max-height: 16px;\n  }\n}\n\n.editor-stream-icon {\n  max-width: 100%;\n  max-height: 250px;\n  height: auto !important;\n}\n\n.editor-movie-poster {\n  max-height: 250px;\n  width: auto !important;\n}\n\n.flip-list-move {\n  transition: transform 0.5s;\n}\n.no-move {\n  transition: transform 0s;\n}\n.ghost {\n  opacity: 0.5;\n}\n\n.handle {\n  cursor: move;\n  vertical-align: middle;\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n}\n\n.radiobrowser-stations {\n  overflow: hidden;\n\n  .ps {\n    max-height: 300px;\n    padding-top: 0.25rem;\n    padding-bottom: 0.5rem;\n  }\n\n  .radiobrowser-station {\n    margin-top: 0.1rem;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n\n    &:focus,\n    &:focus-within {\n      &.selected {\n        background-color: $theme-color-1 !important;\n\n        a,\n        i,\n        span {\n          color: $button-text-color !important;\n        }\n      }\n\n      &.active {\n        border-color: rgba($theme-color-1, 0.6) !important;\n\n        a,\n        span {\n          font-weight: bold;\n        }\n        a,\n        i,\n        span {\n          color: $theme-color-1;\n        }\n      }\n    }\n\n    &.selected {\n      background-color: $theme-color-1 !important;\n      &.success {\n        background-color: $success-color !important;\n      }\n      &.danger {\n        background-color: $error-color !important;\n      }\n      &.info {\n        background-color: $info-color !important;\n      }\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n}\n\n.soundcloud-info {\n  width: max-content;\n\n  .cover {\n    max-height: 300px;\n  }\n}\n\n.find-logo {\n  min-height: 250px;\n\n  .stream-logo {\n    max-width: 250px;\n    height: auto;\n  }\n}\n\n.assign-logo {\n  min-height: 300px;\n}\n\n.find-channel-id {\n  min-height: 410px;\n}\n</style>\n"],"sourceRoot":"src/views/app/xtream"}]}