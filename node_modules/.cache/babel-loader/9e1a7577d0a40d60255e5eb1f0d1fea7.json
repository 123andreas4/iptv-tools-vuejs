{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/index.vue","mtime":1625670834421},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21lZGlhL2VybnN0LzYzYmNlNDNjLTVlNTEtNGJmMS1hNjExLTNhZmRmMzJhYzZmNi9WdWVKUy9JUFRWLVRvb2xzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBcHBMYXlvdXQgZnJvbSAiLi4vLi4vbGF5b3V0cy9BcHBMYXlvdXQiOwppbXBvcnQgU2V0dGluZ3NNZW51IGZyb20gIi4uLy4uL2NvbXBvbmVudHMvQXBwL1NldHRpbmdzTWVudSI7CmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICJhcHAtbGF5b3V0IjogQXBwTGF5b3V0LAogICAgInNldHRpbmdzLW1lbnUiOiBTZXR0aW5nc01lbnUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwbGF5bGlzdDogbnVsbCwKICAgICAgdG1kYjogbnVsbCwKICAgICAgeG1sdHY6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsiY3VycmVudFVzZXIiLCAic3luY1RNREIiLCAic3luY1BsYXlsaXN0IiwgImFwcFhtbHR2U3luYyJdKSksIHt9LCB7CiAgICB1c2VySGFzVmFsaWRTdWJzY3JpcHRpb246IGZ1bmN0aW9uIHVzZXJIYXNWYWxpZFN1YnNjcmlwdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFVzZXIuc3Vic2NyaXB0aW9uICE9PSBudWxsICYmICh0aGlzLmN1cnJlbnRVc2VyLnN1YnNjcmlwdGlvbi5lbmRfZGF0ZSA9PT0gbnVsbCB8fCBuZXcgRGF0ZSh0aGlzLmN1cnJlbnRVc2VyLnN1YnNjcmlwdGlvbi5lbmRfZGF0ZSkuZ2V0VGltZSgpID4gbmV3IERhdGUoKS5nZXRUaW1lKCkpOwogICAgfQogIH0pLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyhbImdldFN5bmNUTURCIiwgImdldFN5bmNQbGF5bGlzdCIsICJzeW5jaHJvbml6ZVRNREIiLCAic3luY2hyb25pemVQbGF5bGlzdCIsICJhZGRBbGVydCIsICJnZXRBcHBYbWx0dlN5bmMiLCAibG9hZE1vdmllU2VyaWVQbGF5bGlzdHMiXSkpLCB7fSwgewogICAgdG1kYlN5bmNTdGFydE5vdGlmeTogZnVuY3Rpb24gdG1kYlN5bmNTdGFydE5vdGlmeSgpIHsKICAgICAgdGhpcy4kbm90aWZ5KCJpbmZvIiwgdGhpcy4kdCgiZ2VuZXJhbC5vbmUtbW9tZW50IiksIHRoaXMuJHQoIm0zdS5tM3UtdG1kYi1zdGFydCIpLCAibGEtc3luYyIsIHsKICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgIH0pOwogICAgfSwKICAgIHRtZGJTeW5jRW5kTm90aWZ5OiBmdW5jdGlvbiB0bWRiU3luY0VuZE5vdGlmeSgpIHsKICAgICAgdGhpcy4kbm90aWZ5KCJwcmltYXJ5IiwgdGhpcy4kdCgicHJvZmlsZS5zdWNjZXNzIiksIHRoaXMuJHQoIm0zdS5tM3UtdG1kYi1zdG9wIiksICJsYS11c2VyLXNoaWVsZCIsIHsKICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgIH0pOwogICAgfSwKICAgIHBsYXlsaXN0U3luY1N0YXJ0Tm90aWZ5OiBmdW5jdGlvbiBwbGF5bGlzdFN5bmNTdGFydE5vdGlmeSgpIHsKICAgICAgdGhpcy4kbm90aWZ5KCJpbmZvIiwgdGhpcy4kdCgiZ2VuZXJhbC5vbmUtbW9tZW50IiksIHRoaXMuJHQoIm0zdS5tM3Utc3luYy1zdGFydCIpLCAibGEtc3luYyIsIHsKICAgICAgICBkdXJhdGlvbjogNTAwMCwKICAgICAgICBwZXJtYW5lbnQ6IGZhbHNlCiAgICAgIH0pOwogICAgfSwKICAgIHBsYXlsaXN0U3luY0VuZE5vdGlmeTogZnVuY3Rpb24gcGxheWxpc3RTeW5jRW5kTm90aWZ5KCkgewogICAgICB0aGlzLiRub3RpZnkoInByaW1hcnkiLCB0aGlzLiR0KCJwcm9maWxlLnN1Y2Nlc3MiKSwgdGhpcy4kdCgibTN1Lm0zdS1zeW5jLXN0b3AiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgeG1sdHZTdGFydE5vdGlmeTogZnVuY3Rpb24geG1sdHZTdGFydE5vdGlmeSgpIHsKICAgICAgdGhpcy4kbm90aWZ5KCJpbmZvIiwgdGhpcy4kdCgiZ2VuZXJhbC5vbmUtbW9tZW50IiksIHRoaXMuJHQoInhtbHR2LnN5bmMtc3RhcnQiKSwgImxhLXN5bmMiLCB7CiAgICAgICAgZHVyYXRpb246IDUwMDAsCiAgICAgICAgcGVybWFuZW50OiBmYWxzZQogICAgICB9KTsKICAgIH0sCiAgICB4bWx0dkVuZE5vdGlmeTogZnVuY3Rpb24geG1sdHZFbmROb3RpZnkoKSB7CiAgICAgIHRoaXMuJG5vdGlmeSgicHJpbWFyeSIsIHRoaXMuJHQoInByb2ZpbGUuc3VjY2VzcyIpLCB0aGlzLiR0KCJ4bWx0di5zeW5jLXN0b3AiKSwgImxhLXVzZXItc2hpZWxkIiwgewogICAgICAgIGR1cmF0aW9uOiA1MDAwLAogICAgICAgIHBlcm1hbmVudDogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgcmVzZXRUbWRiSW50ZXJ2YWw6IGZ1bmN0aW9uIHJlc2V0VG1kYkludGVydmFsKGludGVydmFsKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50bWRiKTsKICAgICAgdGhpcy50bWRiID0gc2V0SW50ZXJ2YWwodGhpcy5nZXRTeW5jVE1EQiwgaW50ZXJ2YWwgKiAxMDAwKTsKICAgIH0sCiAgICByZXNldFBsYXlsaXN0SW50ZXJ2YWw6IGZ1bmN0aW9uIHJlc2V0UGxheWxpc3RJbnRlcnZhbChpbnRlcnZhbCkgewogICAgICBjbGVhckludGVydmFsKHRoaXMucGxheWxpc3QpOwogICAgICB0aGlzLnBsYXlsaXN0ID0gc2V0SW50ZXJ2YWwodGhpcy5nZXRTeW5jUGxheWxpc3QsIGludGVydmFsICogMTAwMCk7CiAgICB9LAogICAgcmVzZXRBcHBYbWx0dlN5bmNJbnRlcnZhbDogZnVuY3Rpb24gcmVzZXRBcHBYbWx0dlN5bmNJbnRlcnZhbChpbnRlcnZhbCkgewogICAgICBjbGVhckludGVydmFsKHRoaXMueG1sdHYpOwogICAgICB0aGlzLnhtbHR2ID0gc2V0SW50ZXJ2YWwodGhpcy5nZXRBcHBYbWx0dlN5bmMsIGludGVydmFsICogMTAwMCk7CiAgICB9CiAgfSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZE1vdmllU2VyaWVQbGF5bGlzdHModHJ1ZSk7CgogICAgaWYgKCF0aGlzLnVzZXJIYXNWYWxpZFN1YnNjcmlwdGlvbikgewogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgbmFtZTogInN1YnNjcmlwdGlvbiIKICAgICAgfSk7CiAgICB9CiAgfSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICBpZiAoWzMsIDQsIDVdLmluY2x1ZGVzKHRoaXMuY3VycmVudFVzZXIudXNlci5yb2xlKSkgewogICAgICB0aGlzLmdldFN5bmNUTURCKCk7CiAgICAgIHRoaXMuZ2V0U3luY1BsYXlsaXN0KCk7CiAgICAgIHRoaXMudG1kYiA9IHNldEludGVydmFsKHRoaXMuZ2V0U3luY1RNREIsIDMwICogMTAwMCk7CiAgICAgIHRoaXMucGxheWxpc3QgPSBzZXRJbnRlcnZhbCh0aGlzLmdldFN5bmNQbGF5bGlzdCwgMzAgKiAxMDAwKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuZ2V0QXBwWG1sdHZTeW5jKCk7CiAgICAgIHRoaXMueG1sdHYgPSBzZXRJbnRlcnZhbCh0aGlzLmdldEFwcFhtbHR2U3luYywgMzAgKiAxMDAwKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAoWzMsIDQsIDVdLmluY2x1ZGVzKHRoaXMuY3VycmVudFVzZXIudXNlci5yb2xlKSkgewogICAgICBjbGVhckludGVydmFsKHRoaXMudG1kYik7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5wbGF5bGlzdCk7CiAgICB9IGVsc2UgewogICAgICBjbGVhckludGVydmFsKHRoaXMueG1sdHYpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICRyb3V0ZTogZnVuY3Rpb24gJHJvdXRlKHZhbCkgewogICAgICBpZiAoIXRoaXMudXNlckhhc1ZhbGlkU3Vic2NyaXB0aW9uICYmICFbInN1YnNjcmlwdGlvbiIsICJwcm9maWxlIiwgImludm9pY2VzIiwgInRpY2tldHMiLCAiZmFxIl0uY29udGFpbnModmFsLm5hbWUpKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoewogICAgICAgICAgbmFtZTogInN1YnNjcmlwdGlvbiIKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy5sb2FkTW92aWVTZXJpZVBsYXlsaXN0cyh0cnVlKTsKICAgIH0sCiAgICBzeW5jVE1EQjogZnVuY3Rpb24gc3luY1RNREIodmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLnJlc2V0VG1kYkludGVydmFsKDEwKTsKICAgICAgICB0aGlzLnRtZGJTeW5jU3RhcnROb3RpZnkoKTsKICAgICAgICB0aGlzLmFkZEFsZXJ0KHsKICAgICAgICAgIGljb246ICJsYS1zeW5jIiwKICAgICAgICAgIHRvOiAiL2FwcC9zdGFydC9kYXNoYm9hcmQiLAogICAgICAgICAgdGV4dDogdGhpcy4kdCgibTN1Lm0zdS10bWRiLXN0YXJ0IiksCiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yZXNldFRtZGJJbnRlcnZhbCgzMCk7CiAgICAgICAgdGhpcy50bWRiU3luY0VuZE5vdGlmeSgpOwogICAgICAgIHRoaXMuYWRkQWxlcnQoewogICAgICAgICAgaWNvbjogImxhLXN5bmMiLAogICAgICAgICAgdG86ICIvYXBwL3N0YXJ0L2Rhc2hib2FyZCIsCiAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCJtM3UubTN1LXRtZGItc3RvcCIpLAogICAgICAgICAgZGF0ZTogbmV3IERhdGUoKQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgc3luY1BsYXlsaXN0OiBmdW5jdGlvbiBzeW5jUGxheWxpc3QodmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLnJlc2V0UGxheWxpc3RJbnRlcnZhbCgxMCk7CiAgICAgICAgdGhpcy5wbGF5bGlzdFN5bmNTdGFydE5vdGlmeSgpOwogICAgICAgIHRoaXMuYWRkQWxlcnQoewogICAgICAgICAgaWNvbjogImxhLXN5bmMiLAogICAgICAgICAgdG86ICIvYXBwL3N0YXJ0L2Rhc2hib2FyZCIsCiAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCJtM3UubTN1LXN5bmMtc3RhcnQiKSwKICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKCkKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnJlc2V0UGxheWxpc3RJbnRlcnZhbCgzMCk7CiAgICAgICAgdGhpcy5wbGF5bGlzdFN5bmNFbmROb3RpZnkoKTsKICAgICAgICB0aGlzLmFkZEFsZXJ0KHsKICAgICAgICAgIGljb246ICJsYS1zeW5jIiwKICAgICAgICAgIHRvOiAiL2FwcC9zdGFydC9kYXNoYm9hcmQiLAogICAgICAgICAgdGV4dDogdGhpcy4kdCgibTN1Lm0zdS1zeW5jLXN0b3AiKSwKICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKCkKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGFwcFhtbHR2U3luYzogZnVuY3Rpb24gYXBwWG1sdHZTeW5jKHZhbCkgewogICAgICBpZiAodmFsKSB7CiAgICAgICAgdGhpcy5yZXNldEFwcFhtbHR2U3luY0ludGVydmFsKDEwKTsKICAgICAgICB0aGlzLnhtbHR2U3RhcnROb3RpZnkoKTsKICAgICAgICB0aGlzLmFkZEFsZXJ0KHsKICAgICAgICAgIGljb246ICJsYS1zeW5jIiwKICAgICAgICAgIHRvOiAiL2FwcC90b29scy94bWx0diIsCiAgICAgICAgICB0ZXh0OiB0aGlzLiR0KCJ4bWx0di5zeW5jLXN0YXJ0IiksCiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yZXNldEFwcFhtbHR2U3luY0ludGVydmFsKDMwKTsKICAgICAgICB0aGlzLnhtbHR2RW5kTm90aWZ5KCk7CiAgICAgICAgdGhpcy5hZGRBbGVydCh7CiAgICAgICAgICBpY29uOiAibGEtc3luYyIsCiAgICAgICAgICB0bzogIi9hcHAvdG9vbHMveG1sdHYiLAogICAgICAgICAgdGV4dDogdGhpcy4kdCgieG1sdHYuc3luYy1zdG9wIiksCiAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <app-layout>\n    <router-view />\n    <settings-menu></settings-menu>\n  </app-layout>\n</template>\n\n<script>\nimport AppLayout from \"../../layouts/AppLayout\";\nimport SettingsMenu from \"../../components/App/SettingsMenu\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    \"app-layout\": AppLayout,\n    \"settings-menu\": SettingsMenu,\n  },\n  data() {\n    return {\n      playlist: null,\n      tmdb: null,\n      xmltv: null,\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"syncTMDB\", \"syncPlaylist\", \"appXmltvSync\"]),\n    userHasValidSubscription() {\n      return this.currentUser.subscription !== null && (this.currentUser.subscription.end_date === null || new Date(this.currentUser.subscription.end_date).getTime() > new Date().getTime());\n    }\n  },\n  methods: {\n    ...mapActions([\n      \"getSyncTMDB\",\n      \"getSyncPlaylist\", \n      \"synchronizeTMDB\",\n      \"synchronizePlaylist\",\n      \"addAlert\",\n      \"getAppXmltvSync\",\n      \"loadMovieSeriePlaylists\",\n    ]),\n    tmdbSyncStartNotify() {\n      this.$notify(\n        \"info\",\n        this.$t(\"general.one-moment\"),\n        this.$t(\"m3u.m3u-tmdb-start\"),\n        \"la-sync\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    tmdbSyncEndNotify() {\n      this.$notify(\n        \"primary\",\n        this.$t(\"profile.success\"),\n        this.$t(\"m3u.m3u-tmdb-stop\"),\n        \"la-user-shield\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    playlistSyncStartNotify() {\n      this.$notify(\n        \"info\",\n        this.$t(\"general.one-moment\"),\n        this.$t(\"m3u.m3u-sync-start\"),\n        \"la-sync\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    playlistSyncEndNotify() {\n      this.$notify(\n        \"primary\",\n        this.$t(\"profile.success\"),\n        this.$t(\"m3u.m3u-sync-stop\"),\n        \"la-user-shield\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    xmltvStartNotify() {\n      this.$notify(\n        \"info\",\n        this.$t(\"general.one-moment\"),\n        this.$t(\"xmltv.sync-start\"),\n        \"la-sync\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    xmltvEndNotify() {\n      this.$notify(\n        \"primary\",\n        this.$t(\"profile.success\"),\n        this.$t(\"xmltv.sync-stop\"),\n        \"la-user-shield\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    resetTmdbInterval(interval) {\n      clearInterval(this.tmdb);\n      this.tmdb = setInterval(this.getSyncTMDB, interval * 1000);\n    },\n    resetPlaylistInterval(interval) {\n      clearInterval(this.playlist);\n      this.playlist = setInterval(this.getSyncPlaylist, interval * 1000);\n    },\n    resetAppXmltvSyncInterval(interval) {\n      clearInterval(this.xmltv);\n      this.xmltv = setInterval(this.getAppXmltvSync, interval * 1000);\n    },\n  },\n  created() {\n    this.loadMovieSeriePlaylists(true);\n    if (!this.userHasValidSubscription) {\n      this.$router.replace({ name: \"subscription\" });\n    }\n  },\n  beforeMount() {\n    if ([3, 4, 5].includes(this.currentUser.user.role)) {\n      this.getSyncTMDB();\n      this.getSyncPlaylist();\n      this.tmdb = setInterval(this.getSyncTMDB, 30 * 1000);\n      this.playlist = setInterval(this.getSyncPlaylist, 30 * 1000);\n    } else {\n      this.getAppXmltvSync();\n      this.xmltv = setInterval(this.getAppXmltvSync, 30 * 1000);\n    }\n  },\n  beforeDestroy() {\n    if ([3, 4, 5].includes(this.currentUser.user.role)) {\n      clearInterval(this.tmdb);\n      clearInterval(this.playlist);\n    } else {\n      clearInterval(this.xmltv);\n    }\n  },\n  watch: {\n    $route: function (val) {\n      if (!this.userHasValidSubscription && ![\"subscription\", \"profile\", \"invoices\", \"tickets\", \"faq\"].contains(val.name)) {\n        this.$router.replace({ name: \"subscription\" });\n      }\n      this.loadMovieSeriePlaylists(true);\n    },\n    syncTMDB: function (val) {\n      if (val) {\n        this.resetTmdbInterval(10);\n        this.tmdbSyncStartNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/start/dashboard\",\n          text: this.$t(\"m3u.m3u-tmdb-start\"),\n          date: new Date(),\n        });\n      } else {\n        this.resetTmdbInterval(30);\n        this.tmdbSyncEndNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/start/dashboard\",\n          text: this.$t(\"m3u.m3u-tmdb-stop\"),\n          date: new Date(),\n        });\n      }\n    },\n    syncPlaylist: function (val) {\n      if (val) {\n        this.resetPlaylistInterval(10);\n        this.playlistSyncStartNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/start/dashboard\",\n          text: this.$t(\"m3u.m3u-sync-start\"),\n          date: new Date(),\n        });\n      } else {\n        this.resetPlaylistInterval(30);\n        this.playlistSyncEndNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/start/dashboard\",\n          text: this.$t(\"m3u.m3u-sync-stop\"),\n          date: new Date(),\n        });\n      }\n    },\n    appXmltvSync: function (val) {\n      if (val) {\n        this.resetAppXmltvSyncInterval(10);\n        this.xmltvStartNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/tools/xmltv\",\n          text: this.$t(\"xmltv.sync-start\"),\n          date: new Date(),\n        });\n      } else {\n        this.resetAppXmltvSyncInterval(30);\n        this.xmltvEndNotify();\n        this.addAlert({\n          icon: \"la-sync\",\n          to: \"/app/tools/xmltv\",\n          text: this.$t(\"xmltv.sync-stop\"),\n          date: new Date(),\n        });\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/app"}]}