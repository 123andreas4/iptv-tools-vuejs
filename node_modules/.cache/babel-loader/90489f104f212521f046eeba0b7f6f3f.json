{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/services/http.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/services/http.js","mtime":1624959896951},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCB7IGF1dGhIZWFkZXIsIGZvcm1hdEhlYWRlciwgYWN0aXZlQVBJIH0gZnJvbSAiLi4vaGVscGVycyI7CmltcG9ydCB7IGlwR2VvQVBJS2V5IH0gZnJvbSAiLi4vY29uc3RhbnRzL2NvbmZpZyI7CmV4cG9ydCB2YXIgaHR0cFNlcnZpY2UgPSB7CiAgZ2V0OiBmdW5jdGlvbiBnZXQodXJsLCBoZWFkZXIpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgaGVhZGVyczogZm9ybWF0SGVhZGVyKGF1dGhIZWFkZXIoaGVhZGVyKSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiLyIpLmNvbmNhdCh1cmwpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBwdXQ6IGZ1bmN0aW9uIHB1dCh1cmwsIGRhdGEsIGhlYWRlcikgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJQVVQiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcihoZWFkZXIpKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiLyIpLmNvbmNhdCh1cmwpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBwb3N0OiBmdW5jdGlvbiBwb3N0KHVybCwgZGF0YSwgaGVhZGVyKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcihoZWFkZXIpKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiLyIpLmNvbmNhdCh1cmwpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBkZWxldGU6IGZ1bmN0aW9uIF9kZWxldGUodXJsLCBoZWFkZXIpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiREVMRVRFIiwKICAgICAgaGVhZGVyczogZm9ybWF0SGVhZGVyKGF1dGhIZWFkZXIoaGVhZGVyKSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiLyIpLmNvbmNhdCh1cmwpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBpcGdlbzogZnVuY3Rpb24gaXBnZW8oKSB7CiAgICByZXR1cm4gZmV0Y2goImh0dHBzOi8vYXBpLmlwZ2VvbG9jYXRpb24uaW8vaXBnZW8/YXBpS2V5PSIuY29uY2F0KGlwR2VvQVBJS2V5KSwgewogICAgICBtZXRob2Q6ICJHRVQiCiAgICB9KS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIGRvd25sb2FkOiBmdW5jdGlvbiBkb3dubG9hZCh1cmwpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgaGVhZGVyczogZm9ybWF0SGVhZGVyKGF1dGhIZWFkZXIoKSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiLyIpLmNvbmNhdCh1cmwpLCByZXF1ZXN0T3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmJsb2IoKTsKICAgIH0pOwogIH0sCiAgcG9zdEZpbGU6IGZ1bmN0aW9uIHBvc3RGaWxlKHVybCwgZm9ybURhdGEpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgeGhyLm9wZW4oIlBPU1QiLCAiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvIikuY29uY2F0KHVybCkpOwoKICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAodGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwKSB7CiAgICAgICAgICByZXNvbHZlKEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlamVjdCh7CiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsCiAgICAgICAgICAgIHN0YXR1c1RleHQ6IHhoci5zdGF0dXNUZXh0CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH07CgogICAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZWplY3QoewogICAgICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cywKICAgICAgICAgIHN0YXR1c1RleHQ6IHhoci5zdGF0dXNUZXh0CiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICB2YXIgdXNlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSk7CgogICAgICBpZiAodXNlciAmJiB1c2VyLnRva2VuKSB7CiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoIkF1dGhvcml6YXRpb24iLCAiQmVhcmVyICIgKyB1c2VyLnRva2VuKTsKICAgICAgfQoKICAgICAgeGhyLnNlbmQoZm9ybURhdGEpOwogICAgfSk7CiAgfQp9OwpleHBvcnQgdmFyIHVzZXJTZXJ2aWNlID0gewogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcigpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICB9KQogICAgfTsKICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYWN0aXZlQVBJKCksICIvdXNlcnMvYXV0aGVudGljYXRlIiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIC8vIGxvZ2luIHN1Y2Nlc3NmdWwgaWYgdGhlcmUncyBhIGp3dCB0b2tlbiBpbiB0aGUgcmVzcG9uc2UKICAgICAgaWYgKHVzZXIudG9rZW4pIHsKICAgICAgICAvLyBzdG9yZSB1c2VyIGRldGFpbHMgYW5kIGp3dCB0b2tlbiBpbiBsb2NhbCBzdG9yYWdlIHRvIGtlZXAgdXNlciBsb2dnZWQgaW4gYmV0d2VlbiBwYWdlIHJlZnJlc2hlcwogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyIiwgSlNPTi5zdHJpbmdpZnkodXNlcikpOwogICAgICB9CgogICAgICByZXR1cm4gdXNlcjsKICAgIH0pOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoYXV0aEhlYWRlcigpKSwKICAgICAgYm9keTogIiIKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL2xvZ291dCIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICBmb3Jnb3RQYXNzd29yZDogZnVuY3Rpb24gZm9yZ290UGFzc3dvcmQodXNlcm5hbWUsIGVtYWlsKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICBlbWFpbDogZW1haWwKICAgICAgfSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL2ZvcmdvdCIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7CiAgfSwKICByZXNldFBhc3N3b3JkOiBmdW5jdGlvbiByZXNldFBhc3N3b3JkKHVzZXJuYW1lLCBjb2RlLCBwYXNzd29yZCkgewogICAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgaGVhZGVyczogZm9ybWF0SGVhZGVyKCksCiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgY29kZTogY29kZSwKICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgfSkKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL3Jlc2V0IiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICBoZWFkZXJzOiBmb3JtYXRIZWFkZXIoKSwKICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXNlcikKICAgIH07CiAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGFjdGl2ZUFQSSgpLCAiL3VzZXJzL3JlZ2lzdGVyIiksIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKICB9LAogIGNoZWNrVXNlcm5hbWU6IGZ1bmN0aW9uIGNoZWNrVXNlcm5hbWUodXNlcm5hbWUpIHsKICAgIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgIGhlYWRlcnM6IGZvcm1hdEhlYWRlcigpLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lCiAgICAgIH0pCiAgICB9OwogICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChhY3RpdmVBUEkoKSwgIi91c2Vycy9hdmFpbGFibGUiKSwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oaGFuZGxlUmVzcG9uc2UpOwogIH0KfTsKCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICB2YXIgZGF0YSA9IHRleHQgJiYgSlNPTi5wYXJzZSh0ZXh0KTsKCiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgIC8vIGF1dG8gbG9nb3V0IGlmIDQwMSByZXNwb25zZSByZXR1cm5lZCBmcm9tIGFwaQogICAgICAgIGh0dHBTZXJ2aWNlLmxvZ291dCgpOwogICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTsKICAgICAgfQoKICAgICAgdmFyIGVycm9yID0gZGF0YSAmJiBkYXRhLm1lc3NhZ2UgfHwgcmVzcG9uc2Uuc3RhdHVzVGV4dDsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0KCiAgICByZXR1cm4gZGF0YTsKICB9KTsKfQ=="},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/services/http.js"],"names":["authHeader","formatHeader","activeAPI","ipGeoAPIKey","httpService","get","url","header","requestOptions","method","headers","fetch","then","handleResponse","put","data","body","JSON","stringify","post","delete","ipgeo","download","response","blob","postFile","formData","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","parse","statusText","onerror","user","localStorage","getItem","token","setRequestHeader","send","userService","login","username","password","setItem","logout","forgotPassword","email","resetPassword","code","register","checkUsername","text","ok","location","reload","error","message"],"mappings":"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","sourcesContent":["import { authHeader, formatHeader, activeAPI } from \"../helpers\";\nimport { ipGeoAPIKey } from \"../constants/config\";\n\nexport const httpService = {\n  get(url, header) {\n    const requestOptions = {\n      method: \"GET\",\n      headers: formatHeader(authHeader(header)),\n    };\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  put(url, data, header) {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: formatHeader(authHeader(header)),\n      body: JSON.stringify(data),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  post(url, data, header) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(authHeader(header)),\n      body: JSON.stringify(data),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  delete(url, header) {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: formatHeader(authHeader(header)),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions).then(handleResponse);\n  },\n  ipgeo() {\n    return fetch(`https://api.ipgeolocation.io/ipgeo?apiKey=${ipGeoAPIKey}`, {\n      method: \"GET\",\n    }).then(handleResponse);\n  },\n  download(url) {\n    const requestOptions = {\n      method: \"GET\",\n      headers: formatHeader(authHeader()),\n    };\n\n    return fetch(`${activeAPI()}/${url}`, requestOptions)\n      .then(response => response.blob())\n  },\n  postFile(url, formData) {\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", `${activeAPI()}/${url}`);\n      xhr.onload = function () {\n        if (this.status >= 200 && this.status < 300) {\n          resolve(JSON.parse(xhr.response));\n        } else {\n          reject({\n            status: this.status,\n            statusText: xhr.statusText\n          });\n        }\n      };\n      xhr.onerror = function () {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      };\n      let user = JSON.parse(localStorage.getItem(\"user\"));\n      if (user && user.token) { \n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + user.token);\n      }\n      xhr.send(formData);\n    });\n  }\n};\n\nexport const userService = {\n  login(username, password) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/authenticate`, requestOptions)\n      .then(handleResponse)\n      .then((user) => {\n        // login successful if there's a jwt token in the response\n        if (user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem(\"user\", JSON.stringify(user));\n        }\n\n        return user;\n      });\n  },\n  logout() {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(authHeader()),\n      body: \"\",\n    };\n\n    return fetch(`${activeAPI()}/users/logout`, requestOptions).then(\n      handleResponse\n    );\n  },\n  forgotPassword(username, email) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        email: email,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/forgot`, requestOptions).then(\n      handleResponse\n    );\n  },\n  resetPassword(username, code, password) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n        code: code,\n        password: password,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/reset`, requestOptions).then(\n      handleResponse\n    );\n  },\n  register(user) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify(user),\n    };\n\n    return fetch(`${activeAPI()}/users/register`, requestOptions).then(\n      handleResponse\n    );\n  },\n  checkUsername(username) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: formatHeader(),\n      body: JSON.stringify({\n        username: username,\n      }),\n    };\n\n    return fetch(`${activeAPI()}/users/available`, requestOptions).then(\n      handleResponse\n    );\n  },\n};\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        httpService.logout();\n        location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}"]}]}