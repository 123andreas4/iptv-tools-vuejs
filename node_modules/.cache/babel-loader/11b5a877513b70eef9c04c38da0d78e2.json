{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/app-sources/xmltv.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/app-sources/xmltv.vue","mtime":1623418003669},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["xmltv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" v-if=\"!editor\" id=\"xmltv\">\n      <b-table :items=\"paged\" :fields=\"fields\" striped small>\n        <template v-slot:cell(created)=\"row\">\n          {{ formatDate(row.item.created) }}\n        </template>\n        <template v-slot:cell(last_updated)=\"row\">\n          {{ formatDate(row.item.last_updated) }}\n        </template>\n        <template v-slot:cell(format)=\"row\">\n          {{ $t(`xmltv-formats.${row.item.format}`) }}\n        </template>\n        <template v-slot:cell(url)=\"row\">\n          <a :href=\"row.item.url\" target=\"_blank\">{{ row.item.url }}</a>\n        </template>\n        <template v-slot:cell(country)=\"row\">\n          {{ countryText(row.item.country) }}\n        </template>\n        <template v-slot:cell(sync_interval)=\"row\">\n          {{ $t(`sync-interval.${row.item.sync_interval}`) }}\n        </template>\n        <template v-slot:cell(synced_at)=\"row\">\n          {{\n            row.item.synced_at && row.item.synced_at !== \"0000-00-00 00:00:00\"\n              ? formatDate(row.item.synced_at)\n              : $t(\"general.not-available\")\n          }}\n        </template>\n        <template v-slot:cell(actions)=\"row\">\n          <erd-button\n            variant=\"info\"\n            class=\"btn-table\"\n            :disabled=\"appXmltvSync\"\n            @click=\"syncXmltv(row.item.id)\"\n            ><i class=\"las la-sync\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"primary\"\n            class=\"btn-table\"\n            @click=\"editXmltv(row.item)\"\n            ><i class=\"las la-pen\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"danger\"\n            class=\"btn-table\"\n            @click=\"deleteUser(row.item.id)\"\n            ><i class=\"las la-trash\"></i\n          ></erd-button>\n        </template>\n      </b-table>\n      <b-pagination\n        class=\"w-100 my-3\"\n        size=\"sm\"\n        align=\"center\"\n        :total-rows=\"total\"\n        :per-page=\"perPage\"\n        v-model=\"currentPage\"\n      >\n        <template v-slot:next-text>\n          <i class=\"las la-angle-right\" />\n        </template>\n        <template v-slot:prev-text>\n          <i class=\"las la-angle-left\" />\n        </template>\n        <template v-slot:first-text>\n          <i class=\"las la-angle-double-left\" />\n        </template>\n        <template v-slot:last-text>\n          <i class=\"las la-angle-double-right\" />\n        </template>\n      </b-pagination>\n    </erd-col>\n    <erd-col xl=\"12\" v-if=\"editor\">\n      <label for=\"title\">{{ $t(\"xmltv.title\") }}</label>\n      <erd-input\n        id=\"title\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('xmltv.title')\"\n        v-model=\"editorXmltv.title\"\n      ></erd-input>\n      <label for=\"country\">{{ $t(\"xmltv.country\") }}</label>\n      <erd-select\n        id=\"country\"\n        :items=\"countries\"\n        class=\"w-100 mt-1 mb-2\"\n        v-model=\"editorXmltv.country\"\n      ></erd-select>\n      <label for=\"url\">{{ $t(\"xmltv.url\") }}</label>\n      <erd-input\n        id=\"url\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('xmltv.url')\"\n        v-model=\"editorXmltv.url\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"format\">{{ $t(\"xmltv.format\") }}</label>\n      <erd-select\n        id=\"format\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"editorXmltv.format\"\n        ref=\"xmltv-format\"\n        :items=\"xmltvFormats\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"sync-interval\">{{\n        $t(\"xmltv.sync-interval\")\n      }}</label>\n      <erd-select\n        id=\"sync-interval\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"editorXmltv.sync_interval\"\n        :items=\"syncIntervals\"\n      ></erd-select>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      search: null,\n      isLoading: false,\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 1,\n      editor: false,\n      editorXmltv: null,\n      xmltv: [],\n      fields: [\n        { key: \"id\", label: this.$t(\"xmltv.id\"), sortable: true },\n        {\n          key: \"created\",\n          label: this.$t(\"xmltv.created\"), \n          sortable: true,\n        },\n        {\n          key: \"last_updated\",\n          label: this.$t(\"xmltv.last-updated\"),\n          sortable: true,\n        },\n        { key: \"title\", label: this.$t(\"xmltv.title\"), sortable: true },\n        { key: \"country\", label: this.$t(\"xmltv.country\"), sortable: true },\n        { key: \"url\", label: this.$t(\"xmltv.url\"), sortable: true },\n        { key: \"format\", label: this.$t(\"xmltv.format\"), sortable: true },\n        {\n          key: \"sync_interval\",\n          label: this.$t(\"xmltv.sync-interval\"),\n          sortable: true,\n        },\n        { key: \"synced_at\", label: this.$t(\"xmltv.synced-at\"), sortable: true },\n        { key: \"stations\", label: this.$t(\"xmltv.stations\"), sortable: true },\n        {\n          key: \"actions\",\n          label: this.$t(\"users.actions\"),\n          sortable: false,\n          thClass: \"text-right\",\n          tdClass: \"text-right\",\n        },\n      ],\n      syncIntervals: [\n        { text: this.$t(\"sync-interval.48\"), value: 48 },\n        { text: this.$t(\"sync-interval.24\"), value: 24 },\n        { text: this.$t(\"sync-interval.12\"), value: 12 },\n        { text: this.$t(\"sync-interval.6\"), value: 6 },\n        { text: this.$t(\"sync-interval.1\"), value: 1 },\n      ],\n      xmltvFormats: [\n        { text: this.$t(\"xmltv-formats.1\"), value: 1 },\n        { text: this.$t(\"xmltv-formats.2\"), value: 2 },\n        { text: this.$t(\"xmltv-formats.3\"), value: 3 },\n        { text: this.$t(\"xmltv-formats.4\"), value: 4 },\n      ],\n      countries: [\n        { text: \"Afghanistan\", value: \"AF\" },\n        { text: \"Åland Islands\", value: \"AX\" },\n        { text: \"Albania\", value: \"AL\" },\n        { text: \"Algeria\", value: \"DZ\" },\n        { text: \"American Samoa\", value: \"AS\" },\n        { text: \"AndorrA\", value: \"AD\" },\n        { text: \"Angola\", value: \"AO\" },\n        { text: \"Anguilla\", value: \"AI\" },\n        { text: \"Antarctica\", value: \"AQ\" },\n        { text: \"Antigua and Barbuda\", value: \"AG\" },\n        { text: \"Argentina\", value: \"AR\" },\n        { text: \"Armenia\", value: \"AM\" },\n        { text: \"Aruba\", value: \"AW\" },\n        { text: \"Australia\", value: \"AU\" },\n        { text: \"Austria\", value: \"AT\" },\n        { text: \"Azerbaijan\", value: \"AZ\" },\n        { text: \"Bahamas\", value: \"BS\" },\n        { text: \"Bahrain\", value: \"BH\" },\n        { text: \"Bangladesh\", value: \"BD\" },\n        { text: \"Barbados\", value: \"BB\" },\n        { text: \"Belarus\", value: \"BY\" },\n        { text: \"Belgium\", value: \"BE\" },\n        { text: \"Belize\", value: \"BZ\" },\n        { text: \"Benin\", value: \"BJ\" },\n        { text: \"Bermuda\", value: \"BM\" },\n        { text: \"Bhutan\", value: \"BT\" },\n        { text: \"Bolivia\", value: \"BO\" },\n        { text: \"Bosnia and Herzegovina\", value: \"BA\" },\n        { text: \"Botswana\", value: \"BW\" },\n        { text: \"Bouvet Island\", value: \"BV\" },\n        { text: \"Brazil\", value: \"BR\" },\n        { text: \"British Indian Ocean Territory\", value: \"IO\" },\n        { text: \"Brunei Darussalam\", value: \"BN\" },\n        { text: \"Bulgaria\", value: \"BG\" },\n        { text: \"Burkina Faso\", value: \"BF\" },\n        { text: \"Burundi\", value: \"BI\" },\n        { text: \"Cambodia\", value: \"KH\" },\n        { text: \"Cameroon\", value: \"CM\" },\n        { text: \"Canada\", value: \"CA\" },\n        { text: \"Cape Verde\", value: \"CV\" },\n        { text: \"Cayman Islands\", value: \"KY\" },\n        { text: \"Central African Republic\", value: \"CF\" },\n        { text: \"Chad\", value: \"TD\" },\n        { text: \"Chile\", value: \"CL\" },\n        { text: \"China\", value: \"CN\" },\n        { text: \"Christmas Island\", value: \"CX\" },\n        { text: \"Cocos (Keeling) Islands\", value: \"CC\" },\n        { text: \"Colombia\", value: \"CO\" },\n        { text: \"Comoros\", value: \"KM\" },\n        { text: \"Congo\", value: \"CG\" },\n        { text: \"Congo, The Democratic Republic of the\", value: \"CD\" },\n        { text: \"Cook Islands\", value: \"CK\" },\n        { text: \"Costa Rica\", value: \"CR\" },\n        { text: \"Cote D'Ivoire\", value: \"CI\" },\n        { text: \"Croatia\", value: \"HR\" },\n        { text: \"Cuba\", value: \"CU\" },\n        { text: \"Cyprus\", value: \"CY\" },\n        { text: \"Czech Republic\", value: \"CZ\" },\n        { text: \"Denmark\", value: \"DK\" },\n        { text: \"Djibouti\", value: \"DJ\" },\n        { text: \"Dominica\", value: \"DM\" },\n        { text: \"Dominican Republic\", value: \"DO\" },\n        { text: \"Ecuador\", value: \"EC\" },\n        { text: \"Egypt\", value: \"EG\" },\n        { text: \"El Salvador\", value: \"SV\" },\n        { text: \"Equatorial Guinea\", value: \"GQ\" },\n        { text: \"Eritrea\", value: \"ER\" },\n        { text: \"Estonia\", value: \"EE\" },\n        { text: \"Ethiopia\", value: \"ET\" },\n        { text: \"Falkland Islands (Malvinas)\", value: \"FK\" },\n        { text: \"Faroe Islands\", value: \"FO\" },\n        { text: \"Fiji\", value: \"FJ\" },\n        { text: \"Finland\", value: \"FI\" },\n        { text: \"France\", value: \"FR\" },\n        { text: \"French Guiana\", value: \"GF\" },\n        { text: \"French Polynesia\", value: \"PF\" },\n        { text: \"French Southern Territories\", value: \"TF\" },\n        { text: \"Gabon\", value: \"GA\" },\n        { text: \"Gambia\", value: \"GM\" },\n        { text: \"Georgia\", value: \"GE\" },\n        { text: \"Germany\", value: \"DE\" },\n        { text: \"Ghana\", value: \"GH\" },\n        { text: \"Gibraltar\", value: \"GI\" },\n        { text: \"Greece\", value: \"GR\" },\n        { text: \"Greenland\", value: \"GL\" },\n        { text: \"Grenada\", value: \"GD\" },\n        { text: \"Guadeloupe\", value: \"GP\" },\n        { text: \"Guam\", value: \"GU\" },\n        { text: \"Guatemala\", value: \"GT\" },\n        { text: \"Guernsey\", value: \"GG\" },\n        { text: \"Guinea\", value: \"GN\" },\n        { text: \"Guinea-Bissau\", value: \"GW\" },\n        { text: \"Guyana\", value: \"GY\" },\n        { text: \"Haiti\", value: \"HT\" },\n        { text: \"Heard Island and Mcdonald Islands\", value: \"HM\" },\n        { text: \"Holy See (Vatican City State)\", value: \"VA\" },\n        { text: \"Honduras\", value: \"HN\" },\n        { text: \"Hong Kong\", value: \"HK\" },\n        { text: \"Hungary\", value: \"HU\" },\n        { text: \"Iceland\", value: \"IS\" },\n        { text: \"India\", value: \"IN\" },\n        { text: \"Indonesia\", value: \"ID\" },\n        { text: \"Iran, Islamic Republic Of\", value: \"IR\" },\n        { text: \"Iraq\", value: \"IQ\" },\n        { text: \"Ireland\", value: \"IE\" },\n        { text: \"Isle of Man\", value: \"IM\" },\n        { text: \"Israel\", value: \"IL\" },\n        { text: \"Italy\", value: \"IT\" },\n        { text: \"Jamaica\", value: \"JM\" },\n        { text: \"Japan\", value: \"JP\" },\n        { text: \"Jersey\", value: \"JE\" },\n        { text: \"Jordan\", value: \"JO\" },\n        { text: \"Kazakhstan\", value: \"KZ\" },\n        { text: \"Kenya\", value: \"KE\" },\n        { text: \"Kiribati\", value: \"KI\" },\n        { text: \"Korea, Democratic People'S Republic of\", value: \"KP\" },\n        { text: \"Korea, Republic of\", value: \"KR\" },\n        { text: \"Kuwait\", value: \"KW\" },\n        { text: \"Kyrgyzstan\", value: \"KG\" },\n        { text: \"Lao People'S Democratic Republic\", value: \"LA\" },\n        { text: \"Latvia\", value: \"LV\" },\n        { text: \"Lebanon\", value: \"LB\" },\n        { text: \"Lesotho\", value: \"LS\" },\n        { text: \"Liberia\", value: \"LR\" },\n        { text: \"Libyan Arab Jamahiriya\", value: \"LY\" },\n        { text: \"Liechtenstein\", value: \"LI\" },\n        { text: \"Lithuania\", value: \"LT\" },\n        { text: \"Luxembourg\", value: \"LU\" },\n        { text: \"Macao\", value: \"MO\" },\n        { text: \"Macedonia, The Former Yugoslav Republic of\", value: \"MK\" },\n        { text: \"Madagascar\", value: \"MG\" },\n        { text: \"Malawi\", value: \"MW\" },\n        { text: \"Malaysia\", value: \"MY\" },\n        { text: \"Maldives\", value: \"MV\" },\n        { text: \"Mali\", value: \"ML\" },\n        { text: \"Malta\", value: \"MT\" },\n        { text: \"Marshall Islands\", value: \"MH\" },\n        { text: \"Martinique\", value: \"MQ\" },\n        { text: \"Mauritania\", value: \"MR\" },\n        { text: \"Mauritius\", value: \"MU\" },\n        { text: \"Mayotte\", value: \"YT\" },\n        { text: \"Mexico\", value: \"MX\" },\n        { text: \"Micronesia, Federated States of\", value: \"FM\" },\n        { text: \"Moldova, Republic of\", value: \"MD\" },\n        { text: \"Monaco\", value: \"MC\" },\n        { text: \"Mongolia\", value: \"MN\" },\n        { text: \"Montserrat\", value: \"MS\" },\n        { text: \"Morocco\", value: \"MA\" },\n        { text: \"Mozambique\", value: \"MZ\" },\n        { text: \"Myanmar\", value: \"MM\" },\n        { text: \"Namibia\", value: \"NA\" },\n        { text: \"Nauru\", value: \"NR\" },\n        { text: \"Nepal\", value: \"NP\" },\n        { text: \"Netherlands\", value: \"NL\" },\n        { text: \"Netherlands Antilles\", value: \"AN\" },\n        { text: \"New Caledonia\", value: \"NC\" },\n        { text: \"New Zealand\", value: \"NZ\" },\n        { text: \"Nicaragua\", value: \"NI\" },\n        { text: \"Niger\", value: \"NE\" },\n        { text: \"Nigeria\", value: \"NG\" },\n        { text: \"Niue\", value: \"NU\" },\n        { text: \"Norfolk Island\", value: \"NF\" },\n        { text: \"Northern Mariana Islands\", value: \"MP\" },\n        { text: \"Norway\", value: \"NO\" },\n        { text: \"Oman\", value: \"OM\" },\n        { text: \"Pakistan\", value: \"PK\" },\n        { text: \"Palau\", value: \"PW\" },\n        { text: \"Palestinian Territory, Occupied\", value: \"PS\" },\n        { text: \"Panama\", value: \"PA\" },\n        { text: \"Papua New Guinea\", value: \"PG\" },\n        { text: \"Paraguay\", value: \"PY\" },\n        { text: \"Peru\", value: \"PE\" },\n        { text: \"Philippines\", value: \"PH\" },\n        { text: \"Pitcairn\", value: \"PN\" },\n        { text: \"Poland\", value: \"PL\" },\n        { text: \"Portugal\", value: \"PT\" },\n        { text: \"Puerto Rico\", value: \"PR\" },\n        { text: \"Qatar\", value: \"QA\" },\n        { text: \"Reunion\", value: \"RE\" },\n        { text: \"Romania\", value: \"RO\" },\n        { text: \"Russian Federation\", value: \"RU\" },\n        { text: \"RWANDA\", value: \"RW\" },\n        { text: \"Saint Helena\", value: \"SH\" },\n        { text: \"Saint Kitts and Nevis\", value: \"KN\" },\n        { text: \"Saint Lucia\", value: \"LC\" },\n        { text: \"Saint Pierre and Miquelon\", value: \"PM\" },\n        { text: \"Saint Vincent and the Grenadines\", value: \"VC\" },\n        { text: \"Samoa\", value: \"WS\" },\n        { text: \"San Marino\", value: \"SM\" },\n        { text: \"Sao Tome and Principe\", value: \"ST\" },\n        { text: \"Saudi Arabia\", value: \"SA\" },\n        { text: \"Senegal\", value: \"SN\" },\n        { text: \"Serbia and Montenegro\", value: \"CS\" },\n        { text: \"Seychelles\", value: \"SC\" },\n        { text: \"Sierra Leone\", value: \"SL\" },\n        { text: \"Singapore\", value: \"SG\" },\n        { text: \"Slovakia\", value: \"SK\" },\n        { text: \"Slovenia\", value: \"SI\" },\n        { text: \"Solomon Islands\", value: \"SB\" },\n        { text: \"Somalia\", value: \"SO\" },\n        { text: \"South Africa\", value: \"ZA\" },\n        { text: \"South Georgia and the South Sandwich Islands\", value: \"GS\" },\n        { text: \"Spain\", value: \"ES\" },\n        { text: \"Sri Lanka\", value: \"LK\" },\n        { text: \"Sudan\", value: \"SD\" },\n        { text: \"Suriname\", value: \"SR\" },\n        { text: \"Svalbard and Jan Mayen\", value: \"SJ\" },\n        { text: \"Swaziland\", value: \"SZ\" },\n        { text: \"Sweden\", value: \"SE\" },\n        { text: \"Switzerland\", value: \"CH\" },\n        { text: \"Syrian Arab Republic\", value: \"SY\" },\n        { text: \"Taiwan, Province of China\", value: \"TW\" },\n        { text: \"Tajikistan\", value: \"TJ\" },\n        { text: \"Tanzania, United Republic of\", value: \"TZ\" },\n        { text: \"Thailand\", value: \"TH\" },\n        { text: \"Timor-Leste\", value: \"TL\" },\n        { text: \"Togo\", value: \"TG\" },\n        { text: \"Tokelau\", value: \"TK\" },\n        { text: \"Tonga\", value: \"TO\" },\n        { text: \"Trinidad and Tobago\", value: \"TT\" },\n        { text: \"Tunisia\", value: \"TN\" },\n        { text: \"Turkey\", value: \"TR\" },\n        { text: \"Turkmenistan\", value: \"TM\" },\n        { text: \"Turks and Caicos Islands\", value: \"TC\" },\n        { text: \"Tuvalu\", value: \"TV\" },\n        { text: \"Uganda\", value: \"UG\" },\n        { text: \"Ukraine\", value: \"UA\" },\n        { text: \"United Arab Emirates\", value: \"AE\" },\n        { text: \"United Kingdom\", value: \"GB\" },\n        { text: \"United States\", value: \"US\" },\n        { text: \"United States Minor Outlying Islands\", value: \"UM\" },\n        { text: \"Uruguay\", value: \"UY\" },\n        { text: \"Uzbekistan\", value: \"UZ\" },\n        { text: \"Vanuatu\", value: \"VU\" },\n        { text: \"Venezuela\", value: \"VE\" },\n        { text: \"Viet Nam\", value: \"VN\" },\n        { text: \"Virgin Islands, British\", value: \"VG\" },\n        { text: \"Virgin Islands, U.S.\", value: \"VI\" },\n        { text: \"Wallis and Futuna\", value: \"WF\" },\n        { text: \"Western Sahara\", value: \"EH\" },\n        { text: \"Yemen\", value: \"YE\" },\n        { text: \"Zambia\", value: \"ZM\" },\n        { text: \"Zimbabwe\", value: \"ZW\" },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"appXmltvSync\"]),\n    perPage() {\n      return this.settings.perPage;\n    },\n    searchFiltered() {\n      if (this.search === null) {\n        return this.xmltv;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.xmltv.filter((xmltv) => {\n          return (\n            String(xmltv.title).match(re) ||\n            String(xmltv.country).match(re) ||\n            String(xmltv.notes).match(re) ||\n            String(xmltv.error).match(re) ||\n            String(this.countryText(xmltv.country)).match(re) ||\n            this.formatDate(xmltv.created).match(re) ||\n            this.formatDate(xmltv.last_updated).match(re) ||\n            this.formatDate(xmltv.synced_at).match(re)\n          );\n        });\n      }\n    },\n    paged() {\n      this.total = this.searchFiltered.length;\n      this.from = (this.currentPage - 1) * this.perPage;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.searchFiltered.slice(this.from, this.to);\n    },\n  },\n  methods: {\n    ...mapActions([\"syncXmltv\"]),\n    countryText(country) {\n      let c = this.countries.find((c) => {\n        return c.value === country;\n      });\n      return c ? c.text : \"-\";\n    },\n    updatePerPage(perPage) {\n      this.perPage = perPage;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadXmltv() {\n      this.isLoading = true;\n      httpService\n        .get(\"administration/xmltv\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.xmltv = res.data;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xmltv.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    editXmltv(xmltv) {\n      this.editorXmltv = Object.assign({}, xmltv);\n      this.editor = true;\n    },\n    addXmltv() {\n      this.editorXmltv = {\n        title: \"\",\n        country: \"NL\",\n        url: \"\",\n        format: 1,\n        sync_interval: 24,\n      };\n      this.editor = true;\n    },\n    saveUser() {\n      this.editor = false;\n      let xmltv = Object.assign({}, this.editorXmltv);\n      if (xmltv.id !== undefined) {\n        delete xmltv.id;\n        httpService\n          .post(\"administration/xmltv/update\", {\n            id: this.editorXmltv.id,\n            xmltv: xmltv,\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xmltv.save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n              this.loadXmltv();\n              this.editor = false;\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xmltv.save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      } else {\n        httpService\n          .post(\"administration/xmltv/insert\", xmltv)\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xmltv.save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n              this.loadXmltv();\n              this.editor = false;\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xmltv.save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n    deleteUser(id) {\n      httpService\n        .post(\"administration/xmltv/delete\", { id: id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xmltv.delete-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadXmltv();\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xmltv.delete-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    cancelXmltv() {\n      this.editor = false;\n    },\n    searchXmltv(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printUsers() {\n      document.getElementById(\"xmltv\").print();\n    },\n  },\n  beforeMount() {\n    this.loadXmltv();\n    EventBus.$on(\"refresh\", this.loadXmltv);\n    EventBus.$on(\"save\", this.saveUser);\n    EventBus.$on(\"cancel\", this.cancelXmltv);\n    EventBus.$on(\"search\", this.searchXmltv);\n    EventBus.$on(\"print\", this.printUsers);\n    EventBus.$on(\"add\", this.addXmltv);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"refresh\", this.loadXmltv);\n    EventBus.$off(\"save\", this.saveUser);\n    EventBus.$off(\"cancel\", this.cancelXmltv);\n    EventBus.$off(\"search\", this.searchXmltv);\n    EventBus.$off(\"print\", this.printUsers);\n    EventBus.$off(\"add\", this.addXmltv);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    editor: function (val) {\n      EventBus.$emit(\"update-editor\", val);\n    },\n    appXmltvSync: function () {\n      this.loadXmltv();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/app/app-sources"}]}