{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Form/ERDTagInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Form/ERDTagInput.vue","mtime":1619864404286},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL21lZGlhL2VybnN0LzYzYmNlNDNjLTVlNTEtNGJmMS1hNjExLTNhZmRmMzJhYzZmNi9WdWVKUy9JUFRWLVRvb2xzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9tZWRpYS9lcm5zdC82M2JjZTQzYy01ZTUxLTRiZjEtYTYxMS0zYWZkZjMyYWM2ZjYvVnVlSlMvSVBUVi1Ub29scy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovKiBlc2xpbnQtZGlzYWJsZSAqLwp2YXIgdmFsaWRhdG9ycyA9IHsKICBlbWFpbDogbmV3IFJlZ0V4cCgvXigoW148PigpW1xdXFwuLDs6XHNAXCJdKyhcLltePD4oKVtcXVxcLiw7OlxzQFwiXSspKil8KFwiLitcIikpQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XF0pfCgoW2EtekEtWlwtMC05XStcLikrW2EtekEtWl17Mix9KSkkLyksCiAgdXJsOiBuZXcgUmVnRXhwKC9eKGh0dHBzP3xmdHB8cm10cHxtbXMpOlwvXC8oKFtBLVowLTldW0EtWjAtOV8tXSopKFwuW0EtWjAtOV1bQS1aMC05Xy1dKikrKSg6KFxkKykpP1wvPy9pKSwKICB0ZXh0OiBuZXcgUmVnRXhwKC9eW2EtekEtWl0rJC8pLAogIGRpZ2l0czogbmV3IFJlZ0V4cCgvXltcZCgpIFwuXDpcLVwrI10rJC8pLAogIGlzb2RhdGU6IG5ldyBSZWdFeHAoL15cZHs0fVtcL1wtXSgwP1sxLTldfDFbMDEyXSlbXC9cLV0oMD9bMS05XXxbMTJdWzAtOV18M1swMV0pJC8pCn07Ci8qIGVzbGludC1lbmFibGUgKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIKICAgIH0sCiAgICByZWFkT25seTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHZhbGlkYXRlOiB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2dWUvcmVxdWlyZS1wcm9wLXR5cGUtY29uc3RydWN0b3IKICAgICAgdHlwZTogU3RyaW5nIHwgRnVuY3Rpb24gfCBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9LAogICAgYWRkVGFnT25LZXlzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gWzEzLCAvLyBSZXR1cm4KICAgICAgICAxODgsIC8vIENvbW1hICcsJwogICAgICAgIDkgLy8gVGFiCiAgICAgICAgXTsKICAgICAgfQogICAgfSwKICAgIGFkZFRhZ09uQmx1cjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGxpbWl0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogLTEKICAgIH0sCiAgICBhbGxvd0R1cGxpY2F0ZXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZXdUYWc6ICIiLAogICAgICBpbm5lclRhZ3M6IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnZhbHVlKSwKICAgICAgaXNJbnB1dEFjdGl2ZTogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXNMaW1pdDogZnVuY3Rpb24gaXNMaW1pdCgpIHsKICAgICAgcmV0dXJuIHRoaXMubGltaXQgPiAwICYmIE51bWJlcih0aGlzLmxpbWl0KSA9PT0gdGhpcy5pbm5lclRhZ3MubGVuZ3RoOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZm9jdXNOZXdUYWc6IGZ1bmN0aW9uIGZvY3VzTmV3VGFnKCkgewogICAgICBpZiAodGhpcy5yZWFkT25seSB8fCAhdGhpcy4kZWwucXVlcnlTZWxlY3RvcigiLmVyZC10YWdzLWlucHV0LWlucHV0IikpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoIi5lcmQtdGFncy1pbnB1dC1pbnB1dCIpLmZvY3VzKCk7CiAgICB9LAogICAgaGFuZGxlSW5wdXRGb2N1czogZnVuY3Rpb24gaGFuZGxlSW5wdXRGb2N1cygpIHsKICAgICAgdGhpcy5pc0lucHV0QWN0aXZlID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVJbnB1dEJsdXI6IGZ1bmN0aW9uIGhhbmRsZUlucHV0Qmx1cihlKSB7CiAgICAgIHRoaXMuaXNJbnB1dEFjdGl2ZSA9IGZhbHNlOwogICAgICB0aGlzLmFkZE5ldyhlKTsKICAgIH0sCiAgICBhZGROZXc6IGZ1bmN0aW9uIGFkZE5ldyhlKSB7CiAgICAgIHZhciBrZXlTaG91bGRBZGRUYWcgPSBlID8gdGhpcy5hZGRUYWdPbktleXMuaW5kZXhPZihlLmtleUNvZGUpICE9PSAtMSA6IHRydWU7CiAgICAgIHZhciB0eXBlSXNOb3RCbHVyID0gZSAmJiBlLnR5cGUgIT09ICJibHVyIjsKCiAgICAgIGlmICgha2V5U2hvdWxkQWRkVGFnICYmICh0eXBlSXNOb3RCbHVyIHx8ICF0aGlzLmFkZFRhZ09uQmx1cikgfHwgdGhpcy5pc0xpbWl0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5uZXdUYWcgJiYgKHRoaXMuYWxsb3dEdXBsaWNhdGVzIHx8IHRoaXMuaW5uZXJUYWdzLmluZGV4T2YodGhpcy5uZXdUYWcpID09PSAtMSkgJiYgdGhpcy52YWxpZGF0ZUlmTmVlZGVkKHRoaXMubmV3VGFnKSkgewogICAgICAgIHRoaXMuaW5uZXJUYWdzLnB1c2godGhpcy5uZXdUYWcpOwogICAgICAgIHRoaXMubmV3VGFnID0gIiI7CiAgICAgICAgdGhpcy50YWdDaGFuZ2UoKTsKICAgICAgICBlICYmIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRlSWZOZWVkZWQ6IGZ1bmN0aW9uIHZhbGlkYXRlSWZOZWVkZWQodGFnVmFsdWUpIHsKICAgICAgaWYgKHRoaXMudmFsaWRhdGUgPT09ICIiIHx8IHRoaXMudmFsaWRhdGUgPT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIHRoaXMudmFsaWRhdGUgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZSh0YWdWYWx1ZSk7CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgdGhpcy52YWxpZGF0ZSA9PT0gInN0cmluZyIgJiYgT2JqZWN0LmtleXModmFsaWRhdG9ycykuaW5kZXhPZih0aGlzLnZhbGlkYXRlKSA+IC0xKSB7CiAgICAgICAgcmV0dXJuIHZhbGlkYXRvcnNbdGhpcy52YWxpZGF0ZV0udGVzdCh0YWdWYWx1ZSk7CiAgICAgIH0KCiAgICAgIGlmIChfdHlwZW9mKHRoaXMudmFsaWRhdGUpID09PSAib2JqZWN0IiAmJiB0aGlzLnZhbGlkYXRlLnRlc3QgIT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRlLnRlc3QodGFnVmFsdWUpOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShpbmRleCkgewogICAgICB0aGlzLmlubmVyVGFncy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB0aGlzLnRhZ0NoYW5nZSgpOwogICAgfSwKICAgIHJlbW92ZUxhc3RUYWc6IGZ1bmN0aW9uIHJlbW92ZUxhc3RUYWcoKSB7CiAgICAgIGlmICh0aGlzLm5ld1RhZykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5pbm5lclRhZ3MucG9wKCk7CiAgICAgIHRoaXMudGFnQ2hhbmdlKCk7CiAgICB9LAogICAgdGFnQ2hhbmdlOiBmdW5jdGlvbiB0YWdDaGFuZ2UoKSB7CiAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZTp0YWdzIiwgdGhpcy5pbm5lclRhZ3MpOwogICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMuaW5uZXJUYWdzKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ERDTagInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA,IAAA,UAAA,GAAA;AACA,EAAA,KAAA,EAAA,IAAA,MAAA,CACA,2JADA,CADA;AAIA,EAAA,GAAA,EAAA,IAAA,MAAA,CACA,yFADA,CAJA;AAOA,EAAA,IAAA,EAAA,IAAA,MAAA,CAAA,aAAA,CAPA;AAQA,EAAA,MAAA,EAAA,IAAA,MAAA,CAAA,qBAAA,CARA;AASA,EAAA,OAAA,EAAA,IAAA,MAAA,CACA,8DADA;AATA,CAAA;AAaA;;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA;AACA,MAAA,IAAA,EAAA,MAAA,GAAA,QAAA,GAAA,MAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAbA;AAkBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CACA,EADA,EACA;AACA,WAFA,EAEA;AACA,SAHA,CAGA;AAHA,SAAA;AAKA;AARA,KAlBA;AA4BA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5BA;AAgCA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,CAAA;AAFA,KAhCA;AAoCA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AApCA,GADA;AA0CA,EAAA,IA1CA,kBA0CA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,SAAA,qBAAA,KAAA,KAAA,CAFA;AAGA,MAAA,aAAA,EAAA;AAHA,KAAA;AAKA,GAhDA;AAiDA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,aAAA,KAAA,KAAA,GAAA,CAAA,IAAA,MAAA,CAAA,KAAA,KAAA,CAAA,KAAA,KAAA,SAAA,CAAA,MAAA;AACA;AAHA,GAjDA;AAsDA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,QAAA,IAAA,CAAA,KAAA,GAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,GAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KATA;AAUA,IAAA,eAVA,2BAUA,CAVA,EAUA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,CAAA;AACA,KAbA;AAcA,IAAA,MAdA,kBAcA,CAdA,EAcA;AACA,UAAA,eAAA,GAAA,CAAA,GACA,KAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,MAAA,CAAA,CADA,GAEA,IAFA;AAGA,UAAA,aAAA,GAAA,CAAA,IAAA,CAAA,CAAA,IAAA,KAAA,MAAA;;AACA,UACA,CAAA,eAAA,KAAA,aAAA,IAAA,CAAA,KAAA,YAAA,CAAA,IACA,KAAA,OAFA,EAGA;AACA;AACA;;AACA,UACA,KAAA,MAAA,KACA,KAAA,eAAA,IAAA,KAAA,SAAA,CAAA,OAAA,CAAA,KAAA,MAAA,MAAA,CAAA,CADA,KAEA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAHA,EAIA;AACA,aAAA,SAAA,CAAA,IAAA,CAAA,KAAA,MAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA,aAAA,SAAA;AACA,QAAA,CAAA,IAAA,CAAA,CAAA,cAAA,EAAA;AACA;AACA,KAnCA;AAoCA,IAAA,gBApCA,4BAoCA,QApCA,EAoCA;AACA,UAAA,KAAA,QAAA,KAAA,EAAA,IAAA,KAAA,QAAA,KAAA,SAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,UAAA,OAAA,KAAA,QAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AACA;;AACA,UACA,OAAA,KAAA,QAAA,KAAA,QAAA,IACA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA,OAAA,CAAA,KAAA,QAAA,IAAA,CAAA,CAFA,EAGA;AACA,eAAA,UAAA,CAAA,KAAA,QAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA;;AACA,UACA,QAAA,KAAA,QAAA,MAAA,QAAA,IACA,KAAA,QAAA,CAAA,IAAA,KAAA,SAFA,EAGA;AACA,eAAA,KAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KAxDA;AAyDA,IAAA,MAzDA,kBAyDA,KAzDA,EAyDA;AACA,WAAA,SAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,SAAA;AACA,KA5DA;AA6DA,IAAA,aA7DA,2BA6DA;AACA,UAAA,KAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,SAAA,CAAA,GAAA;AACA,WAAA,SAAA;AACA,KAnEA;AAoEA,IAAA,SApEA,uBAoEA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,SAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,SAAA;AACA;AAvEA;AAtDA,CAAA","sourcesContent":["<template>\n  <div\n    @click=\"focusNewTag()\"\n    :class=\"{\n      'read-only': readOnly,\n      'erd-tags-input--focused': isInputActive,\n    }\"\n    class=\"form-control erd-tags-input\"\n  >\n    <span\n      v-for=\"(tag, index) in innerTags\"\n      :key=\"index\"\n      class=\"erd-tags-input-tag\"\n    >\n      <span>{{ tag }}</span>\n      <a\n        v-if=\"!readOnly\"\n        @click.prevent.stop=\"remove(index)\"\n        class=\"erd-tags-input-remove\"\n      ></a>\n    </span>\n    <input\n      v-if=\"!readOnly && !isLimit\"\n      ref=\"inputtag\"\n      :placeholder=\"placeholder\"\n      type=\"text\"\n      v-model=\"newTag\"\n      @keydown.delete.stop=\"removeLastTag\"\n      @keydown.enter=\"addNew\"\n      @blur=\"handleInputBlur\"\n      @focus=\"handleInputFocus\"\n      class=\"erd-tags-input-input\"\n    />\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nconst validators = {\n    email: new RegExp(\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n    url: new RegExp(\n        /^(https?|ftp|rmtp|mms):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+)(:(\\d+))?\\/?/i\n    ),\n    text: new RegExp(/^[a-zA-Z]+$/),\n    digits: new RegExp(/^[\\d() \\.\\:\\-\\+#]+$/),\n    isodate: new RegExp(\n        /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/\n    )\n};\n/* eslint-enable */\nexport default {\n  props: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    placeholder: {\n      type: String,\n      default: \"\",\n    },\n    readOnly: {\n      type: Boolean,\n      default: false,\n    },\n    validate: {\n      // eslint-disable-next-line vue/require-prop-type-constructor\n      type: String | Function | Object,\n      default: \"\",\n    },\n    addTagOnKeys: {\n      type: Array,\n      default: function () {\n        return [\n          13, // Return\n          188, // Comma ','\n          9, // Tab\n        ];\n      },\n    },\n    addTagOnBlur: {\n      type: Boolean,\n      default: false,\n    },\n    limit: {\n      type: Number,\n      default: -1,\n    },\n    allowDuplicates: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      newTag: \"\",\n      innerTags: [...this.value],\n      isInputActive: false,\n    };\n  },\n  computed: {\n    isLimit: function () {\n      return this.limit > 0 && Number(this.limit) === this.innerTags.length;\n    },\n  },\n  methods: {\n    focusNewTag() {\n      if (this.readOnly || !this.$el.querySelector(\".erd-tags-input-input\")) {\n        return;\n      }\n      this.$el.querySelector(\".erd-tags-input-input\").focus();\n    },\n    handleInputFocus() {\n      this.isInputActive = true;\n    },\n    handleInputBlur(e) {\n      this.isInputActive = false;\n      this.addNew(e);\n    },\n    addNew(e) {\n      const keyShouldAddTag = e\n        ? this.addTagOnKeys.indexOf(e.keyCode) !== -1\n        : true;\n      const typeIsNotBlur = e && e.type !== \"blur\";\n      if (\n        (!keyShouldAddTag && (typeIsNotBlur || !this.addTagOnBlur)) ||\n        this.isLimit\n      ) {\n        return;\n      }\n      if (\n        this.newTag &&\n        (this.allowDuplicates || this.innerTags.indexOf(this.newTag) === -1) &&\n        this.validateIfNeeded(this.newTag)\n      ) {\n        this.innerTags.push(this.newTag);\n        this.newTag = \"\";\n        this.tagChange();\n        e && e.preventDefault();\n      }\n    },\n    validateIfNeeded(tagValue) {\n      if (this.validate === \"\" || this.validate === undefined) {\n        return true;\n      }\n      if (typeof this.validate === \"function\") {\n        return this.validate(tagValue);\n      }\n      if (\n        typeof this.validate === \"string\" &&\n        Object.keys(validators).indexOf(this.validate) > -1\n      ) {\n        return validators[this.validate].test(tagValue);\n      }\n      if (\n        typeof this.validate === \"object\" &&\n        this.validate.test !== undefined\n      ) {\n        return this.validate.test(tagValue);\n      }\n      return true;\n    },\n    remove(index) {\n      this.innerTags.splice(index, 1);\n      this.tagChange();\n    },\n    removeLastTag() {\n      if (this.newTag) {\n        return;\n      }\n      this.innerTags.pop();\n      this.tagChange();\n    },\n    tagChange() {\n      this.$emit(\"update:tags\", this.innerTags);\n      this.$emit(\"input\", this.innerTags);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.erd-tags-input {\n  overflow: hidden;\n  padding: 0.4rem 0.75rem !important;\n}\n\n.erd-tags-input-tag {\n  display: inline-block;\n  margin-right: 5px;\n}\n\n.erd-tags-input-remove {\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.erd-tags-input-tag a::before {\n  content: \" ×\";\n}\n\n.erd-tags-input-input {\n  background: transparent;\n  border: 0;\n  font-size: 0.8rem;\n  margin-top: 1px;\n  outline: none;\n  width: 80px;\n}\n</style>\n"],"sourceRoot":"src/components/Form"}]}