{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js??ref--13-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Calendar/calendar.js","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Calendar/calendar.js","mtime":1617718930000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Calendar/calendar.js"],"names":["Calendar","selectedDate","lang","textFormat","dateFormat","disabledRange","from","to","currentDate","year","month","date","firstDayOfWeek","formatOptions","currentYear","Date","getFullYear","years","Array","map","i","index","months","getMonths","days","getDays","firstDayOfMonth","getFirstDayOfMonth","dates","getDates","daysOfMonth","showDates","weeksOfMonth","getWeekOfMonth","dayNumber","name","toLocaleString","weekday","parseInt","getDay","push","sortDays","dayCount","countDateYears","findIndex","item","getMonth","filter","prevDay","prevYearLastOfMount","getDate","isDayInMonth","concat","nextDay","totalCount","length","day","toLocaleDateString","fullDate","isUsable","dateCompare","date1","date2","compare","setHours","getTime","firstDay","toLowerCase","sort","a","b","weeks","rows","Math","round","weekNo","floor"],"mappings":"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","sourcesContent":["export default class Calendar {\n  constructor(\n    selectedDate = {},\n    lang,\n    textFormat,\n    dateFormat,\n    disabledRange = {\n      from: null,\n      to: null,\n    }\n  ) {\n    this.currentDate = {\n      year: selectedDate.year,\n      month: selectedDate.month,\n      date: selectedDate.date,\n      firstDayOfWeek: selectedDate.firstDayOfWeek,\n    };\n    this.textFormat = textFormat;\n    this.formatOptions = dateFormat;\n    this.currentYear = new Date().getFullYear();\n    this.lang = lang;\n    this.disabledRange = disabledRange;\n    this.years = [...Array(10)].map(\n      (i, index) => this.currentDate.year + index\n    );\n    this.months = this.getMonths();\n    this.days = this.getDays();\n    this.firstDayOfMonth = this.getFirstDayOfMonth();\n    this.dates = this.getDates();\n    this.daysOfMonth = this.showDates();\n    this.weeksOfMonth = this.getWeekOfMonth();\n  }\n\n  getDays() {\n    const days = [];\n    let dayNumber;\n    let name;\n    for (let index = 1; index <= 7; index++) {\n      name = new Date(this.currentDate.year, \"00\", index).toLocaleString(\n        this.lang,\n        { weekday: this.textFormat }\n      );\n      dayNumber = parseInt(\n        new Date(this.currentDate.year, \"00\", index).getDay()\n      );\n      if (this.currentDate.firstDayOfWeek === \"monday\") {\n        dayNumber = (dayNumber - 1 + 7) % 7;\n      }\n      days.push({ name, dayNumber });\n    }\n    this.sortDays(days);\n    return days;\n  }\n\n  getMonths() {\n    const months = [];\n    for (let index = 0; index < 12; index++) {\n      const name = new Date(this.currentDate.year, index).toLocaleString(\n        this.lang,\n        { month: this.textFormat }\n      );\n      months.push({ index, name });\n    }\n    return months;\n  }\n\n  getDates() {\n    const dates = [];\n    const dayCount = this.currentDate.year % 4 === 0 ? 367 : 366;\n    for (let index = 1; index < dayCount; index++) {\n      const date = new Date(this.currentDate.year, \"00\", index);\n      dates.push(date);\n    }\n    return dates;\n  }\n\n  showDates() {\n    const countDateYears = this.dates.findIndex(\n      (item) => new Date(item).getMonth() === this.currentDate.month\n    );\n    let daysOfMonth = this.dates.filter(\n      (item) => new Date(item).getMonth() === this.currentDate.month\n    );\n    let dates = [];\n    let prevDay = this.firstDayOfMonth;\n    const prevYearLastOfMount = new Date(\n      this.currentDate.year,\n      \"00\",\n      1\n    ).getDate();\n    if (this.currentDate.month === 0) {\n      while (prevDay > 0) {\n        const date = new Date(\n          this.currentDate.year,\n          \"00\",\n          prevYearLastOfMount - prevDay\n        );\n        dates.push({\n          date: date,\n          isDayInMonth: false,\n        });\n        prevDay -= 1;\n      }\n    } else {\n      while (prevDay > 0 && countDateYears - prevDay > 0) {\n        const date = this.dates[countDateYears - prevDay];\n        dates.push({\n          date,\n          isDayInMonth: false,\n        });\n        prevDay -= 1;\n      }\n    } // for will list of days prev month for blank days.\n    daysOfMonth = daysOfMonth.map((item) => ({\n      date: item,\n      isDayInMonth: true,\n    }));\n    dates = dates.concat(daysOfMonth); // all days of the month.\n    let nextDay = 0;\n    let totalCount;\n    while (dates.length % 7) {\n      totalCount = countDateYears + daysOfMonth.length + nextDay;\n      const date =\n        totalCount < 365\n          ? this.dates[countDateYears + daysOfMonth.length + nextDay]\n          : new Date(this.currentDate.year + 1, \"00\", nextDay + 1);\n      dates.push({\n        date,\n        isDayInMonth: false,\n      });\n      nextDay += 1;\n      // for will list of days next month for blank days.\n    }\n    dates = dates.map((item) => ({\n      month: new Date(item.date).getMonth(),\n      day: new Date(item.date).getDate(),\n      date: new Date(item.date).toLocaleDateString(this.lang, {\n        ...this.formatOptions,\n      }),\n      fullDate: new Date(item.date),\n      isDayInMonth: item.isDayInMonth,\n      isUsable:\n        (!this.disabledRange.from\n          ? true\n          : this.dateCompare(this.disabledRange.from, item.date, \"small\")) &&\n        (!this.disabledRange.to\n          ? true\n          : this.dateCompare(this.disabledRange.to, item.date, \"big\")),\n    }));\n    return dates;\n  }\n\n  dateCompare(date1, date2, compare) {\n    date1 = new Date(date1);\n    date2 = new Date(date2);\n\n    date1.setHours(0, 0, 0, 0);\n    date2.setHours(0, 0, 0, 0);\n    switch (compare) {\n      case \"small\":\n        return date1.getTime() >= date2.getTime();\n      case \"big\":\n        return date2.getTime() >= date1.getTime();\n      default:\n        break;\n    }\n  }\n\n  getFirstDayOfMonth() {\n    /*\n      start of week is by default sunday.\n      if user choose this value as monday, so that's must calculate days of week.\n    */\n    let firstDay = new Date(\n      this.currentDate.year,\n      this.currentDate.month,\n      \"01\"\n    ).getDay(); // the first day in month\n    if (this.currentDate.firstDayOfWeek.toLowerCase() === \"monday\") {\n      firstDay = (firstDay - 1 + 7) % 7;\n    }\n    return parseInt(firstDay);\n  }\n\n  sortDays(days) {\n    return days.sort((a, b) => {\n      return a.dayNumber - b.dayNumber;\n    });\n  }\n\n  getWeekOfMonth() {\n    let weeks = [];\n    //  for find out how many lines the calendar consists of,  divide all the month data count by days of week count\n    const rows = Math.round(this.daysOfMonth.length / 7);\n    for (let index = 0; index < rows; index++) {\n      const countDateYears = this.dates.findIndex(\n        (item) => new Date(item).getMonth() === this.currentDate.month\n      );\n      const weekNo = Math.floor(countDateYears / 7) + index + 1;\n      weeks.push({\n        index: weekNo,\n        name: weekNo,\n      });\n    }\n    return weeks;\n  }\n}\n"]}]}