{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/playlists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/playlists.vue","mtime":1625168554713},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["playlists.vue"],"names":[],"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","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"playlists\">\n    <!--  \n\n      Playlist Info\n\n    -->\n    <erd-modal\n      v-show=\"playlistInfo.modal\"\n      @close=\"playlistInfoModal(false)\"\n      :title=\"$t('xtream.playlist-info')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <p class=\"mt-0\">{{ $t(\"xtream.playlist-info-text\") }}</p>\n        <erd-row class=\"m-0 p-0\">\n          <erd-col xxl=\"8\" sm=\"8\" class=\"my-0 p-0\">\n            <label class=\"w-100\">{{ $t(\"xtream.host\") }}</label>\n            <erd-input\n              class=\"mt-1 mb-2 w-100\"\n              :value=\"iptvToolsHost\"\n              readonly\n            ></erd-input>\n          </erd-col>\n          <erd-col xxl=\"4\" sm=\"4\" class=\"my-0 py-0 pr-0\">\n            <label class=\"w-100\">{{ $t(\"xtream.port\") }}</label>\n            <erd-input\n              class=\"mt-1 mb-2 w-100\"\n              :value=\"iptvToolsPort\"\n              readonly\n            ></erd-input>\n          </erd-col>\n        </erd-row>\n        <label class=\"w-100\">{{ $t(\"xtream.username\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          :value=\"playlistInfo.username\"\n          readonly\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"xtream.password\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          :value=\"playlistInfo.password\"\n          readonly\n        ></erd-input>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"playlistInfoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"primary\"\n          >{{ $t(\"general.close\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"!editor\">\n      <b-table :items=\"paged\" :fields=\"fields\" striped small>\n        <template v-slot:cell(created_at)=\"row\">\n          {{ formatDate(row.item.created_at) }}\n        </template>\n        <template v-slot:cell(last_updated)=\"row\">\n          {{ formatDate(row.item.last_updated) }}\n        </template>\n        <template v-slot:cell(synced_at)=\"row\">\n          {{\n            row.item.synced_at && row.item.synced_at !== \"0000-00-00 00:00:00\"\n              ? formatDate(row.item.synced_at)\n              : $t(\"general.not-available\")\n          }}\n        </template>\n        <template v-slot:cell(source_exp_date)=\"row\">\n          {{ formatDate(row.item.source_exp_date * 1000) }}\n        </template>\n        <template v-slot:cell(sync_interval)=\"row\">\n          {{ $t(`sync-interval.${row.item.sync_interval}`) }}\n        </template>\n        <template v-slot:cell(actions)=\"row\">\n          <erd-tooltip :tooltip=\"$t('xtream.tooltip-playlist-info')\" :enabled=\"showTooltips\">\n            <erd-button\n              variant=\"info\"\n              class=\"btn-table\"\n              @click=\"playlistInfoModal(true, row.item)\"\n              ><i class=\"las la-info\"></i\n            ></erd-button>\n          </erd-tooltip>\n          <erd-tooltip :tooltip=\"$t('xtream.tooltip-sync-playlist')\" :enabled=\"showTooltips\">\n            <erd-button\n              variant=\"info\"\n              class=\"btn-table\"\n              :disabled=\"syncPlaylist\"\n              @click=\"synchronizePlaylist(row.item.id)\"\n              ><i class=\"las la-sync\"></i\n            ></erd-button>\n          </erd-tooltip>\n          <erd-tooltip :tooltip=\"$t('xtream.tooltip-sync-tmdb')\" :enabled=\"showTooltips\">\n            <erd-button\n              variant=\"info\"\n              class=\"btn-table\"\n              :disabled=\"syncTMDB\"\n              @click=\"synchronizeTMDB(row.item.id)\"\n              ><i class=\"lab la-imdb\"></i\n            ></erd-button>\n          </erd-tooltip>\n          <erd-tooltip :tooltip=\"$t('xtream.tooltip-edit-playlist')\" :enabled=\"showTooltips\">\n            <erd-button\n              variant=\"info\"\n              class=\"btn-table\"\n              @click=\"editPlaylist(row.item)\"\n              ><i class=\"las la-pen\"></i\n            ></erd-button>\n          </erd-tooltip>\n          <erd-tooltip :tooltip=\"$t('xtream.tooltip-delete-playlist')\" :enabled=\"showTooltips\">\n            <erd-button\n              variant=\"danger\"\n              class=\"btn-table\"\n              @click=\"deletePlaylist(row.item.id)\"\n              ><i class=\"las la-trash\"></i\n            ></erd-button>\n          </erd-tooltip>\n        </template>\n      </b-table>\n      <b-pagination\n        class=\"w-100 my-3\"\n        size=\"sm\"\n        align=\"center\"\n        :total-rows=\"total\"\n        :per-page=\"perPage\"\n        v-model=\"currentPage\"\n      >\n        <template v-slot:next-text>\n          <i class=\"las la-angle-right\" />\n        </template>\n        <template v-slot:prev-text>\n          <i class=\"las la-angle-left\" />\n        </template>\n        <template v-slot:first-text>\n          <i class=\"las la-angle-double-left\" />\n        </template>\n        <template v-slot:last-text>\n          <i class=\"las la-angle-double-right\" />\n        </template>\n      </b-pagination>\n    </erd-col>\n    <!-- SOURCE -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 0\">\n      <label class=\"d-block\" for=\"source-title\">{{ $t(\"xtream.title\") }}</label>\n      <erd-input\n        id=\"source-title\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.name\"\n      ></erd-input>\n      <div v-if=\"playlist.url !== undefined\">\n        <label class=\"d-block\" for=\"source-url\">{{ $t(\"xtream.url\") }}</label>\n        <erd-input\n          id=\"source-url\"\n          class=\"mt-1 mb-2 w-100\"\n          :placeholder=\"$t('xtream.url-placeholder')\"\n          v-model=\"playlist.url\"\n        ></erd-input>\n      </div>\n      <label class=\"d-block\" for=\"source-host\">{{ $t(\"xtream.host\") }}</label>\n      <erd-input\n        id=\"source-host\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.source_host\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"source-port\">{{ $t(\"xtream.port\") }}</label>\n      <erd-input\n        id=\"source-port\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.source_port\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"source-username\">{{\n        $t(\"xtream.username\")\n      }}</label>\n      <erd-input\n        id=\"source-username\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.source_username\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"source-password\">{{\n        $t(\"xtream.password\")\n      }}</label>\n      <erd-input\n        id=\"source-password\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.source_password\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"source-expiry\">{{\n        $t(\"xtream.expire\")\n      }}</label>\n      <erd-input\n        id=\"source-expiry\"\n        class=\"mt-1 mb-2 w-100\"\n        :value=\"formatDate(playlist.source_exp_date * 1000)\"\n        disabled\n      ></erd-input>\n      <label class=\"d-block\" for=\"max-connections\">{{\n        $t(\"xtream.max-connections\")\n      }}</label>\n      <erd-input\n        id=\"source-max-connections\"\n        class=\"mt-1 mb-2 w-100\"\n        :value=\"formatMaxConnections(playlist.source_max_connections)\"\n        disabled\n      ></erd-input>\n    </erd-col>\n    <!-- API -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 1\">\n      <erd-tooltip :tooltip=\"$t('xtream.tooltip-api-enabled')\" :enabled=\"showTooltips\">\n        <erd-checkbox\n          class=\"mb-2 w-100\"\n          v-model=\"playlist.enabled\"\n          :true-value=\"1\"\n          :false-value=\"0\"\n          >{{ $t(\"xtream.enabled\") }}</erd-checkbox\n        >\n      </erd-tooltip>\n      <label class=\"d-block\" for=\"api-username\">{{\n        $t(\"xtream.username\")\n      }}</label>\n      <erd-input\n        id=\"api-username\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.api_username\"\n        :disabled=\"!canUseCustomUserPass\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"api-password\">{{\n        $t(\"xtream.password\")\n      }}</label>\n      <erd-input\n        id=\"api-password\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.api_password\"\n        :disabled=\"!canUseCustomUserPass\"\n      ></erd-input>\n      <erd-button\n        icon=\"la-random\"\n        variant=\"info\"\n        class=\"mb-3\"\n        v-if=\"!canUseCustomUserPass\"\n        @click=\"randomPassword\"\n        >{{ $t(\"xtream.generate-password\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-search\"\n        variant=\"info\"\n        class=\"mb-3\"\n        v-if=\"canUseCustomUserPass\"\n        @click=\"checkAvailability\"\n        >{{ $t(\"xtream.check-availability\") }}</erd-button\n      >\n      <label class=\"d-block\" for=\"api-message\">{{\n        $t(\"xtream.message\")\n      }}</label>\n      <erd-textarea\n        class=\"w-100\"\n        id=\"api-message\"\n        rows=\"3\"\n        v-model=\"playlist.api_message\"\n      ></erd-textarea>\n      <label class=\"d-block\" for=\"api-output\">{{\n        $t(\"xtream.output-format\")\n      }}</label>\n      <erd-select\n        id=\"api-output\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.api_output_format\"\n        :items=\"outputTypes\"\n        :placeholder=\"$t('xtream.output-format')\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"epg-timeshift\">{{\n        $t(\"xtream.epg-timeshift\")\n      }}</label>\n      <erd-input\n        id=\"epg-timeshift\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.epg_offset\"\n        type=\"number\"\n      ></erd-input>\n    </erd-col>\n    <!-- SYNC -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 2\">\n      <erd-tooltip :tooltip=\"$t('xtream.tooltip-sync-enabled')\" :enabled=\"showTooltips\">\n        <erd-checkbox\n          class=\"mb-2 w-100\"\n          v-model=\"playlist.sync_enabled\"\n          :true-value=\"1\"\n          :false-value=\"0\"\n          >{{ $t(\"xtream.enabled\") }}</erd-checkbox\n        >\n      </erd-tooltip>\n      <label class=\"d-block\" for=\"sync-interval\">{{\n        $t(\"xtream.sync-interval\")\n      }}</label>\n      <erd-select\n        id=\"sync-interval\"\n        ref=\"sync-interval\"\n        key=\"sync-interval\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.sync_interval\"\n        :items=\"syncIntervals\"\n        :disabled=\"!playlist.sync_enabled\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"sync-tmdb-language\">{{\n        $t(\"xtream.tmdb-language\")\n      }}</label>\n      <erd-select\n        id=\"sync-tmdb-language\"\n        ref=\"sync-tmdb-language\"\n        key=\"sync-tmdb-language\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"playlist.tmdb_language\"\n        :items=\"tmdbLanguages\"\n        :disabled=\"!playlist.sync_enabled || !canUseMoviesSeries\"\n      ></erd-select>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"4\" md=\"4\" sm=\"12\" class=\"pl-0\">\n          <erd-context-menu\n            :items=\"contextLive\"\n            depth=\"1\"\n            ref=\"context-live\"\n          ></erd-context-menu>\n          <label class=\"mt-0\">{{ $t(\"dashboard.live-streams\") }}</label>\n          <div\n            class=\"form-control sync-groups\"\n            @contextmenu.prevent=\"openContext('context-live')\"\n          >\n            <erd-checkbox\n              v-for=\"(group, index) in playlistGroups.live\"\n              :key=\"`group-1-${index}`\"\n              :value=\"group.category_id\"\n              v-model=\"playlist.sync_live\"\n              >{{ group.category_name }}</erd-checkbox\n            >\n            <div class=\"empty-group\" v-if=\"playlistGroups.live.length === 0\">\n              <i class=\"las la-folder-open la-3x\"></i>\n              <p class=\"mt-1\">{{ $t(\"general.not-available\") }}</p>\n            </div>\n          </div>\n        </erd-col>\n        <erd-col xl=\"4\" md=\"4\" sm=\"12\" class=\"p-0\">\n          <erd-context-menu\n            :items=\"contextMovies\"\n            depth=\"1\"\n            ref=\"context-movies\"\n          ></erd-context-menu>\n          <label class=\"mt-0\">{{ $t(\"dashboard.movies\") }}</label>\n          <div\n            class=\"form-control sync-groups\"\n            @contextmenu.prevent=\"openContext('context-movies')\"\n          >\n            <erd-checkbox\n              v-for=\"(group, index) in playlistGroups.movies\"\n              :key=\"`group-2-${index}`\"\n              :value=\"group.category_id\"\n              v-model=\"playlist.sync_movies\"\n              :disabled=\"!canUseMoviesSeries\"\n              >{{ group.category_name }}</erd-checkbox\n            >\n            <div class=\"empty-group\" v-if=\"playlistGroups.movies.length === 0\">\n              <i class=\"las la-folder-open la-3x\"></i>\n              <p class=\"mt-1\">{{ $t(\"general.not-available\") }}</p>\n            </div>\n          </div>\n        </erd-col>\n        <erd-col xl=\"4\" md=\"4\" sm=\"12\" class=\"pr-0\">\n          <erd-context-menu\n            :items=\"contextSeries\"\n            depth=\"1\"\n            ref=\"context-series\"\n          ></erd-context-menu>\n          <label class=\"mt-0\">{{ $t(\"dashboard.series\") }}</label>\n          <div\n            class=\"form-control sync-groups\"\n            @contextmenu.prevent=\"openContext('context-series')\"\n          >\n            <erd-checkbox\n              v-for=\"(group, index) in playlistGroups.series\"\n              :key=\"`group-3-${index}`\"\n              :value=\"group.category_id\"\n              v-model=\"playlist.sync_series\"\n              :disabled=\"!canUseMoviesSeries\"\n              >{{ group.category_name }}</erd-checkbox\n            >\n            <div class=\"empty-group\" v-if=\"playlistGroups.series.length === 0\">\n              <i class=\"las la-folder-open la-3x\"></i>\n              <p class=\"mt-1\">{{ $t(\"general.not-available\") }}</p>\n            </div>\n          </div>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n    <!-- SECURITY -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 3\">\n      <erd-tooltip :tooltip=\"$t('xtream.tooltip-security-enabled')\" :enabled=\"showTooltips\">\n        <erd-checkbox\n          :true-value=\"1\"\n          :false-value=\"0\"\n          class=\"mb-2\"\n          v-model=\"playlist.ip_protection\"\n          >{{ $t(\"xtream.ip-security\") }}</erd-checkbox\n        >\n      </erd-tooltip>\n      <label class=\"d-block\" for=\"allowed-ips\">{{\n        $t(\"xtream.allow-only-ips\")\n      }}</label>\n      <erd-textarea\n        class=\"w-100 mb-1\"\n        id=\"allowed-ips\"\n        rows=\"3\"\n        v-model=\"allowedIps\"\n        :disabled=\"!playlist.ip_protection\"\n      ></erd-textarea>\n      <erd-button\n        variant=\"info\"\n        icon=\"la-server\"\n        :disabled=\"!playlist.ip_protection\"\n        @click=\"getIPAddress\"\n        >{{ $t(\"xtream.get-ip\") }}</erd-button\n      >\n    </erd-col>\n    <!-- BACK-UP -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 4\">\n      <p class=\"mt-0 mb-2\">{{ $t(\"backup.streams\") }}</p>\n      <!-- LIVE STREAMS BACKUP -->\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"backup-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"backupPlaylist('live')\"\n        >{{ $t(\"backup.back-up-live\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"backup-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"backupPlaylist('movies')\"\n        >{{ $t(\"backup.back-up-movies\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"backup-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"backupPlaylist('series')\"\n        >{{ $t(\"backup.back-up-series\") }}</erd-button\n      >\n      <!-- PLAYLIST BACKUP -->\n      <p class=\"mt-3 mb-2\">{{ $t(\"backup.playlist\") }}</p>\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"backup-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"backupPlaylist('playlist')\"\n        >{{ $t(\"backup.back-up-playlist\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-import\"\n        variant=\"info\"\n        class=\"backup-button\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"$refs['restore-playlist'].click()\"\n        >{{ $t(\"backup.restore-playlist\") }}</erd-button\n      >\n      <input\n        type=\"file\"\n        ref=\"restore-playlist\"\n        style=\"display: none\"\n        accept=\".zip\"\n        @change=\"restorePlaylist\"\n      />\n      <p class=\"mt-3 mb-2\">{{ $t(\"backup.tv-guide\") }}</p>\n      <!-- EPG CODES BACKUP -->\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"backup-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"backupEPGCodes\"\n        >{{ $t(\"backup.back-up-epg-channel-ids\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-import\"\n        variant=\"info\"\n        class=\"backup-button\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"$refs['restore-epg-codes'].click()\"\n        >{{ $t(\"backup.restore-epg-channel-ids\") }}</erd-button\n      >\n      <input\n        type=\"file\"\n        ref=\"restore-epg-codes\"\n        style=\"display: none\"\n        accept=\".zip\"\n        @change=\"restoreEPGCodes\"\n      />\n    </erd-col>\n    <!-- EXPORT -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 5\">\n      <p class=\"mt-0 mb-2\">{{ $t(\"export.playlist\") }}</p>\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"export-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"exportM3U\"\n        >{{ $t(\"export.m3u\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"export-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"exportSIPTV\"\n        >{{ $t(\"export.siptv\") }}</erd-button\n      >\n      <erd-button\n        icon=\"la-file-export\"\n        variant=\"primary\"\n        class=\"export-button\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"exportBouquet\"\n        >{{ $t(\"export.bouquet\") }}</erd-button\n      >\n      <p class=\"mt-3 mb-2\">{{ $t(\"export.other\") }}</p>\n      <erd-button\n        icon=\"la-file-csv\"\n        variant=\"info\"\n        class=\"export-button mb-1\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"exportCSV\"\n        >{{ $t(\"export.csv\") }}</erd-button\n      >\n      <!--<erd-button icon=\"la-file-code\" variant=\"info\" class=\"export-button mb-1\" :disabled=\"playlistIsEmpty\">{{ $t(\"export.html\") }}</erd-button>-->\n      <erd-button\n        icon=\"la-file-code\"\n        variant=\"info\"\n        class=\"export-button\"\n        :disabled=\"playlistIsEmpty\"\n        @click=\"exportJSON\"\n        >{{ $t(\"export.json\") }}</erd-button\n      >\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { languages } from \"../../../helpers\";\nimport { UserRole, SubscriptionType } from \"../../../constants/config\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      languages,\n      activeTab: 0,\n      playlistGroups: {\n        live: [],\n        movies: [],\n        series: [],\n      },\n      playlistInfo: {\n        modal: false,\n        username: \"\",\n        password: \"\",\n      },\n      playlists: [],\n      playlist: null,\n      editor: false,\n      search: null,\n      isLoading: false,\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 1,\n      fields: [\n        { key: \"created_at\", label: this.$t(\"xtream.created\"), sortable: true },\n        {\n          key: \"last_updated\",\n          label: this.$t(\"xtream.last-updated\"),\n          sortable: true,\n        },\n        { key: \"name\", label: this.$t(\"xtream.name\"), sortable: true },\n        { key: \"groups\", label: this.$t(\"xtream.groups\"), sortable: true },\n        { key: \"streams\", label: this.$t(\"xtream.streams\"), sortable: true },\n        {\n          key: \"sync_interval\",\n          label: this.$t(\"xtream.sync-interval\"),\n          sortable: true,\n        },\n        {\n          key: \"synced_at\",\n          label: this.$t(\"xtream.synced-at\"),\n          sortable: true,\n        },\n        {\n          key: \"source_exp_date\",\n          label: this.$t(\"xtream.expire\"),\n          sortable: true,\n        },\n        {\n          key: \"source_max_connections\",\n          label: this.$t(\"xtream.max-connections\"),\n          sortable: true,\n        },\n        {\n          key: \"actions\",\n          label: this.$t(\"users.actions\"),\n          sortable: false,\n          thClass: \"text-right\",\n          tdClass: \"text-right\",\n        },\n      ],\n      syncIntervals: [\n        { text: this.$t(\"sync-interval.48\"), value: 48 },\n        { text: this.$t(\"sync-interval.24\"), value: 24 },\n        { text: this.$t(\"sync-interval.12\"), value: 12 },\n        { text: this.$t(\"sync-interval.6\"), value: 6 },\n        { text: this.$t(\"sync-interval.1\"), value: 1 },\n      ],\n      outputTypes: [\n        { text: this.$t(\"output.1\"), value: 1 },\n        { text: this.$t(\"output.2\"), value: 2 },\n      ],\n      iptvToolsHost: \"http://tv.iptv-tools.com\",\n      iptvToolsPort: 80,\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"syncTMDB\", \"syncPlaylist\"]),\n    showTooltips () {\n      return this.settings.showTooltips;\n    },\n    epgOffset() {\n      let dt = new Date();\n      return Math.abs(dt.getTimezoneOffset() / 60);\n    },\n    perPage() {\n      return this.settings.perPage;\n    },\n    searchFiltered() {\n      if (this.search === null) {\n        return this.playlists;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.playlists.filter((account) => {\n          return (\n            String(account.title).match(re) ||\n            String(account.host).match(re) ||\n            String(account.port).match(re) ||\n            String(account.username).match(re) ||\n            String(account.password).match(re) ||\n            this.formatDate(account.synced_at).match(re) ||\n            this.$t(`sync-interval.${account.sync_interval}`).match(re)\n          );\n        });\n      }\n    },\n    paged() {\n      this.total = this.searchFiltered.length;\n      this.from = (this.currentPage - 1) * this.perPage || 0;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.searchFiltered.slice(this.from, this.to);\n    },\n    allowedIps: {\n      get: function () {\n        return this.playlist.ip_allowed\n          ? this.playlist.ip_allowed.join(\",\")\n          : \"\";\n      },\n      set: function (val) {\n        this.playlist.ip_allowed = val.split(\",\").map((ip) => {\n          return ip.trim();\n        });\n      },\n    },\n    contextLive() {\n      let vm = this;\n      let live = [...vm.playlistGroups.live];\n      return [\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.playlist.sync_live = [...live.map((g) => g.category_id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.playlist.sync_live = [];\n          },\n        },\n      ];\n    },\n    contextMovies() {\n      let vm = this;\n      let movies = [...vm.playlistGroups.movies];\n      return [\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            if (vm.canUseMoviesSeries) {\n              vm.playlist.sync_movies = [...movies.map((g) => g.category_id)];\n            }\n          },\n          disabled: !vm.canUseMoviesSeries,\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.playlist.sync_movies = [];\n          },\n          disabled: !vm.canUseMoviesSeries,\n        },\n      ];\n    },\n    contextSeries() {\n      let vm = this;\n      let series = [...vm.playlistGroups.series];\n      return [\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            if (vm.canUseMoviesSeries) {\n              vm.playlist.sync_series = [...series.map((g) => g.category_id)];\n            }\n          },\n          disabled: !vm.canUseMoviesSeries,\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.playlist.sync_series = [];\n          },\n          disabled: !vm.canUseMoviesSeries,\n        },\n      ];\n    },\n    tmdbLanguages() {\n      return Object.keys(this.languages).map((language) => {\n        return {\n          value: language,\n          text: `${this.languages[language].name} (${this.languages[language].nativeName})`,\n        };\n      });\n    },\n    canUseCustomUserPass() {\n      return [UserRole.SuperAdmin, UserRole.Admin, UserRole.Moderator].includes(\n        this.currentUser.user.role\n      );\n    },\n    canUseMoviesSeries() {\n      return [\n        SubscriptionType.Professional,\n        SubscriptionType.Family,\n        SubscriptionType.BusinessSmall,\n        SubscriptionType.BusinessProfessional,\n        SubscriptionType.BusinessEnterprise,\n        SubscriptionType.Manager,\n      ].includes(this.currentUser.subscription.subscription_type);\n    },\n    playlistIsEmpty() {\n      return (\n        (this.playlist && this.playlist.groups == 0) ||\n        this.playlist.streams == 0\n      );\n    },\n    canAddPlaylist() {\n      if (this.currentUser.subscription) {\n        let subscription = this.currentUser.subscription;\n        if (subscription.end_date != null && new Date(subscription.end_date).getTime() < new Date().getTime()) {\n          return false;\n        }\n        if (subscription.custom_plan == 1) {\n          return this.playlists.length < subscription.max_playlist;\n        }\n        if (subscription.enabled != 1) {\n          return false;\n        }\n        switch (subscription.subscription_type) {\n          case 0:\n          case 1:\n            return this.playlists.length < 2;\n          case 2:\n            return this.playlists.length < 5;\n          case 3:\n            return this.playlists.length < 5;\n          case 4:\n            return this.playlists.length < 10;\n          case 5:\n            return this.playlists.length < 25;\n        }\n      }\n      return false;\n    },\n  },\n  methods: {\n    ...mapActions([\"synchronizeTMDB\", \"synchronizePlaylist\"]),\n    openContext(context) {\n      this.$refs[context].open();\n    },\n    loadGroups() {\n      this.isLoading = true;\n      httpService\n        .post(\"playlist/load-groups\", {\n          host: this.playlist.source_host,\n          port: this.playlist.source_port,\n          username: this.playlist.source_username,\n          password: this.playlist.source_password,\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.playlistGroups = res.data;\n          }\n        });\n    },\n    loadPlaylists() {\n      this.isLoading = true;\n      httpService\n        .get(\"playlist\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.playlists = res.data;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.xtream-load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    addPlaylist() {\n      if (this.canAddPlaylist !== true) {\n        return;\n      }\n      httpService\n        .post(\"playlist/add\")\n        .then((res) => {\n          if (res.status === true && res.data !== false) {\n            this.playlist = {\n              id: res.data,\n              url: \"\",\n              enabled: 1,\n              source_host: \"\",\n              source_port: \"\",\n              source_username: \"\",\n              source_password: \"\",\n              source_exp_date: false,\n              source_max_connections: false,\n              sync_enabled: 1,\n              sync_interval: 48,\n              sync_live: [],\n              sync_movies: [],\n              sync_series: [],\n              ip_protection: 0,\n              ip_allowed: [],\n              api_username: this.currentUser.user.username,\n              api_password: \"\",\n              api_message: \"Welcome to IPTV-Tools.com\",\n              api_output_format: 1,\n              name: \"\",\n              tmdb_language: this.$i18n.locale,\n              epg_offset: this.epgOffset,\n            };\n            this.playlistGroups = {\n              live: [],\n              movies: [],\n              series: [],\n            };\n            this.randomPassword();\n            this.editor = true;\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.xtream-new-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    editPlaylist(playlist) {\n      this.playlist = Object.assign({}, playlist);\n      this.playlistAuth();\n      this.editor = true;\n    },\n    playlistInfoModal(show, playlist) {\n      if (playlist) {\n        this.playlistInfo.username = playlist.api_username;\n        this.playlistInfo.password = playlist.api_password;\n      }\n      this.playlistInfo.modal = show;\n    },\n    cancelEditor() {\n      this.editor = false;\n    },\n    saveEditor() {\n      let playlist = this.playlist;\n      let playlistId = this.playlist.id;\n      delete playlist.id;\n      delete playlist.url;\n      delete playlist.groups;\n      delete playlist.streams;\n\n      playlist.last_updated = new Date();\n      httpService\n        .put(`playlist/${playlistId}`, playlist)\n        .then((res) => {\n          if (res.status === true && res.data === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xtream.xtream-save-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.editor = false;\n            this.loadPlaylists();\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.xtream-save-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    deletePlaylist(id) {\n      httpService\n        .delete(`playlist/${id}`)\n        .then((res) => {\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xtream.xtream-delete-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadPlaylists();\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.xtream-delete-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    searchAccount(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printAccounts() {\n      document.getElementById(\"playlists\").print();\n    },\n    formatDate(date) {\n      return date === false\n        ? \"\"\n        : date === null ||\n          date === \"0000-00-00 00:00:00\" ||\n          date === 0 ||\n          date === \"\"\n        ? this.$t(\"xtream.unlimited\")\n        : new Date(date).toLocaleString(\n            this.$t(\"date.locale\"),\n            this.dateOptions\n          );\n    },\n    formatMaxConnections(max) {\n      return max === false\n        ? \"\"\n        : max === null || max <= 0\n        ? this.$t(\"xtream.unlimited\")\n        : max;\n    },\n    doTabChange(tab) {\n      if (tab == 1) {\n        //this.loadGroups();\n      }\n      this.activeTab = tab;\n    },\n    randomPassword() {\n      httpService\n        .post(\"playlist/random-password\", {\n          username: this.playlist.api_username,\n        })\n        .then((res) => {\n          if (res.status === true) {\n            this.playlist.api_password = res.data;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    playlistAuth() {\n      this.isLoading = true;\n      httpService\n        .post(\"playlist/authenticate\", {\n          host: this.playlist.source_host,\n          port: this.playlist.source_port,\n          username: this.playlist.source_username,\n          password: this.playlist.source_password,\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data.auth) {\n            this.playlist.source_exp_date = res.data.exp_date;\n            this.playlist.source_max_connections = res.data.max_connections;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    getIPAddress() {\n      httpService\n        .get(\"playlist/ip-address\")\n        .then((res) => {\n          if (res.status === true) {\n            this.playlist.ip_allowed.push(res.data);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    checkAvailability() {\n      httpService\n        .post(\"playlist/user-pass-exists\", {\n          username: this.playlist.api_username,\n          password: this.playlist.api_password,\n        })\n        .then((res) => {\n          if (res.status === true) {\n            if (res.data === true) {\n              this.$notify(\n                \"error\",\n                this.$t(\"xtream.not-available\"),\n                this.$t(\"xtream.user-pass-used\"),\n                \"la-exclamation-triangle\",\n                { duration: 5000, permanent: false }\n              );\n            } else {\n              this.$notify(\n                \"success\",\n                this.$t(\"xtream.available\"),\n                this.$t(\"xtream.user-pass-available\"),\n                \"la-check-circle\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    exportM3U() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/export/m3u/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"export.m3u\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    exportSIPTV() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/export/siptv/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"export.txt\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    exportBouquet() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/export/bouquet/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"export.zip\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    exportCSV() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/export/csv/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"export.zip\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    exportJSON() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/export/json/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"export.zip\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    backupPlaylist(path) {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/back-up/${path}/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"backup.zip\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    backupEPGCodes() {\n      this.isLoading = true;\n      httpService\n        .download(`playlist/back-up/epg-codes/${this.playlist.id}`)\n        .then((blob) => {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"backup.zip\";\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          this.isLoading = false;\n        });\n    },\n    restoreEPGCodes(e) {\n      this.isLoading = true;\n      if (e && e.target.files.length == 1) {\n        var formData = new FormData();\n        formData.append(\"backup.zip\", e.target.files[0]);\n        httpService\n          .postFile(`playlist/restore/epg-codes/${this.playlist.id}`, formData)\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true && res.data === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xtream.restore-epgcodes-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            } else {\n              this.$notify(\n                \"error\",\n                this.$t(\"profile.failed\"),\n                this.$t(\"xtream.restore-epgcodes-error\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xtream.restore-epgcodes-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n    restorePlaylist(e) {\n      this.isLoading = true;\n      if (e && e.target.files.length == 1) {\n        var formData = new FormData();\n        formData.append(\"backup.zip\", e.target.files[0]);\n        httpService\n          .postFile(`playlist/restore/playlist/${this.playlist.id}`, formData)\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true && res.data === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xtream.restore-playlist-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            } else {\n              this.$notify(\n                \"error\",\n                this.$t(\"profile.failed\"),\n                this.$t(\"xtream.restore-playlist-error\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xtream.restore-playlist-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n  },\n  beforeMount() {\n    this.loadPlaylists();\n    EventBus.$emit(\"can-add-playlist\", this.canAddPlaylist);\n    EventBus.$on(\"search\", this.searchAccount);\n    EventBus.$on(\"print\", this.printAccounts);\n    EventBus.$on(\"refresh\", this.loadPlaylists);\n    EventBus.$on(\"add\", this.addPlaylist);\n    EventBus.$on(\"cancel\", this.cancelEditor);\n    EventBus.$on(\"save\", this.saveEditor);\n    EventBus.$on(\"tab-change\", this.doTabChange);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"search\", this.searchAccount);\n    EventBus.$off(\"print\", this.printAccounts);\n    EventBus.$off(\"refresh\", this.loadPlaylists);\n    EventBus.$off(\"add\", this.addPlaylist);\n    EventBus.$off(\"cancel\", this.cancelEditor);\n    EventBus.$off(\"save\", this.saveEditor);\n    EventBus.$off(\"tab-change\", this.doTabChange);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    editor: function (val) {\n      EventBus.$emit(\"update-editor\", val);\n      if (!val) {\n        this.loadPlaylists();\n      }\n    },\n    canAddPlaylist: function (val) {\n      EventBus.$emit(\"can-add-playlist\", val);\n    },\n    \"playlist.source_host\": function () {\n      if (\n        this.playlist.source_host &&\n        this.playlist.source_host.length &&\n        this.playlist.source_username &&\n        this.playlist.source_username.length &&\n        this.playlist.source_password &&\n        this.playlist.source_password.length &&\n        this.editor\n      ) {\n        this.playlistAuth();\n        this.loadGroups();\n      }\n    },\n    \"playlist.url\": function (url) {\n      if (url !== undefined && url.length) {\n        try {\n          let u = new URL(url);\n          this.playlist.source_host = u.hostname;\n          this.playlist.source_port = u.port;\n          this.playlist.source_username = u.searchParams.get(\"username\");\n          this.playlist.source_password = u.searchParams.get(\"password\");\n          if (!this.playlist.name.length) {\n            this.playlist.name = u.hostname.toUpperCase();\n          }\n        } catch {\n          //\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.modal-groups {\n  max-height: 250px;\n  overflow: hidden;\n\n  .ps {\n    max-height: 250px;\n  }\n}\n\n.sync-groups {\n  .checkbox-text {\n    margin-top: 2px;\n  }\n}\n\n.empty-group {\n  text-align: center;\n  color: $separator-color;\n  padding-top: 1rem;\n\n  i {\n    display: block;\n  }\n  p {\n    padding: 0;\n    display: block;\n  }\n}\n\n.backup-button,\n.export-button {\n  display: block;\n  min-width: 250px;\n}\n</style>\n"],"sourceRoot":"src/views/app/xtream"}]}