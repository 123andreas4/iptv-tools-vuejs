{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/index.vue?vue&type=style&index=0&id=bdded194&scoped=true&lang=css&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/index.vue","mtime":1624374482631},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZXBlcmF0b3IucGFnZSB7CiAgbWFyZ2luLWxlZnQ6IDE1cHg7CiAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogIHdpZHRoOiBjYWxjKDEwMCUgLSAzMHB4KTsKfQoucGxheWxpc3Qtc2VsZWN0IHsKICBtaW4td2lkdGg6IDIwMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/app/xtream","sourcesContent":["<template>\n  <erd-row :class=\"{ 'app-row': isXtreamEditor }\">\n    <erd-breadcrumb :items=\"breadcrumb\" :heading=\"heading\">\n      <erd-button\n        class=\"mr-1 py-1 px-2\"\n        icon=\"las la-plus\"\n        @click=\"doAdd\"\n        v-if=\"!editor && !isXtreamEditor\"\n        variant=\"success\"\n        :disabled=\"!canAddPlaylist\"\n        >{{ addButtonText }}</erd-button\n      >\n      <erd-button\n        class=\"mr-1 py-1 px-2\"\n        icon=\"las la-save\"\n        @click=\"doSave\"\n        v-if=\"editor\"\n        variant=\"primary\"\n        :disabled=\"isBusy\"\n        >{{ $t(\"general.save\") }}</erd-button\n      >\n      <erd-button\n        class=\"mr-1 py-1 px-2\"\n        icon=\"las la-times\"\n        @click=\"doCancel\"\n        v-if=\"editor\"\n        variant=\"danger\"\n        :disabled=\"isBusy\"\n        >{{ $t(\"general.cancel\") }}</erd-button\n      >\n      <erd-button\n        class=\"mr-2 py-1 px-2\"\n        icon=\"las la-sync\"\n        @click=\"doRefresh\"\n        v-if=\"!editor && !isXtreamEditor\"\n        >{{ $t(\"general.refresh\") }}</erd-button\n      >\n      <span class=\"text-muted\" v-if=\"!editor && !isXtreamEditor\">{{\n        $t(\"general.from-to-total\").format(\n          this.total > 0 ? this.from + 1 : this.from,\n          this.to,\n          this.total\n        )\n      }}</span>\n      <erd-button\n        class=\"mr-1 py-1 px-2\"\n        icon=\"las la-save\"\n        @click=\"doSave\"\n        v-if=\"isXtreamEditor && editorChanges\"\n        variant=\"primary\"\n        :disabled=\"isBusy\"\n        >{{ $t(\"general.save-changes\") }}</erd-button\n      >\n      <erd-button\n        class=\"mr-3 py-1 px-2\"\n        icon=\"las la-times\"\n        @click=\"doCancel\"\n        v-if=\"isXtreamEditor && editorChanges\"\n        variant=\"danger\"\n        :disabled=\"isBusy\"\n        >{{ $t(\"general.cancel\") }}</erd-button\n      >\n      <erd-select\n        class=\"playlist-select\"\n        v-if=\"isXtreamEditor\"\n        :items=\"editorPlaylists\"\n        v-model=\"editorPlaylist\"\n      ></erd-select>\n    </erd-breadcrumb>\n    <erd-tab\n      :tabs=\"tabsXtream\"\n      v-model=\"activeTab\"\n      v-if=\"isXtreamPlaylists && editor\"\n    ></erd-tab>\n    <erd-tab\n      :tabs=\"tabsMovies\"\n      v-model=\"activeTab\"\n      v-if=\"isXtreamMoviesSeries && editor\"\n    ></erd-tab>\n    <div class=\"seperator page\" v-if=\"showSeperator\"></div>\n    <router-view class=\"px-0 mt-0\"></router-view>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  data() {\n    return {\n      tabsXtream: [\n        this.$t(\"tabs.source\"),\n        this.$t(\"tabs.xtream-api\"),\n        this.$t(\"tabs.sync\"),\n        this.$t(\"tabs.security\"),\n        this.$t(\"tabs.backup\"),\n        this.$t(\"tabs.export\")\n      ],\n      tabsMovies: [this.$t(\"tabs.stream\"), this.$t(\"tabs.tmdb\")],\n      activeTab: 0,\n      from: 0,\n      to: 0,\n      total: 0,\n      editor: false,\n      isLoaded: false,\n      isBusy: false,\n      editorChanges: false,\n      editorPlaylists: [],\n      editorPlaylist: undefined,\n      canAddPlaylist: true,\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\"]),\n    breadcrumb() {\n      let res = [];\n      this.$route.matched.map((item) => {\n        res.push({\n          text: this.$t(`menu.${item.name.toLowerCase()}`),\n          to: item.path !== \"\" ? item.path : \"/\",\n        });\n      });\n      return res;\n    },\n    heading() {\n      let br = this.breadcrumb;\n      return br[br.length - 1].text;\n    },\n    isXtreamPlaylists() {\n      return /\\/xtream\\/playlists/.test(this.$route.path);\n    },\n    isXtreamMoviesSeries() {\n      return (\n        /\\/xtream\\/movies/.test(this.$route.path) ||\n        /\\/xtream\\/series/.test(this.$route.path)\n      );\n    },\n    isXtreamEditor() {\n      return /\\/xtream\\/editor/.test(this.$route.path);\n    },\n    showSeperator() {\n      if (this.isXtreamPlaylists && this.editor) {\n        return false;\n      }\n      if (this.isXtreamMoviesSeries && this.editor) {\n        return false;\n      }\n      return true;\n    },\n    addButtonText() {\n      // Playlist\n      if (/\\/xtream\\/playlists/.test(this.$route.path)) {\n        return this.$t(\"xtream.add-playlist\");\n      }\n      // Group\n      if (/\\/xtream\\/groups/.test(this.$route.path)) {\n        return this.$t(\"xtream.add-group\");\n      }\n      // Live\n      if (/\\/xtream\\/live/.test(this.$route.path)) {\n        return this.$t(\"xtream.add-live-stream\");\n      }\n      // Movie\n      if (/\\/xtream\\/movies/.test(this.$route.path)) {\n        return this.$t(\"xtream.add-movie\");\n      }\n      // Series\n      if (/\\/xtream\\/series/.test(this.$route.path)) {\n        return this.$t(\"xtream.add-series\");\n      }\n      return \"Add\";\n    },\n  },\n  methods: {\n    ...mapActions([\"updateSoundcloudId\"]),\n    updateFrom(from) {\n      this.from = from;\n    },\n    updateTo(to) {\n      this.to = to;\n    },\n    updateTotal(total) {\n      this.total = total;\n    },\n    updateeditor(editor) {\n      if (!editor) {\n        this.activeTab = 0;\n      }\n      this.editor = editor;\n    },\n    updateIsBusy(busy) {\n      this.isBusy = busy;\n    },\n    updateEditorChanges(val) {\n      this.editorChanges = val;\n    },\n    updateCanAddPlaylist(val) {\n      this.canAddPlaylist = val;\n    },\n    doRefresh() {\n      EventBus.$emit(\"refresh\");\n    },\n    doSave() {\n      EventBus.$emit(\"save\");\n    },\n    doCancel() {\n      EventBus.$emit(\"cancel\");\n    },\n    doAdd() {\n      EventBus.$emit(\"add\");\n    },\n    loadPlaylists() {\n      httpService\n        .get(\"playlist/simple\")\n        .then((res) => {\n          if (res.status === true) {\n            this.editorPlaylists = res.data.map((playlist) => {\n              return {\n                text: playlist.name,\n                value: playlist.id,\n              };\n            });\n          }\n        })\n        .catch(() => {\n          this.editorPlaylists = [];\n        });\n    },\n  },\n  watch: {\n    $route: function () {\n      this.to = 0;\n      this.from = 0;\n      this.total = 0;\n      this.activeTab = 0;\n      this.editorPlaylist = undefined;\n      if (this.$route.params.editor !== true) {\n        this.editor = false;\n      }\n    },\n    activeTab: function (tab) {\n      EventBus.$emit(\"tab-change\", tab);\n    },\n    isXtreamEditor: function (val) {\n      if (val) {\n        this.loadPlaylists();\n      }\n    },\n    editorPlaylist: function (val) {\n      EventBus.$emit(\"editor-playlist\", val);\n    },\n  },\n  beforeMount() {\n    this.updateSoundcloudId();\n    if (this.isXtreamEditor) {\n      this.loadPlaylists();\n    }\n    EventBus.$on(\"update-from\", this.updateFrom);\n    EventBus.$on(\"update-to\", this.updateTo);\n    EventBus.$on(\"update-total\", this.updateTotal);\n    EventBus.$on(\"update-editor\", this.updateeditor);\n    EventBus.$on(\"update-busy\", this.updateIsBusy);\n    EventBus.$on(\"editor-changes\", this.updateEditorChanges);\n    EventBus.$on(\"can-add-playlist\", this.updateCanAddPlaylist);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"update-from\", this.updateFrom);\n    EventBus.$off(\"update-to\", this.updateTo);\n    EventBus.$off(\"update-total\", this.updateTotal);\n    EventBus.$off(\"update-editor\", this.updateeditor);\n    EventBus.$off(\"update-busy\", this.updateIsBusy);\n    EventBus.$off(\"editor-changes\", this.updateEditorChanges);\n    EventBus.$off(\"can-add-playlist\", this.updateCanAddPlaylist);\n  },\n};\n</script>\n\n<style scoped>\n.seperator.page {\n  margin-left: 15px;\n  margin-right: 15px;\n  width: calc(100% - 30px);\n}\n.playlist-select {\n  min-width: 200px;\n}\n</style>\n"]}]}