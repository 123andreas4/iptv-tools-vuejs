{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/financial/statistics.vue?vue&type=template&id=59d0379e&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/financial/statistics.vue","mtime":1621076669265},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}