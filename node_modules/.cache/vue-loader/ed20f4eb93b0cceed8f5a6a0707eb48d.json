{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernst/Desktop/IPTV-Tools/src/views/app/financial/statistics.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/views/app/financial/statistics.vue","mtime":1621076669265},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zdGF0aXN0aWNzLWNhcmQgewogIGRpc3BsYXk6IHRhYmxlOwp9Ci5zdGF0aXN0aWNzLWNhcmQtdGl0bGUgewogIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTsKCiAgcCB7CiAgICBmb250LXNpemU6IDFyZW07CiAgICBmb250LXdlaWdodDogYm9sZDsKICB9Cn0KLmNoYXJ0LWNhcmQgewogIGhlaWdodDogMzQwcHg7CgogIC5jaGFydCB7CiAgICBoZWlnaHQ6IDIwMHB4OwogIH0KfQo="},{"version":3,"sources":["statistics.vue"],"names":[],"mappingsgrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"statistics.vue","sourceRoot":"src/views/app/financial","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" sm=\"12\" id=\"statistics\" class=\"p-0\">\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-last-month\") }}</h5>\n                <p class=\"m-0 color-theme-1\">{{ lastMonth.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-last-month\") }}</h5>\n                <p class=\"m-0 color-theme-1\">\n                  {{ formatCurrency(revenueLastMonth) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-this-month\") }}</h5>\n                <p class=\"m-0 text-info\">{{ currentMonth.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-this-month\") }}</h5>\n                <p class=\"m-0 text-info\">\n                  {{ formatCurrency(revenueThisMonth) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.last-month\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ monthName(new Date().getMonth()) }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-day\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"lastMonth.data\"\n                :data=\"lastMonth.data\"\n                :step=\"lastMonth.step\"\n                :min=\"lastMonth.min\"\n                :max=\"lastMonth.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.this-month\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ monthName(new Date().getMonth() + 1) }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-day\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"currentMonth.data\"\n                :data=\"currentMonth.data\"\n                :step=\"currentMonth.step\"\n                :min=\"currentMonth.min\"\n                :max=\"currentMonth.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-last-year\") }}</h5>\n                <p class=\"m-0 color-theme-1\">{{ lastYear.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x color-theme-1\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-last-year\") }}</h5>\n                <p class=\"m-0 color-theme-1\">\n                  {{ formatCurrency(revenueLastYear) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-shopping-basket la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.sales-this-year\") }}</h5>\n                <p class=\"m-0 text-info\">{{ currentYear.sales }}x</p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"3\" md=\"6\">\n          <erd-card>\n            <erd-card-body class=\"statistics-card\">\n              <i class=\"las la-money-bill-alt la-4x text-info\"></i>\n              <div class=\"statistics-card-title\" style=\"\">\n                <h5 class=\"m-0\">{{ $t(\"statistics.revenue-this-year\") }}</h5>\n                <p class=\"m-0 text-info\">\n                  {{ formatCurrency(revenueThisYear) }}\n                </p>\n              </div>\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.last-year\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ new Date().getFullYear() - 1 }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-month\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"lastYear.data\"\n                :data=\"lastYear.data\"\n                :step=\"lastYear.step\"\n                :min=\"lastYear.min\"\n                :max=\"lastYear.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"6\" md=\"12\" sm=\"12\">\n          <erd-card class=\"chart-card\">\n            <erd-card-body>\n              <div class=\"float-left float-none-xs\">\n                <div class=\"d-inline-block\">\n                  <h5 class=\"d-inline\">\n                    {{ $t(\"statistics.this-year\") }}\n                    <span class=\"text-muted text-small text-capitalize\"\n                      >({{ new Date().getFullYear() }})</span\n                    >\n                  </h5>\n                  <span class=\"text-muted text-small d-block\">{{\n                    $t(\"statistics.sales-per-month\")\n                  }}</span>\n                </div>\n              </div>\n            </erd-card-body>\n            <erd-card-body class=\"chart mt-3\">\n              <area-chart\n                v-if=\"currentYear.data\"\n                :data=\"currentYear.data\"\n                :step=\"currentYear.step\"\n                :min=\"currentYear.min\"\n                :max=\"currentYear.max\"\n                :tooltip=\"tooltip\"\n                container-class=\"chart\"\n                shadow\n              />\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\n/* eslint-disable no-unused-vars */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\nimport AreaChart from \"../../../components/Charts/Area\";\nimport { ThemeColors, getDaysInMonth, monthName } from \"../../../helpers\";\n\nconst colors = ThemeColors();\n\nexport default {\n  components: {\n    \"area-chart\": AreaChart,\n  },\n  data() {\n    return {\n      search: null,\n      isLoading: false,\n      statistics: null,\n      lastMonth: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      currentMonth: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      lastYear: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n      currentYear: {\n        min: 0,\n        max: 100,\n        step: 1,\n        data: null,\n        sales: 0,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\"]),\n    revenueLastMonth() {\n      return this.lastMonth.data\n        ? this.lastMonth.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueThisMonth() {\n      return this.currentMonth.data\n        ? this.currentMonth.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueLastYear() {\n      return this.lastYear.data\n        ? this.lastYear.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    revenueThisYear() {\n      return this.currentYear.data\n        ? this.currentYear.data.datasets[0].data.reduce((a, b) => a + b, 0)\n        : 0;\n    },\n    tooltip() {\n      let vm = this;\n      return {\n        displayColors: false,\n        backgroundColor: colors.foregroundColor,\n        titleFontColor: colors.primaryColor,\n        borderColor: colors.separatorColor,\n        borderWidth: 0.5,\n        bodyFontColor: colors.primaryColor,\n        bodySpacing: 10,\n        xPadding: 15,\n        yPadding: 15,\n        cornerRadius: 10,\n        callbacks: {\n          label: function (context) {\n            if (context.datasetIndex === 0) {\n              return `${vm.$t(\"statistics.revenue\")}: ${new Intl.NumberFormat(\n                vm.$t(\"date.locale\"),\n                {\n                  style: \"currency\",\n                  currency: \"EUR\",\n                }\n              ).format(context.value)}`;\n            } else {\n              return `${vm.$t(\"statistics.sales\")}: ${context.value}x`;\n            }\n          },\n        },\n      };\n    },\n  },\n  methods: {\n    monthName(month, length = \"long\") {\n      var objDate = new Date();\n\n      objDate.setDate(1);\n      objDate.setMonth(month - 1);\n\n      return objDate.toLocaleString(this.$t(\"date.locale\"), { month: length });\n    },\n    formatCurrency(num) {\n      return new Intl.NumberFormat(this.$t(\"date.locale\"), {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(num);\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadStatistics() {\n      this.isLoading = true;\n      httpService\n        .get(\"administration/financial-statistics\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.statistics = res.data;\n            this.createLastMonth();\n            this.createThisMonth();\n            this.createLastYear();\n            this.createThisYear();\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"statistics.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    revenueMonthDay(month, day) {\n      let res = this.statistics.revenue[month].find((rev) => rev.day == day);\n      return res ? res.revenue : 0;\n    },\n    salesMonthDay(month, day) {\n      let res = this.statistics.sales[month].find((sale) => sale.day == day);\n      return res ? res.sales : 0;\n    },\n    revenueYearMonth(year, month) {\n      let res = this.statistics.revenue[year].find((rev) => rev.month == month);\n      return res ? res.revenue : 0;\n    },\n    salesYearMonth(year, month) {\n      let res = this.statistics.sales[year].find((sale) => sale.month == month);\n      return res ? res.sales : 0;\n    },\n    createLastMonth() {\n      let d = new Date();\n      let month = d.getMonth();\n      let year = d.getFullYear();\n\n      let days = [...Array(getDaysInMonth(month, year)).keys()].map(\n        (x) => x + 1\n      );\n      let dataRevenue = [...days].map((day) => {\n        return this.revenueMonthDay(\"last_month\", day);\n      });\n      let dataSales = [...days].map((day) => {\n        return this.salesMonthDay(\"last_month\", day);\n      });\n\n      let res = 0;\n      this.statistics.sales.last_month.map((sale) => {\n        res += sale.sales;\n      });\n      this.lastMonth.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.lastMonth.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.lastMonth.max = maxTotal > 10 ? maxTotal : 10;\n      this.lastMonth.data = {\n        labels: days,\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n        ],\n      };\n    },\n    createLastYear() {\n      let months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let dataRevenue = [...months].map((month) => {\n        return this.revenueYearMonth(\"last_year\", month);\n      });\n      let dataSales = [...months].map((month) => {\n        return this.salesYearMonth(\"last_year\", month);\n      });\n\n      let res = 0;\n      this.statistics.sales.last_year.map((sale) => {\n        res += sale.sales;\n      });\n      this.lastYear.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.lastYear.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.lastYear.max = maxTotal > 10 ? maxTotal : 10;\n      this.lastYear.data = {\n        labels: months.map((month) =>\n          this.monthName(month, \"short\").capitalize()\n        ),\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.themeColor1,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.themeColor1,\n            pointHoverBackgroundColor: colors.themeColor1,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.themeColor1_10,\n          },\n        ],\n      };\n    },\n    createThisMonth() {\n      let d = new Date();\n      let month = d.getMonth() + 1;\n      let year = d.getFullYear();\n\n      let days = [...Array(getDaysInMonth(month, year)).keys()].map(\n        (x) => x + 1\n      );\n      let dataRevenue = [...days].map((day) => {\n        return this.revenueMonthDay(\"current_month\", day);\n      });\n      let dataSales = [...days].map((day) => {\n        return this.salesMonthDay(\"current_month\", day);\n      });\n\n      let res = 0;\n      this.statistics.sales.current_month.map((sale) => {\n        res += sale.sales;\n      });\n      this.currentMonth.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.currentMonth.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.currentMonth.max = maxTotal > 10 ? maxTotal : 10;\n      this.currentMonth.data = {\n        labels: days,\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.infoColor,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor,\n            pointHoverBackgroundColor: colors.infoColor,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.infoColor5_10,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor5_10,\n            pointHoverBackgroundColor: colors.infoColor5_10,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n        ],\n      };\n    },\n    createThisYear() {\n      let months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      let dataRevenue = [...months].map((month) => {\n        return this.revenueYearMonth(\"current_year\", month);\n      });\n      let dataSales = [...months].map((month) => {\n        return this.salesYearMonth(\"current_year\", month);\n      });\n\n      let res = 0;\n      this.statistics.sales.current_year.map((sale) => {\n        res += sale.sales;\n      });\n      this.currentYear.sales = res;\n\n      let maxRevenue = Math.max(...dataRevenue);\n      let maxSales = Math.max(...dataSales);\n      let maxTotal = Math.max(maxRevenue, maxSales);\n\n      this.currentYear.step = maxTotal > 10 ? maxTotal / 5 : 1;\n      this.currentYear.max = maxTotal > 10 ? maxTotal : 10;\n      this.currentYear.data = {\n        labels: months.map((month) =>\n          this.monthName(month, \"short\").capitalize()\n        ),\n        datasets: [\n          {\n            label: this.$t(\"statistics.revenue\"),\n            data: dataRevenue,\n            borderColor: colors.infoColor,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor,\n            pointHoverBackgroundColor: colors.infoColor,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n          {\n            label: this.$t(\"statistics.sales\"),\n            data: dataSales,\n            borderColor: colors.infoColor5_10,\n            pointBackgroundColor: colors.foregroundColor,\n            pointBorderColor: colors.infoColor5_10,\n            pointHoverBackgroundColor: colors.infoColor5_10,\n            pointHoverBorderColor: colors.foregroundColor,\n            pointRadius: 4,\n            pointBorderWidth: 2,\n            pointHoverRadius: 5,\n            fill: true,\n            borderWidth: 2,\n            backgroundColor: colors.infoColor1_10,\n          },\n        ],\n      };\n    },\n    searchPayment(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printPayment() {\n      if (this.modal) {\n        document.getElementById(\"modal\").print();\n      } else {\n        document.getElementById(\"payments\").print();\n      }\n    },\n  },\n  beforeMount() {\n    this.loadStatistics();\n    EventBus.$emit(\"hide-all\", true);\n    EventBus.$on(\"search\", this.searchPayment);\n    EventBus.$on(\"print\", this.printPayment);\n    EventBus.$on(\"refresh\", this.loadStatistics);\n  },\n  beforeDestroy() {\n    EventBus.$emit(\"hide-all\", false);\n    EventBus.$off(\"search\", this.searchPayment);\n    EventBus.$off(\"print\", this.printPayment);\n    EventBus.$off(\"refresh\", this.loadStatistics);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.statistics-card {\n  display: table;\n}\n.statistics-card-title {\n  display: table-cell;\n  vertical-align: middle;\n  width: 100%;\n  padding-left: 0.5rem;\n\n  p {\n    font-size: 1rem;\n    font-weight: bold;\n  }\n}\n.chart-card {\n  height: 340px;\n\n  .chart {\n    height: 200px;\n  }\n}\n</style>\n"]}]}