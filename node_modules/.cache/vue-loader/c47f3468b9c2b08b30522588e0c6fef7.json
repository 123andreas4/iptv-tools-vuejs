{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernst/Desktop/IPTV-Tools/src/views/app/app-sources/xmltv.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/views/app/app-sources/xmltv.vue","mtime":1622629984062},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["xmltv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"xmltv.vue","sourceRoot":"src/views/app/app-sources","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" v-if=\"!editor\" id=\"xmltv\">\n      <b-table :items=\"paged\" :fields=\"fields\" striped small>\n        <template v-slot:cell(created)=\"row\">\n          {{ formatDate(row.item.created) }}\n        </template>\n        <template v-slot:cell(last_updated)=\"row\">\n          {{ formatDate(row.item.last_updated) }}\n        </template>\n        <template v-slot:cell(format)=\"row\">\n          {{ $t(`xmltv-formats.${row.item.format}`) }}\n        </template>\n        <template v-slot:cell(url)=\"row\">\n          <a :href=\"row.item.url\" target=\"_blank\">{{ row.item.url }}</a>\n        </template>\n        <template v-slot:cell(country)=\"row\">\n          {{ countryText(row.item.country) }}\n        </template>\n        <template v-slot:cell(sync_interval)=\"row\">\n          {{ $t(`sync-interval.${row.item.sync_interval}`) }}\n        </template>\n        <template v-slot:cell(synced_at)=\"row\">\n          {{\n            row.item.synced_at && row.item.synced_at !== \"0000-00-00 00:00:00\"\n              ? formatDate(row.item.synced_at)\n              : $t(\"general.not-available\")\n          }}\n        </template>\n        <template v-slot:cell(actions)=\"row\">\n          <erd-button\n            variant=\"info\"\n            class=\"btn-table\"\n            :disabled=\"appXmltvSync\"\n            @click=\"syncXmltv(row.item.id)\"\n            ><i class=\"las la-sync\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"primary\"\n            class=\"btn-table\"\n            @click=\"editXmltv(row.item)\"\n            ><i class=\"las la-pen\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"danger\"\n            class=\"btn-table\"\n            @click=\"deleteUser(row.item.id)\"\n            ><i class=\"las la-trash\"></i\n          ></erd-button>\n        </template>\n      </b-table>\n      <b-pagination\n        class=\"w-100 my-3\"\n        size=\"sm\"\n        align=\"center\"\n        :total-rows=\"total\"\n        :per-page=\"perPage\"\n        v-model=\"currentPage\"\n      >\n        <template v-slot:next-text>\n          <i class=\"las la-angle-right\" />\n        </template>\n        <template v-slot:prev-text>\n          <i class=\"las la-angle-left\" />\n        </template>\n        <template v-slot:first-text>\n          <i class=\"las la-angle-double-left\" />\n        </template>\n        <template v-slot:last-text>\n          <i class=\"las la-angle-double-right\" />\n        </template>\n      </b-pagination>\n    </erd-col>\n    <erd-col xl=\"12\" v-if=\"editor\">\n      <label for=\"title\">{{ $t(\"xmltv.title\") }}</label>\n      <erd-input\n        id=\"title\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('xmltv.title')\"\n        v-model=\"editorXmltv.title\"\n      ></erd-input>\n      <label for=\"country\">{{ $t(\"xmltv.country\") }}</label>\n      <erd-select\n        id=\"country\"\n        :items=\"countries\"\n        class=\"w-100 mt-1 mb-2\"\n        v-model=\"editorXmltv.country\"\n      ></erd-select>\n      <label for=\"url\">{{ $t(\"xmltv.url\") }}</label>\n      <erd-input\n        id=\"url\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('xmltv.url')\"\n        v-model=\"editorXmltv.url\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"format\">{{ $t(\"xmltv.format\") }}</label>\n      <erd-select\n        id=\"format\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"editorXmltv.format\"\n        ref=\"xmltv-format\"\n        :items=\"xmltvFormats\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"sync-interval\">{{\n        $t(\"xmltv.sync-interval\")\n      }}</label>\n      <erd-select\n        id=\"sync-interval\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"editorXmltv.sync_interval\"\n        :items=\"syncIntervals\"\n      ></erd-select>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      search: null,\n      isLoading: false,\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 1,\n      editor: false,\n      editorXmltv: null,\n      xmltv: [],\n      fields: [\n        { key: \"id\", label: this.$t(\"xmltv.id\"), sortable: true },\n        {\n          key: \"created\",\n          label: this.$t(\"xmltv.created\"),\n          sortable: true,\n        },\n        {\n          key: \"last_updated\",\n          label: this.$t(\"xmltv.last-updated\"),\n          sortable: true,\n        },\n        { key: \"title\", label: this.$t(\"xmltv.title\"), sortable: true },\n        { key: \"country\", label: this.$t(\"xmltv.country\"), sortable: true },\n        { key: \"url\", label: this.$t(\"xmltv.url\"), sortable: true },\n        { key: \"format\", label: this.$t(\"xmltv.format\"), sortable: true },\n        {\n          key: \"sync_interval\",\n          label: this.$t(\"xmltv.sync-interval\"),\n          sortable: true,\n        },\n        { key: \"synced_at\", label: this.$t(\"xmltv.synced-at\"), sortable: true },\n        { key: \"stations\", label: this.$t(\"xmltv.stations\"), sortable: true },\n        {\n          key: \"actions\",\n          label: this.$t(\"users.actions\"),\n          sortable: false,\n          thClass: \"text-right\",\n          tdClass: \"text-right\",\n        },\n      ],\n      syncIntervals: [\n        { text: this.$t(\"sync-interval.48\"), value: 48 },\n        { text: this.$t(\"sync-interval.24\"), value: 24 },\n        { text: this.$t(\"sync-interval.12\"), value: 12 },\n        { text: this.$t(\"sync-interval.6\"), value: 6 },\n        { text: this.$t(\"sync-interval.1\"), value: 1 },\n      ],\n      xmltvFormats: [\n        { text: this.$t(\"xmltv-formats.1\"), value: 1 },\n        { text: this.$t(\"xmltv-formats.2\"), value: 2 },\n        { text: this.$t(\"xmltv-formats.3\"), value: 3 },\n        { text: this.$t(\"xmltv-formats.4\"), value: 4 },\n      ],\n      countries: [\n        { text: \"Afghanistan\", value: \"AF\" },\n        { text: \"Åland Islands\", value: \"AX\" },\n        { text: \"Albania\", value: \"AL\" },\n        { text: \"Algeria\", value: \"DZ\" },\n        { text: \"American Samoa\", value: \"AS\" },\n        { text: \"AndorrA\", value: \"AD\" },\n        { text: \"Angola\", value: \"AO\" },\n        { text: \"Anguilla\", value: \"AI\" },\n        { text: \"Antarctica\", value: \"AQ\" },\n        { text: \"Antigua and Barbuda\", value: \"AG\" },\n        { text: \"Argentina\", value: \"AR\" },\n        { text: \"Armenia\", value: \"AM\" },\n        { text: \"Aruba\", value: \"AW\" },\n        { text: \"Australia\", value: \"AU\" },\n        { text: \"Austria\", value: \"AT\" },\n        { text: \"Azerbaijan\", value: \"AZ\" },\n        { text: \"Bahamas\", value: \"BS\" },\n        { text: \"Bahrain\", value: \"BH\" },\n        { text: \"Bangladesh\", value: \"BD\" },\n        { text: \"Barbados\", value: \"BB\" },\n        { text: \"Belarus\", value: \"BY\" },\n        { text: \"Belgium\", value: \"BE\" },\n        { text: \"Belize\", value: \"BZ\" },\n        { text: \"Benin\", value: \"BJ\" },\n        { text: \"Bermuda\", value: \"BM\" },\n        { text: \"Bhutan\", value: \"BT\" },\n        { text: \"Bolivia\", value: \"BO\" },\n        { text: \"Bosnia and Herzegovina\", value: \"BA\" },\n        { text: \"Botswana\", value: \"BW\" },\n        { text: \"Bouvet Island\", value: \"BV\" },\n        { text: \"Brazil\", value: \"BR\" },\n        { text: \"British Indian Ocean Territory\", value: \"IO\" },\n        { text: \"Brunei Darussalam\", value: \"BN\" },\n        { text: \"Bulgaria\", value: \"BG\" },\n        { text: \"Burkina Faso\", value: \"BF\" },\n        { text: \"Burundi\", value: \"BI\" },\n        { text: \"Cambodia\", value: \"KH\" },\n        { text: \"Cameroon\", value: \"CM\" },\n        { text: \"Canada\", value: \"CA\" },\n        { text: \"Cape Verde\", value: \"CV\" },\n        { text: \"Cayman Islands\", value: \"KY\" },\n        { text: \"Central African Republic\", value: \"CF\" },\n        { text: \"Chad\", value: \"TD\" },\n        { text: \"Chile\", value: \"CL\" },\n        { text: \"China\", value: \"CN\" },\n        { text: \"Christmas Island\", value: \"CX\" },\n        { text: \"Cocos (Keeling) Islands\", value: \"CC\" },\n        { text: \"Colombia\", value: \"CO\" },\n        { text: \"Comoros\", value: \"KM\" },\n        { text: \"Congo\", value: \"CG\" },\n        { text: \"Congo, The Democratic Republic of the\", value: \"CD\" },\n        { text: \"Cook Islands\", value: \"CK\" },\n        { text: \"Costa Rica\", value: \"CR\" },\n        { text: \"Cote D'Ivoire\", value: \"CI\" },\n        { text: \"Croatia\", value: \"HR\" },\n        { text: \"Cuba\", value: \"CU\" },\n        { text: \"Cyprus\", value: \"CY\" },\n        { text: \"Czech Republic\", value: \"CZ\" },\n        { text: \"Denmark\", value: \"DK\" },\n        { text: \"Djibouti\", value: \"DJ\" },\n        { text: \"Dominica\", value: \"DM\" },\n        { text: \"Dominican Republic\", value: \"DO\" },\n        { text: \"Ecuador\", value: \"EC\" },\n        { text: \"Egypt\", value: \"EG\" },\n        { text: \"El Salvador\", value: \"SV\" },\n        { text: \"Equatorial Guinea\", value: \"GQ\" },\n        { text: \"Eritrea\", value: \"ER\" },\n        { text: \"Estonia\", value: \"EE\" },\n        { text: \"Ethiopia\", value: \"ET\" },\n        { text: \"Falkland Islands (Malvinas)\", value: \"FK\" },\n        { text: \"Faroe Islands\", value: \"FO\" },\n        { text: \"Fiji\", value: \"FJ\" },\n        { text: \"Finland\", value: \"FI\" },\n        { text: \"France\", value: \"FR\" },\n        { text: \"French Guiana\", value: \"GF\" },\n        { text: \"French Polynesia\", value: \"PF\" },\n        { text: \"French Southern Territories\", value: \"TF\" },\n        { text: \"Gabon\", value: \"GA\" },\n        { text: \"Gambia\", value: \"GM\" },\n        { text: \"Georgia\", value: \"GE\" },\n        { text: \"Germany\", value: \"DE\" },\n        { text: \"Ghana\", value: \"GH\" },\n        { text: \"Gibraltar\", value: \"GI\" },\n        { text: \"Greece\", value: \"GR\" },\n        { text: \"Greenland\", value: \"GL\" },\n        { text: \"Grenada\", value: \"GD\" },\n        { text: \"Guadeloupe\", value: \"GP\" },\n        { text: \"Guam\", value: \"GU\" },\n        { text: \"Guatemala\", value: \"GT\" },\n        { text: \"Guernsey\", value: \"GG\" },\n        { text: \"Guinea\", value: \"GN\" },\n        { text: \"Guinea-Bissau\", value: \"GW\" },\n        { text: \"Guyana\", value: \"GY\" },\n        { text: \"Haiti\", value: \"HT\" },\n        { text: \"Heard Island and Mcdonald Islands\", value: \"HM\" },\n        { text: \"Holy See (Vatican City State)\", value: \"VA\" },\n        { text: \"Honduras\", value: \"HN\" },\n        { text: \"Hong Kong\", value: \"HK\" },\n        { text: \"Hungary\", value: \"HU\" },\n        { text: \"Iceland\", value: \"IS\" },\n        { text: \"India\", value: \"IN\" },\n        { text: \"Indonesia\", value: \"ID\" },\n        { text: \"Iran, Islamic Republic Of\", value: \"IR\" },\n        { text: \"Iraq\", value: \"IQ\" },\n        { text: \"Ireland\", value: \"IE\" },\n        { text: \"Isle of Man\", value: \"IM\" },\n        { text: \"Israel\", value: \"IL\" },\n        { text: \"Italy\", value: \"IT\" },\n        { text: \"Jamaica\", value: \"JM\" },\n        { text: \"Japan\", value: \"JP\" },\n        { text: \"Jersey\", value: \"JE\" },\n        { text: \"Jordan\", value: \"JO\" },\n        { text: \"Kazakhstan\", value: \"KZ\" },\n        { text: \"Kenya\", value: \"KE\" },\n        { text: \"Kiribati\", value: \"KI\" },\n        { text: \"Korea, Democratic People'S Republic of\", value: \"KP\" },\n        { text: \"Korea, Republic of\", value: \"KR\" },\n        { text: \"Kuwait\", value: \"KW\" },\n        { text: \"Kyrgyzstan\", value: \"KG\" },\n        { text: \"Lao People'S Democratic Republic\", value: \"LA\" },\n        { text: \"Latvia\", value: \"LV\" },\n        { text: \"Lebanon\", value: \"LB\" },\n        { text: \"Lesotho\", value: \"LS\" },\n        { text: \"Liberia\", value: \"LR\" },\n        { text: \"Libyan Arab Jamahiriya\", value: \"LY\" },\n        { text: \"Liechtenstein\", value: \"LI\" },\n        { text: \"Lithuania\", value: \"LT\" },\n        { text: \"Luxembourg\", value: \"LU\" },\n        { text: \"Macao\", value: \"MO\" },\n        { text: \"Macedonia, The Former Yugoslav Republic of\", value: \"MK\" },\n        { text: \"Madagascar\", value: \"MG\" },\n        { text: \"Malawi\", value: \"MW\" },\n        { text: \"Malaysia\", value: \"MY\" },\n        { text: \"Maldives\", value: \"MV\" },\n        { text: \"Mali\", value: \"ML\" },\n        { text: \"Malta\", value: \"MT\" },\n        { text: \"Marshall Islands\", value: \"MH\" },\n        { text: \"Martinique\", value: \"MQ\" },\n        { text: \"Mauritania\", value: \"MR\" },\n        { text: \"Mauritius\", value: \"MU\" },\n        { text: \"Mayotte\", value: \"YT\" },\n        { text: \"Mexico\", value: \"MX\" },\n        { text: \"Micronesia, Federated States of\", value: \"FM\" },\n        { text: \"Moldova, Republic of\", value: \"MD\" },\n        { text: \"Monaco\", value: \"MC\" },\n        { text: \"Mongolia\", value: \"MN\" },\n        { text: \"Montserrat\", value: \"MS\" },\n        { text: \"Morocco\", value: \"MA\" },\n        { text: \"Mozambique\", value: \"MZ\" },\n        { text: \"Myanmar\", value: \"MM\" },\n        { text: \"Namibia\", value: \"NA\" },\n        { text: \"Nauru\", value: \"NR\" },\n        { text: \"Nepal\", value: \"NP\" },\n        { text: \"Netherlands\", value: \"NL\" },\n        { text: \"Netherlands Antilles\", value: \"AN\" },\n        { text: \"New Caledonia\", value: \"NC\" },\n        { text: \"New Zealand\", value: \"NZ\" },\n        { text: \"Nicaragua\", value: \"NI\" },\n        { text: \"Niger\", value: \"NE\" },\n        { text: \"Nigeria\", value: \"NG\" },\n        { text: \"Niue\", value: \"NU\" },\n        { text: \"Norfolk Island\", value: \"NF\" },\n        { text: \"Northern Mariana Islands\", value: \"MP\" },\n        { text: \"Norway\", value: \"NO\" },\n        { text: \"Oman\", value: \"OM\" },\n        { text: \"Pakistan\", value: \"PK\" },\n        { text: \"Palau\", value: \"PW\" },\n        { text: \"Palestinian Territory, Occupied\", value: \"PS\" },\n        { text: \"Panama\", value: \"PA\" },\n        { text: \"Papua New Guinea\", value: \"PG\" },\n        { text: \"Paraguay\", value: \"PY\" },\n        { text: \"Peru\", value: \"PE\" },\n        { text: \"Philippines\", value: \"PH\" },\n        { text: \"Pitcairn\", value: \"PN\" },\n        { text: \"Poland\", value: \"PL\" },\n        { text: \"Portugal\", value: \"PT\" },\n        { text: \"Puerto Rico\", value: \"PR\" },\n        { text: \"Qatar\", value: \"QA\" },\n        { text: \"Reunion\", value: \"RE\" },\n        { text: \"Romania\", value: \"RO\" },\n        { text: \"Russian Federation\", value: \"RU\" },\n        { text: \"RWANDA\", value: \"RW\" },\n        { text: \"Saint Helena\", value: \"SH\" },\n        { text: \"Saint Kitts and Nevis\", value: \"KN\" },\n        { text: \"Saint Lucia\", value: \"LC\" },\n        { text: \"Saint Pierre and Miquelon\", value: \"PM\" },\n        { text: \"Saint Vincent and the Grenadines\", value: \"VC\" },\n        { text: \"Samoa\", value: \"WS\" },\n        { text: \"San Marino\", value: \"SM\" },\n        { text: \"Sao Tome and Principe\", value: \"ST\" },\n        { text: \"Saudi Arabia\", value: \"SA\" },\n        { text: \"Senegal\", value: \"SN\" },\n        { text: \"Serbia and Montenegro\", value: \"CS\" },\n        { text: \"Seychelles\", value: \"SC\" },\n        { text: \"Sierra Leone\", value: \"SL\" },\n        { text: \"Singapore\", value: \"SG\" },\n        { text: \"Slovakia\", value: \"SK\" },\n        { text: \"Slovenia\", value: \"SI\" },\n        { text: \"Solomon Islands\", value: \"SB\" },\n        { text: \"Somalia\", value: \"SO\" },\n        { text: \"South Africa\", value: \"ZA\" },\n        { text: \"South Georgia and the South Sandwich Islands\", value: \"GS\" },\n        { text: \"Spain\", value: \"ES\" },\n        { text: \"Sri Lanka\", value: \"LK\" },\n        { text: \"Sudan\", value: \"SD\" },\n        { text: \"Suriname\", value: \"SR\" },\n        { text: \"Svalbard and Jan Mayen\", value: \"SJ\" },\n        { text: \"Swaziland\", value: \"SZ\" },\n        { text: \"Sweden\", value: \"SE\" },\n        { text: \"Switzerland\", value: \"CH\" },\n        { text: \"Syrian Arab Republic\", value: \"SY\" },\n        { text: \"Taiwan, Province of China\", value: \"TW\" },\n        { text: \"Tajikistan\", value: \"TJ\" },\n        { text: \"Tanzania, United Republic of\", value: \"TZ\" },\n        { text: \"Thailand\", value: \"TH\" },\n        { text: \"Timor-Leste\", value: \"TL\" },\n        { text: \"Togo\", value: \"TG\" },\n        { text: \"Tokelau\", value: \"TK\" },\n        { text: \"Tonga\", value: \"TO\" },\n        { text: \"Trinidad and Tobago\", value: \"TT\" },\n        { text: \"Tunisia\", value: \"TN\" },\n        { text: \"Turkey\", value: \"TR\" },\n        { text: \"Turkmenistan\", value: \"TM\" },\n        { text: \"Turks and Caicos Islands\", value: \"TC\" },\n        { text: \"Tuvalu\", value: \"TV\" },\n        { text: \"Uganda\", value: \"UG\" },\n        { text: \"Ukraine\", value: \"UA\" },\n        { text: \"United Arab Emirates\", value: \"AE\" },\n        { text: \"United Kingdom\", value: \"GB\" },\n        { text: \"United States\", value: \"US\" },\n        { text: \"United States Minor Outlying Islands\", value: \"UM\" },\n        { text: \"Uruguay\", value: \"UY\" },\n        { text: \"Uzbekistan\", value: \"UZ\" },\n        { text: \"Vanuatu\", value: \"VU\" },\n        { text: \"Venezuela\", value: \"VE\" },\n        { text: \"Viet Nam\", value: \"VN\" },\n        { text: \"Virgin Islands, British\", value: \"VG\" },\n        { text: \"Virgin Islands, U.S.\", value: \"VI\" },\n        { text: \"Wallis and Futuna\", value: \"WF\" },\n        { text: \"Western Sahara\", value: \"EH\" },\n        { text: \"Yemen\", value: \"YE\" },\n        { text: \"Zambia\", value: \"ZM\" },\n        { text: \"Zimbabwe\", value: \"ZW\" },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"appXmltvSync\"]),\n    perPage() {\n      return this.settings.perPage;\n    },\n    searchFiltered() {\n      if (this.search === null) {\n        return this.xmltv;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.xmltv.filter((xmltv) => {\n          return (\n            String(xmltv.title).match(re) ||\n            String(xmltv.country).match(re) ||\n            String(xmltv.notes).match(re) ||\n            String(xmltv.error).match(re) ||\n            String(this.countryText(xmltv.country)).match(re) ||\n            this.formatDate(xmltv.created).match(re) ||\n            this.formatDate(xmltv.last_updated).match(re) ||\n            this.formatDate(xmltv.synced_at).match(re)\n          );\n        });\n      }\n    },\n    paged() {\n      this.total = this.searchFiltered.length;\n      this.from = (this.currentPage - 1) * this.perPage;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.searchFiltered.slice(this.from, this.to);\n    },\n  },\n  methods: {\n    ...mapActions([\"syncXmltv\"]),\n    countryText(country) {\n      let c = this.countries.find((c) => {\n        return c.value === country;\n      });\n      return c ? c.text : \"-\";\n    },\n    updatePerPage(perPage) {\n      this.perPage = perPage;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadXmltv() {\n      this.isLoading = true;\n      httpService\n        .get(\"administration/xmltv\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.xmltv = res.data;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xmltv.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    editXmltv(xmltv) {\n      this.editorXmltv = Object.assign({}, xmltv);\n      this.editor = true;\n    },\n    addXmltv() {\n      this.editorXmltv = {\n        title: \"\",\n        country: \"NL\",\n        url: \"\",\n        format: 1,\n        sync_interval: 24,\n      };\n      this.editor = true;\n    },\n    saveUser() {\n      this.editor = false;\n      let xmltv = Object.assign({}, this.editorXmltv);\n      if (xmltv.id !== undefined) {\n        delete xmltv.id;\n        httpService\n          .post(\"administration/xmltv/update\", {\n            id: this.editorXmltv.id,\n            xmltv: xmltv,\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xmltv.save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n              this.loadXmltv();\n              this.editor = false;\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xmltv.save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      } else {\n        httpService\n          .post(\"administration/xmltv/insert\", xmltv)\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xmltv.save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n              this.loadXmltv();\n              this.editor = false;\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xmltv.save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n    deleteUser(id) {\n      httpService\n        .post(\"administration/xmltv/delete\", { id: id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xmltv.delete-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadXmltv();\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xmltv.delete-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    cancelXmltv() {\n      this.editor = false;\n    },\n    searchXmltv(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printUsers() {\n      document.getElementById(\"xmltv\").print();\n    },\n  },\n  beforeMount() {\n    this.loadXmltv();\n    EventBus.$on(\"refresh\", this.loadXmltv);\n    EventBus.$on(\"save\", this.saveUser);\n    EventBus.$on(\"cancel\", this.cancelXmltv);\n    EventBus.$on(\"search\", this.searchXmltv);\n    EventBus.$on(\"print\", this.printUsers);\n    EventBus.$on(\"add\", this.addXmltv);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"refresh\", this.loadXmltv);\n    EventBus.$off(\"save\", this.saveUser);\n    EventBus.$off(\"cancel\", this.cancelXmltv);\n    EventBus.$off(\"search\", this.searchXmltv);\n    EventBus.$off(\"print\", this.printUsers);\n    EventBus.$off(\"add\", this.addXmltv);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    editor: function (val) {\n      EventBus.$emit(\"update-editor\", val);\n    },\n    appXmltvSync: function () {\n      this.loadXmltv();\n    },\n  },\n};\n</script>\n"]}]}