{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/administration/users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/administration/users.vue","mtime":1620487590487},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIHZ1ZS9uby1zaWRlLWVmZmVjdHMtaW4tY29tcHV0ZWQtcHJvcGVydGllcyAqLwppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIi4uLy4uLy4uL3NlcnZpY2VzL2VidXMiOwppbXBvcnQgeyBodHRwU2VydmljZSB9IGZyb20gIi4uLy4uLy4uL3NlcnZpY2VzL2h0dHAiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaDogbnVsbCwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgZnJvbTogMCwKICAgICAgdG86IDAsCiAgICAgIHRvdGFsOiAwLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgZWRpdG9yOiBmYWxzZSwKICAgICAgZWRpdG9yVXNlcjogbnVsbCwKICAgICAgdXNlcnM6IFtdLAogICAgICBmaWVsZHM6IFsKICAgICAgICB7IGtleTogImlkIiwgbGFiZWw6IHRoaXMuJHQoInVzZXJzLmlkIiksIHNvcnRhYmxlOiB0cnVlIH0sCiAgICAgICAgeyBrZXk6ICJ1c2VybmFtZSIsIGxhYmVsOiB0aGlzLiR0KCJ1c2Vycy51c2VybmFtZSIpLCBzb3J0YWJsZTogdHJ1ZSB9LAogICAgICAgIHsga2V5OiAic3RhdHVzIiwgbGFiZWw6IHRoaXMuJHQoInVzZXJzLnN0YXR1cyIpLCBzb3J0YWJsZTogdHJ1ZSB9LAogICAgICAgIHsga2V5OiAicm9sZSIsIGxhYmVsOiB0aGlzLiR0KCJ1c2Vycy5yb2xlIiksIHNvcnRhYmxlOiB0cnVlIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAiY3JlYXRlZCIsCiAgICAgICAgICBsYWJlbDogdGhpcy4kdCgidXNlcnMuY3JlYXRlZCIpLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJsYXN0X3VwZGF0ZWQiLAogICAgICAgICAgbGFiZWw6IHRoaXMuJHQoInVzZXJzLmxhc3QtdXBkYXRlZCIpLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBrZXk6ICJhY3Rpb25zIiwKICAgICAgICAgIGxhYmVsOiB0aGlzLiR0KCJ1c2Vycy5hY3Rpb25zIiksCiAgICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgICB0aENsYXNzOiAidGV4dC1yaWdodCIsCiAgICAgICAgICB0ZENsYXNzOiAidGV4dC1yaWdodCIsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgc3RhdHVzTGlzdDogWwogICAgICAgIHsgdmFsdWU6IDEsIHRleHQ6IHRoaXMuJHQoInVzZXItc3RhdHVzLjEiKSB9LAogICAgICAgIHsgdmFsdWU6IDIsIHRleHQ6IHRoaXMuJHQoInVzZXItc3RhdHVzLjIiKSB9LAogICAgICAgIHsgdmFsdWU6IDMsIHRleHQ6IHRoaXMuJHQoInVzZXItc3RhdHVzLjMiKSB9LAogICAgICAgIHsgdmFsdWU6IDQsIHRleHQ6IHRoaXMuJHQoInVzZXItc3RhdHVzLjQiKSB9LAogICAgICAgIHsgdmFsdWU6IDUsIHRleHQ6IHRoaXMuJHQoInVzZXItc3RhdHVzLjUiKSB9LAogICAgICBdLAogICAgICByb2xlTGlzdDogWwogICAgICAgIHsgdmFsdWU6IDEsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjEiKSB9LAogICAgICAgIHsgdmFsdWU6IDIsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjIiKSB9LAogICAgICAgIHsgdmFsdWU6IDMsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjMiKSB9LAogICAgICAgIHsgdmFsdWU6IDQsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjQiKSB9LAogICAgICAgIHsgdmFsdWU6IDUsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjUiKSB9LAogICAgICAgIHsgdmFsdWU6IDE5ODUsIHRleHQ6IHRoaXMuJHQoInJvbGVzLjE5ODUiKSB9LAogICAgICBdLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsiY3VycmVudFVzZXIiLCAic2V0dGluZ3MiXSksCiAgICBwZXJQYWdlKCkgewogICAgICByZXR1cm4gdGhpcy5zZXR0aW5ncy5wZXJQYWdlOwogICAgfSwKICAgIHNlYXJjaEZpbHRlcmVkKCkgewogICAgICBpZiAodGhpcy5zZWFyY2ggPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy51c2VyczsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKHRoaXMuc2VhcmNoLCAiaSIpOwogICAgICAgIHJldHVybiB0aGlzLnVzZXJzLmZpbHRlcigodXNlcikgPT4gewogICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgU3RyaW5nKHVzZXIuaWQpLm1hdGNoKHJlKSB8fAogICAgICAgICAgICBTdHJpbmcodXNlci51c2VybmFtZSkubWF0Y2gocmUpIHx8CiAgICAgICAgICAgIFN0cmluZyh1c2VyLmNyZWF0ZWQpLm1hdGNoKHJlKSB8fAogICAgICAgICAgICBTdHJpbmcodXNlci5sYXN0X3VwZGF0ZWQpLm1hdGNoKHJlKSB8fAogICAgICAgICAgICB0aGlzLmZvcm1hdERhdGUodXNlci5jcmVhdGVkKS5tYXRjaChyZSkgfHwKICAgICAgICAgICAgdGhpcy5mb3JtYXREYXRlKHVzZXIubGFzdF91cGRhdGVkKS5tYXRjaChyZSkKICAgICAgICAgICk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBwYWdlZCgpIHsKICAgICAgdGhpcy50b3RhbCA9IHRoaXMuc2VhcmNoRmlsdGVyZWQubGVuZ3RoOwogICAgICB0aGlzLmZyb20gPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5wZXJQYWdlOwogICAgICB0aGlzLnRvID0KICAgICAgICB0aGlzLmZyb20gKyB0aGlzLnBlclBhZ2UgPiB0aGlzLnRvdGFsCiAgICAgICAgICA/IHRoaXMudG90YWwKICAgICAgICAgIDogdGhpcy5mcm9tICsgdGhpcy5wZXJQYWdlOwogICAgICByZXR1cm4gdGhpcy5zZWFyY2hGaWx0ZXJlZC5zbGljZSh0aGlzLmZyb20sIHRoaXMudG8pOwogICAgfSwKICAgIGZpbHRlcmVkUm9sZUxpc3QoKSB7CiAgICAgIGxldCByb2xlcyA9IFsuLi50aGlzLnJvbGVMaXN0XTsKICAgICAgcm9sZXMubWFwKChyb2xlKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuY3VycmVudFVzZXIudXNlci5yb2xlID09PSAxOTg1KSB7CiAgICAgICAgICByb2xlLmRpc2FibGVkID0gZmFsc2U7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChyb2xlLnZhbHVlID09PSAxOTg1KSB7CiAgICAgICAgICAgIHJvbGUuZGlzYWJsZWQgPSB0cnVlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcm9sZS5kaXNhYmxlZCA9IHJvbGUudmFsdWUgPD0gdGhpcy5jdXJyZW50VXNlci51c2VyLnJvbGU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIHJvbGVzOwogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVBlclBhZ2UocGVyUGFnZSkgewogICAgICB0aGlzLnBlclBhZ2UgPSBwZXJQYWdlOwogICAgfSwKICAgIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gbmV3IERhdGUoZGF0ZSkudG9Mb2NhbGVTdHJpbmcoCiAgICAgICAgdGhpcy4kdCgiZGF0ZS5sb2NhbGUiKSwKICAgICAgICB0aGlzLmRhdGVPcHRpb25zCiAgICAgICk7CiAgICB9LAogICAgbG9hZFVzZXJzKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGh0dHBTZXJ2aWNlCiAgICAgICAgLmdldCgiYWRtaW5pc3RyYXRpb24vdXNlcnMiKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgICB0aGlzLnVzZXJzID0gcmVzLmRhdGE7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJG5vdGlmeSgKICAgICAgICAgICAgImVycm9yIiwKICAgICAgICAgICAgdGhpcy4kdCgicHJvZmlsZS5mYWlsZWQiKSwKICAgICAgICAgICAgdGhpcy4kdCgidXNlcnMubG9hZC1lcnJvciIpLAogICAgICAgICAgICAibGEtdXNlci1zaGllbGQiLAogICAgICAgICAgICB7IGR1cmF0aW9uOiA1MDAwLCBwZXJtYW5lbnQ6IGZhbHNlIH0KICAgICAgICAgICk7CiAgICAgICAgfSk7CiAgICB9LAogICAgZWRpdFVzZXIodXNlcikgewogICAgICB0aGlzLmVkaXRvclVzZXIgPSBPYmplY3QuYXNzaWduKHt9LCB1c2VyKTsKICAgICAgdGhpcy5lZGl0b3IgPSB0cnVlOwogICAgfSwKICAgIHNhdmVVc2VyKCkgewogICAgICB0aGlzLmVkaXRvciA9IGZhbHNlOwogICAgICBsZXQgdXNlciA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZWRpdG9yVXNlcik7CiAgICAgIGRlbGV0ZSB1c2VyLmlkOwogICAgICBodHRwU2VydmljZQogICAgICAgIC5wb3N0KCJhZG1pbmlzdHJhdGlvbi91c2VyL3VwZGF0ZSIsIHsKICAgICAgICAgIGlkOiB0aGlzLmVkaXRvclVzZXIuaWQsCiAgICAgICAgICB1c2VyOiB1c2VyLAogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSB0cnVlKSB7CiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSgKICAgICAgICAgICAgICAicHJpbWFyeSIsCiAgICAgICAgICAgICAgdGhpcy4kdCgicHJvZmlsZS5zdWNjZXNzIiksCiAgICAgICAgICAgICAgdGhpcy4kdCgidXNlcnMuc2F2ZS1zdWNjZXNzIiksCiAgICAgICAgICAgICAgImxhLXVzZXItc2hpZWxkIiwKICAgICAgICAgICAgICB7IGR1cmF0aW9uOiA1MDAwLCBwZXJtYW5lbnQ6IGZhbHNlIH0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgdGhpcy5sb2FkVXNlcnMoKTsKICAgICAgICAgICAgdGhpcy5lZGl0b3IgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgdGhpcy4kbm90aWZ5KAogICAgICAgICAgICAiZXJyb3IiLAogICAgICAgICAgICB0aGlzLiR0KCJwcm9maWxlLmZhaWxlZCIpLAogICAgICAgICAgICB0aGlzLiR0KCJ1c2Vycy5zYXZlLWVycm9yIiksCiAgICAgICAgICAgICJsYS11c2VyLXNoaWVsZCIsCiAgICAgICAgICAgIHsgZHVyYXRpb246IDUwMDAsIHBlcm1hbmVudDogZmFsc2UgfQogICAgICAgICAgKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVVc2VyKGlkKSB7CiAgICAgIGh0dHBTZXJ2aWNlCiAgICAgICAgLnBvc3QoImFkbWluaXN0cmF0aW9uL3VzZXIvZGVsZXRlIiwgeyBpZDogaWQgfSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IHRydWUpIHsKICAgICAgICAgICAgdGhpcy4kbm90aWZ5KAogICAgICAgICAgICAgICJwcmltYXJ5IiwKICAgICAgICAgICAgICB0aGlzLiR0KCJwcm9maWxlLnN1Y2Nlc3MiKSwKICAgICAgICAgICAgICB0aGlzLiR0KCJ1c2Vycy5kZWxldGUtc3VjY2VzcyIpLAogICAgICAgICAgICAgICJsYS11c2VyLXNoaWVsZCIsCiAgICAgICAgICAgICAgeyBkdXJhdGlvbjogNTAwMCwgcGVybWFuZW50OiBmYWxzZSB9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHRoaXMubG9hZFVzZXJzKCk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJG5vdGlmeSgKICAgICAgICAgICAgImVycm9yIiwKICAgICAgICAgICAgdGhpcy4kdCgicHJvZmlsZS5mYWlsZWQiKSwKICAgICAgICAgICAgdGhpcy4kdCgidXNlcnMuZGVsZXRlLWVycm9yIiksCiAgICAgICAgICAgICJsYS11c2VyLXNoaWVsZCIsCiAgICAgICAgICAgIHsgZHVyYXRpb246IDUwMDAsIHBlcm1hbmVudDogZmFsc2UgfQogICAgICAgICAgKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBjYW5jZWxVc2VyKCkgewogICAgICB0aGlzLmVkaXRvciA9IGZhbHNlOwogICAgfSwKICAgIHVzZXJQcm9maWxlKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAicHJvZmlsZXMiLAogICAgICAgIHBhcmFtczogeyBlZGl0b3I6IHRydWUsIGlkOiBpZCB9LAogICAgICB9KTsKICAgIH0sCiAgICB1c2VyU3Vic2NyaXB0aW9uKGlkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAic3Vic2NyaXB0aW9ucyIsCiAgICAgICAgcGFyYW1zOiB7IGVkaXRvcjogdHJ1ZSwgaWQ6IGlkIH0sCiAgICAgIH0pOwogICAgfSwKICAgIHNlYXJjaFVzZXIoc2VhcmNoKSB7CiAgICAgIGlmIChzZWFyY2gubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy5zZWFyY2ggPSBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VhcmNoID0gc2VhcmNoOwogICAgICB9CiAgICB9LAogICAgcHJpbnRVc2VycygpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInVzZXJzIikucHJpbnQoKTsKICAgIH0sCiAgfSwKICBiZWZvcmVNb3VudCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuZWRpdG9yICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIGh0dHBTZXJ2aWNlCiAgICAgICAgLmdldCgiYWRtaW5pc3RyYXRpb24vdXNlcnMiKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgICAgICB0aGlzLnVzZXJzID0gcmVzLmRhdGE7CiAgICAgICAgICAgIGxldCB1c2VyID0gdGhpcy51c2Vycy5maW5kKAogICAgICAgICAgICAgICh1c2VyKSA9PiB1c2VyLmlkID09PSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgICAgICAgKTsKICAgICAgICAgICAgaWYgKHVzZXIpIHsKICAgICAgICAgICAgICB0aGlzLmVkaXRVc2VyKHVzZXIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJG5vdGlmeSgKICAgICAgICAgICAgImVycm9yIiwKICAgICAgICAgICAgdGhpcy4kdCgicHJvZmlsZS5mYWlsZWQiKSwKICAgICAgICAgICAgdGhpcy4kdCgidXNlcnMubG9hZC1lcnJvciIpLAogICAgICAgICAgICAibGEtdXNlci1zaGllbGQiLAogICAgICAgICAgICB7IGR1cmF0aW9uOiA1MDAwLCBwZXJtYW5lbnQ6IGZhbHNlIH0KICAgICAgICAgICk7CiAgICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmxvYWRVc2VycygpOwogICAgfQogICAgRXZlbnRCdXMuJG9uKCJyZWZyZXNoIiwgdGhpcy5sb2FkVXNlcnMpOwogICAgRXZlbnRCdXMuJG9uKCJzYXZlIiwgdGhpcy5zYXZlVXNlcik7CiAgICBFdmVudEJ1cy4kb24oImNhbmNlbCIsIHRoaXMuY2FuY2VsVXNlcik7CiAgICBFdmVudEJ1cy4kb24oInNlYXJjaCIsIHRoaXMuc2VhcmNoVXNlcik7CiAgICBFdmVudEJ1cy4kb24oInByaW50IiwgdGhpcy5wcmludFVzZXJzKTsKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBFdmVudEJ1cy4kb2ZmKCJyZWZyZXNoIiwgdGhpcy5sb2FkVXNlcnMpOwogICAgRXZlbnRCdXMuJG9mZigic2F2ZSIsIHRoaXMuc2F2ZVVzZXIpOwogICAgRXZlbnRCdXMuJG9mZigiY2FuY2VsIiwgdGhpcy5jYW5jZWxVc2VyKTsKICAgIEV2ZW50QnVzLiRvZmYoInNlYXJjaCIsIHRoaXMuc2VhcmNoVXNlcik7CiAgICBFdmVudEJ1cy4kb2ZmKCJwcmludCIsIHRoaXMucHJpbnRVc2Vycyk7CiAgfSwKICB3YXRjaDogewogICAgZnJvbTogZnVuY3Rpb24gKHZhbCkgewogICAgICBFdmVudEJ1cy4kZW1pdCgidXBkYXRlLWZyb20iLCB2YWwpOwogICAgfSwKICAgIHRvOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCJ1cGRhdGUtdG8iLCB2YWwpOwogICAgfSwKICAgIHRvdGFsOiBmdW5jdGlvbiAodmFsKSB7CiAgICAgIEV2ZW50QnVzLiRlbWl0KCJ1cGRhdGUtdG90YWwiLCB2YWwpOwogICAgfSwKICAgIGVkaXRvcjogZnVuY3Rpb24gKHZhbCkgewogICAgICBFdmVudEJ1cy4kZW1pdCgidXBkYXRlLWVkaXRvciIsIHZhbCk7CiAgICB9LAogIH0sCn07Cg=="},null]}