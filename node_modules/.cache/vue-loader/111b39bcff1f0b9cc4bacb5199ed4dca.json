{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Form/ERDCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/components/Form/ERDCheckbox.vue","mtime":1622373188938},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBtb2RlbDogewogICAgcHJvcDogIm1vZGVsVmFsdWUiLAogICAgZXZlbnQ6ICJjaGFuZ2UiLAogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICB9LAogICAgbW9kZWxWYWx1ZTogewogICAgICBkZWZhdWx0OiAiIiwKICAgIH0sCiAgICB0cnVlVmFsdWU6IHsKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCiAgICBmYWxzZVZhbHVlOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIGRpc2FibGVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0NoZWNrZWQoKSB7CiAgICAgIGlmICh0aGlzLm1vZGVsVmFsdWUgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIHJldHVybiB0aGlzLm1vZGVsVmFsdWUuaW5jbHVkZXModGhpcy52YWx1ZSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMubW9kZWxWYWx1ZSA9PT0gdGhpcy50cnVlVmFsdWU7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlSW5wdXQoZXZlbnQpIHsKICAgICAgbGV0IGlzQ2hlY2tlZCA9IGV2ZW50LnRhcmdldC5jaGVja2VkOwogICAgICBpZiAodGhpcy5tb2RlbFZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHsKICAgICAgICBsZXQgbmV3VmFsdWUgPSBbLi4udGhpcy5tb2RlbFZhbHVlXTsKICAgICAgICBpZiAoaXNDaGVja2VkKSB7CiAgICAgICAgICBuZXdWYWx1ZS5wdXNoKHRoaXMudmFsdWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBuZXdWYWx1ZS5zcGxpY2UobmV3VmFsdWUuaW5kZXhPZih0aGlzLnZhbHVlKSwgMSk7CiAgICAgICAgfQogICAgICAgIHRoaXMuJGVtaXQoImNoYW5nZSIsIG5ld1ZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCJjaGFuZ2UiLCBpc0NoZWNrZWQgPyB0aGlzLnRydWVWYWx1ZSA6IHRoaXMuZmFsc2VWYWx1ZSk7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["ERDCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ERDCheckbox.vue","sourceRoot":"src/components/Form","sourcesContent":["<template>\n  <label class=\"erd-checkbox\" :class=\"{ disabled: disabled }\">\n    <div class=\"checkbox-text\"><slot></slot></div>\n    <input\n      class=\"checkbox\"\n      type=\"checkbox\"\n      :checked=\"isChecked\"\n      :value=\"value\"\n      @change=\"updateInput\"\n      :disabled=\"disabled\"\n    />\n    <span class=\"checkmark\"></span>\n  </label>\n</template>\n\n<script>\nexport default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\",\n  },\n  props: {\n    value: {\n      type: [String, Number],\n    },\n    modelValue: {\n      default: \"\",\n    },\n    trueValue: {\n      default: true,\n    },\n    falseValue: {\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      return this.modelValue === this.trueValue;\n    },\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.erd-checkbox {\n  max-height: 1rem;\n}\n</style>\n"]}]}