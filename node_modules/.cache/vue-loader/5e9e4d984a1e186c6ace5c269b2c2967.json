{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/versions.vue?vue&type=style&index=0&id=20005c72&scoped=true&lang=scss&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/versions.vue","mtime":1626025216788},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52ZXJzaW9uLWl0ZW0gewoKICAudmVyc2lvbi10YWdzIHsKICAgIHdpZHRoOiAxMjBweDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB9CgogIC52ZXJzaW9uLXRleHQgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEyMHB4KTsKCiAgICBwOmZpcnN0LWNoaWxkIHsKICAgICAgbWFyZ2luLXRvcDogMC41cmVtICFpbXBvcnRhbnQ7CiAgICB9CiAgfQoKfQo="},{"version":3,"sources":["versions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"versions.vue","sourceRoot":"src/views/app/user","sourcesContent":["<template>\n  <erd-row>\n    <erd-col xl=\"12\" class=\"pl-0 m-0\" id=\"versions\">\n      <transition name=\"fade\">\n        <!-- Versions -->\n        <erd-row class=\"p-0 m-0\">\n          <erd-col xl=\"12\" v-for=\"(version, index) in searchFiltered\" :key=\"`version-${version.id}-col-${index}`\">\n            <erd-collapse :title=\"version.version\" :subtitle=\"formatDate(version.created)\" :key=\"`version-${index}`\">\n              <div class=\"version-item\" v-for=\"(item, itemindex) in version.items\" :key=\"`version-${index}-item-${itemindex}`\">\n                <div class=\"version-tags\">\n                  <erd-badge :variant=\"item.tag.variant\"><i class=\"las mr-1\" :class=\"item.tag.icon\"></i>{{ item.tag.text }}</erd-badge>\n                </div>\n                <div class=\"version-text\">\n                  <p class=\"my-1\">{{ item.text }}</p>\n                </div>\n              </div>\n            </erd-collapse>\n          </erd-col>\n        </erd-row>\n      </transition>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\nimport { EventBus } from \"../../../services/ebus\";\nimport { mapGetters } from \"vuex\";\nimport { httpService } from \"../../../services/http\";\n\nexport default {\n  data() {\n    return {\n      isLoading: false,\n      dateOptions: { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' },\n      versions: [],\n      search: \"\",\n    };\n  },\n  computed: {\n    ...mapGetters({\n      settings: \"settings\",\n    }),\n    searchFiltered() {\n      if (this.search === null) {\n        return this.versions;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.versions.filter((version) => {\n          return (\n            String(version.version).match(re) ||\n            version.items.find(item => {\n              return String(item.text).match(re)\n            })\n          )\n        });\n      }\n    },\n  },\n  methods: {\n    pagePrint() {\n      document.getElementById(\"versions\").print();\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadVersions() {\n      this.isLoading = true;\n      httpService.get(\"versions\").then((res) => {\n        if (res.status === true) {\n          this.versions = res.data;\n          this.isLoading = false;\n        }\n      });\n    },\n    searchVersion(search) {\n      this.search = search;\n    }\n  },\n  beforeMount() {\n    this.loadVersions();\n    EventBus.$on(\"print\", this.pagePrint);\n    EventBus.$on(\"search\", this.searchVersion);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.pagePrint);\n    EventBus.$off(\"search\", this.searchVersion);\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.version-item {\n\n  .version-tags {\n    width: 120px;\n    display: inline-block;\n  }\n\n  .version-text {\n    display: inline-block;\n    width: calc(100% - 120px);\n\n    p:first-child {\n      margin-top: 0.5rem !important;\n    }\n  }\n\n}\n</style>\n"]}]}