{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/movies/search.vue?vue&type=style&index=0&id=e79f0ad2&scoped=true&lang=scss&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/movies/search.vue","mtime":1624645039730},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1vdmllLWRldGFpbHMtcG9zdGVyIHsKfQo="},{"version":3,"sources":["search.vue"],"names":[],"mappingsujBA;AACA","file":"search.vue","sourceRoot":"src/views/app/movies","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <!--  \n\n      XD-PRO DOWNLOAD\n\n    -->\n    <erd-modal\n      v-show=\"xdPro.modal\"\n      @close=\"downloadModal(false)\"\n      :title=\"$t('xd-pro.xd-pro')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\" style=\"min-height: 250px;\">\n        <label class=\"w-100\">{{ $t(\"xd-pro.xd-pro-instance\") }}</label>\n        <erd-select class=\"mt-1 mb-2 w-100\" v-model=\"xdPro.xdpro_id\" :items=\"xdProInstanceItems\"></erd-select>\n        <label class=\"w-100\">{{ $t(\"xd-pro.download-folder\") }}</label>\n        <erd-input class=\"mt-1 mb-2 w-100\" v-model=\"xdPro.download_folder\"></erd-input>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"downloadModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" :disabled=\"xdPro.xdpro_id == 0\" @click=\"downloadModal(false, true)\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" v-if=\"!viewer\">\n      <label class=\"d-block\" for=\"search-movies\">{{ $t(\"menu.search\") }}</label>\n      <erd-input class=\"mt-1 mb-2 w-100\" id=\"search-movies\" :placeholder=\"$t('menu.search')\" v-model=\"movieSearch\"></erd-input>\n    </erd-col>\n    <erd-col xl=\"12\" class=\"m-0 p-0\" v-if=\"viewer\" id=\"movies\">\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"4\" md=\"4\">\n          <erd-card class=\"movie-details-poster\">\n            <img\n              class=\"movie-poster\"\n              :src=\"\n                viewerMovie.tmdb.poster_path && viewerMovie.tmdb.poster_path.length\n                  ? `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${viewerMovie.tmdb.poster_path}`\n                  : viewerMovie.stream_icon\n              \"\n            />\n            <erd-card-body>\n              <h3 class=\"mt-0 mb-1\">\n                {{ viewerMovie.tmdb.title }}\n                <span class=\"float-right\"\n                  ><span class=\"color-theme-1\">{{\n                    viewerMovie.tmdb.vote_average\n                  }}</span\n                  ><span>/10</span></span\n                >\n              </h3>\n              <p class=\"mt-0 text-small text-muted\">\n                {{ formatSeconds(viewerMovie.tmdb.runtime * 60) }}\n              </p>\n              <div class=\"genres\">\n                <span\n                  class=\"genre\"\n                  v-for=\"(genre, index) in viewerMovie.tmdb.genres\"\n                  :key=\"`genre-${viewerMovie.tmdb.title}-${index}`\"\n                  >{{ genre.name }}</span\n                >\n              </div>\n              <p class=\"color-theme-1 mt-1\">\n                {{ formatDate(viewerMovie.tmdb.release_date) }}\n              </p>\n              <p>{{ viewerMovie.tmdb.overview }}</p>\n              <div class=\"keywords py-1\">\n                <span\n                  class=\"keyword\"\n                  v-for=\"(keyword, index) in viewerMovie.tmdb_keywords\"\n                  :key=\"`keyword-${viewerMovie.tmdb.title}-${index}`\"\n                  >{{ keyword.name }}</span\n                >\n              </div>\n              <a\n                class=\"d-block mt-2 text-truncate\"\n                :href=\"viewerMovie.tmdb.homepage\"\n                target=\"_blank\"\n                v-if=\"viewerMovie.tmdb.homepage.length\"\n                >{{ viewerMovie.tmdb.homepage }}</a\n              >\n              <a\n                class=\"d-block text-truncate\"\n                :href=\"`https://www.themoviedb.org/movie/${viewerMovie.tmdb_id}`\"\n                target=\"_blank\"\n                >{{\n                  `https://www.themoviedb.org/movie/${viewerMovie.tmdb_id}`\n                }}</a\n              >\n              <erd-button\n                dense\n                class=\"my-3\"\n                icon=\"la-download\"\n                @click=\"downloadModal(true)\"\n                v-if=\"canDownload\"\n                >{{ $t(\"movies.download\") }}</erd-button\n              >\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"8\" md=\"8\" class=\"m-0 p-0\">\n          <erd-row class=\"m-0 p-0\">\n            <erd-col xl=\"12\">\n              <div class=\"movie-view-card\">\n                <vue-plyr>\n                  <video\n                    controls\n                    playsinline\n                    :data-poster=\"`https://www.themoviedb.org/t/p/original/${viewerMovie.tmdb.backdrop_path}`\"\n                  >\n                    <source :src=\"movieURL\" :type=\"movieVideoType\" />\n                  </video>\n                </vue-plyr>\n              </div>\n            </erd-col>\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"filteredVideos.length\">\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"movies.videos-trailers\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"6\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(video, index) in filteredVideos\"\n                  :key=\"`video-${index}`\"\n                >\n                  <div class=\"video-card\">\n                    <vue-plyr>\n                      <div\n                        data-plyr-provider=\"youtube\"\n                        :data-plyr-embed-id=\"video.key\"\n                      ></div>\n                    </vue-plyr>\n                  </div>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col\n              xl=\"12\"\n              class=\"p-0 m-0\"\n              v-if=\"filteredCast && filteredCast.length\"\n            >\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"movies.main-characters\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"3\"\n                  md=\"4\"\n                  sm=\"6\"\n                  v-for=\"(cast, index) in filteredCast\"\n                  :key=\"`cast-${index}`\"\n                >\n                  <erd-card class=\"cast-card\">\n                    <img\n                      class=\"profile\"\n                      :src=\"`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`\"\n                    />\n                    <erd-card-body class=\"py-1\">\n                      <p>\n                        <span class=\"color-theme-1\">{{ cast.character }}</span\n                        ><br /><span class=\"text-small text-muted\">{{\n                          cast.name\n                        }}</span>\n                      </p>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"viewerMovie.tmdb_similar.length\">\n              <h5 class=\"mt-3 mb-0 ml-3\">{{ $t(\"movies.similar-movies\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"4\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(movie, index) in filteredSimilar\"\n                  :key=\"`movie-${movie.id}-${index}`\"\n                >\n                  <erd-card class=\"movie-card depth-2\">\n                    <div class=\"poster\">\n                      <img\n                        class=\"movie-poster\"\n                        :src=\"\n                          movie.poster_path &&\n                          movie.poster_path.length\n                            ? `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`\n                            : movie.stream_icon\n                        \"\n                      />\n                      <span class=\"score\">{{ movie.vote_average }}</span>\n                    </div>\n                    <erd-card-body class=\"py-3\">\n                      <h5 class=\"m-0\">{{ movie.title }}</h5>\n                      <p class=\"m-0 text-muted text-small\">\n                        {{ formatDate(movie.release_date) }}\n                      </p>\n                      <div class=\"genres mt-2\">\n                        <span\n                          class=\"genre\"\n                          v-for=\"(genre, index) in movie.genres\"\n                          :key=\"`genre-${movie.title}-${index}`\"\n                          >{{ genre.name }}</span\n                        >\n                      </div>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n          </erd-row>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n    <erd-row class=\"m-0 p-0\" v-else id=\"movies\">\n      <erd-col xl=\"12\" xs=\"12\" v-if=\"topRatedMovies.length === 0\">\n        <p class=\"text-center text-muted\">\n          {{ $t(\"movies.no-movies\") }}\n        </p>\n      </erd-col>\n      <erd-col\n        xl=\"3\"\n        lg=\"4\"\n        md=\"6\"\n        xs=\"12\"\n        v-for=\"(movie, index) in pagedMovies\"\n        :key=\"`popular-${index}`\"\n      >\n        <erd-card class=\"movie-card depth-2\">\n          <div class=\"poster\">\n            <button class=\"more-button\" @click=\"viewDetails(movie)\">\n              <i class=\"las la-ellipsis-h\"></i>\n            </button>\n            <img\n              class=\"movie-poster\"\n              :src=\"`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${movie.tmdb.poster_path}`\"\n            />\n            <span class=\"score\">{{ movie.tmdb.vote_average }}</span>\n          </div>\n          <erd-card-body class=\"py-3\">\n            <h5 class=\"m-0\">\n              <a href=\"#\" @click.prevent=\"viewDetails(movie)\">{{\n                movie.tmdb.title\n              }}</a>\n            </h5>\n            <p class=\"m-0 text-muted text-small\">\n              {{ formatDate(movie.tmdb.release_date) }}\n            </p>\n            <div class=\"genres mt-2\">\n              <span\n                class=\"genre\"\n                v-for=\"(genre, index) in movie.tmdb.genres\"\n                :key=\"`genre-${movie.tmdb.title}-${index}`\"\n                >{{ genre.name }}</span\n              >\n            </div>\n          </erd-card-body>\n        </erd-card>\n      </erd-col>\n    </erd-row>\n    <b-pagination\n      v-if=\"!viewer\"\n      class=\"w-100 my-3\"\n      size=\"sm\"\n      align=\"center\"\n      :total-rows=\"total\"\n      :per-page=\"perPage\"\n      v-model=\"currentPage\"\n    >\n      <template v-slot:next-text>\n        <i class=\"las la-angle-right\" />\n      </template>\n      <template v-slot:prev-text>\n        <i class=\"las la-angle-left\" />\n      </template>\n      <template v-slot:first-text>\n        <i class=\"las la-angle-double-left\" />\n      </template>\n      <template v-slot:last-text>\n        <i class=\"las la-angle-double-right\" />\n      </template>\n    </b-pagination>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      viewerMovie: null,\n      viewer: false,\n      search: null,\n      isLoading: false,\n      loadingText: \"\",\n      topRatedMovies: [],\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 0,\n      movieSearch: \"\",\n      bounce: null,\n      xdPro: {\n        modal: false,\n        xdpro_id: 0,\n        download_folder: \"\",\n      }\n    };\n  },\n  computed: {\n    ...mapGetters([\"xdProInstances\", \"settings\", \"currentUser\", \"movieSeriePlaylist\"]),\n    canDownload() {\n      return this.xdProInstances && this.xdProInstances.length > 0;\n    },\n    filteredMovies() {\n      if (this.search === null) {\n        return this.topRatedMovies;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.topRatedMovies.filter((movie) => {\n          return (\n            String(movie.title).match(re) ||\n            String(movie.url).match(re) ||\n            String(movie.year).match(re) ||\n            String(movie.tmdb_id).match(re) ||\n            String(movie.tmdb.original_title).match(re) ||\n            String(movie.tmdb.overview).match(re) ||\n            this.formatDate(movie.tmdb.release_date).match(re)\n          );\n        });\n      }\n    },\n    filteredCast() {\n      return this.viewerMovie.tmdb_credits.cast\n        .filter((cast) => {\n          return cast.profile_path && cast.profile_path.length;\n        })\n        .slice(0, 8);\n    },\n    filteredSimilar() {\n      return this.viewerMovie.tmdb_similar.slice(0, 6);\n    },\n    filteredVideos() {\n      return this.viewerMovie.tmdb_videos.slice(0, 2);\n    },\n    movieURL() {\n      return this.viewerMovie.source_stream_url && this.viewerMovie.source_stream_url.length ? this.viewerMovie.source_stream_url : this.viewerMovie.xtream_url;\n    },\n    movieVideoType() {\n      if (this.viewerMovie.source_container_extension.toLowerCase() == \"mkv\") {\n        return \"video/webm\";\n      } else {\n        return \"video/mp4\";\n      }\n    },\n    perPage() {\n      return this.settings.perPage;\n    },\n    pagedMovies() {\n      this.total = this.filteredMovies.length;\n      this.from = (this.currentPage - 1) * this.perPage || 0;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.filteredMovies.slice(this.from, this.to);\n    },\n    xdProInstanceItems() {\n      return this.xdProInstances.map(instance => {\n        return {\n          text: instance.name,\n          value: instance.id,\n        }\n      })\n    }\n  },\n  methods: {\n    ...mapActions([\"updateTMDBGenres\", \"addxdProDownload\"]),\n    closeViewer() {\n      this.viewer = false;\n    },\n    viewDetails(movie) {\n      this.viewerMovie = movie;\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      this.viewer = true;\n    },\n    allProgress(proms, progress_cb) {\n      let d = 0;\n      progress_cb(0);\n      for (const p of proms) {\n        p.then(()=> {    \n          d ++;\n          progress_cb( (d * 100) / proms.length );\n        });\n      }\n      return Promise.all(proms);\n    },\n    loadMovies(search) {\n      if (!this.movieSeriePlaylist) {\n        return;\n      }\n      if (search == null || !search.length) {\n        this.topRatedMovies = [];\n        return;\n      }\n      this.isLoading = true;\n      httpService.get(`movies/search/${this.movieSeriePlaylist}/${encodeURI(search)}`)\n      .then(res => {\n        if (res.status === true) {\n          let movies = [...res.data];\n          movies.sort((a, b) => {\n            return (\n              new Date(b.tmdb.release_date) - new Date(a.tmdb.release_date)\n            );\n          });\n          this.topRatedMovies = movies;\n        }\n        this.isLoading = false;\n      });\n    },\n    pagePrint() {\n      document.getElementById(\"movies\").print();\n    },\n    keywords(index) {\n      return this.$t(`faq.${index}-keywords`).split(\",\");\n    },\n    searchMovie(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n    downloadModal(show, save = false) {\n      if (save) {\n        let download = {\n          user_id: this.currentUser.user.id,\n          xdpro_id: this.xdPro.xdpro_id,\n          filename: `${this.viewerMovie.movie_name} (${this.viewerMovie.movie_year}).${this.viewerMovie.source_container_extension}`,\n          file_extension: this.viewerMovie.source_container_extension,\n          type: 1,\n          enabled: 0,\n          download_folder: this.xdPro.download_folder\n        };\n        if (this.viewerMovie.source_stream_url && this.viewerMovie.source_stream_url.length) {\n          download.download_url = this.viewerMovie.source_stream_url\n          download.download_host = \"\";\n          download.download_port = \"\";\n          download.download_username = \"\";\n          download.download_password = \"\";\n        } else {\n          download.download_url = this.viewerMovie.xtream_url;\n          let u = new URL(this.viewerMovie.xtream_url);\n          download.download_host = u.hostname;\n          download.download_port = u.port;\n          let p = u.pathname.split(\"/\");\n          download.download_username = p[2];\n          download.download_password = p[3];\n        }\n        this.addxdProDownload(download)\n          .then(res => {\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xd-pro.download-save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          })\n          .catch(() => {\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xd-pro.download-save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          })\n      }\n      this.xdPro.modal = show;\n    },\n  },\n  beforeMount() {\n    this.updateTMDBGenres({ source: \"movie\", language: this.$t(\"date.tmdb\") });\n    EventBus.$on(\"print\", this.pagePrint);\n    EventBus.$on(\"search\", this.searchMovie);\n    EventBus.$on(\"close-viewer\", this.closeViewer);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.pagePrint);\n    EventBus.$off(\"search\", this.searchMovie);\n    EventBus.$off(\"close-viewer\", this.closeViewer);\n  },\n  watch: {\n    viewer: function (val) {\n      EventBus.$emit(\"update-viewer\", val);\n    },\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    movieSearch: function (val) {\n      let vm = this;\n      clearTimeout(this.bounce);\n      this.bounce = setTimeout(function () {\n        vm.loadMovies(val);\n      }, 500);\n    },\n    \"xdPro.xdpro_id\": function (val) {\n      let instance = this.xdProInstances.find(instance => {\n        return instance.id == val;\n      });\n      if (instance) {\n        this.xdPro.download_folder = instance.download_folder;\n      }\n    }\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.movie-details-poster {\n}\n</style>\n"]}]}