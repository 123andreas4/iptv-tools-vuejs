{"remainingRequest":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernst/Desktop/IPTV-Tools/src/components/Form/ERDCheckbox.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ernst/Desktop/IPTV-Tools/src/components/Form/ERDCheckbox.vue","mtime":1622373188938},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernst/Desktop/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lcmQtY2hlY2tib3ggewogIG1heC1oZWlnaHQ6IDFyZW07Cn0K"},{"version":3,"sources":["ERDCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA","file":"ERDCheckbox.vue","sourceRoot":"src/components/Form","sourcesContent":["<template>\n  <label class=\"erd-checkbox\" :class=\"{ disabled: disabled }\">\n    <div class=\"checkbox-text\"><slot></slot></div>\n    <input\n      class=\"checkbox\"\n      type=\"checkbox\"\n      :checked=\"isChecked\"\n      :value=\"value\"\n      @change=\"updateInput\"\n      :disabled=\"disabled\"\n    />\n    <span class=\"checkmark\"></span>\n  </label>\n</template>\n\n<script>\nexport default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\",\n  },\n  props: {\n    value: {\n      type: [String, Number],\n    },\n    modelValue: {\n      default: \"\",\n    },\n    trueValue: {\n      default: true,\n    },\n    falseValue: {\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      return this.modelValue === this.trueValue;\n    },\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.erd-checkbox {\n  max-height: 1rem;\n}\n</style>\n"]}]}