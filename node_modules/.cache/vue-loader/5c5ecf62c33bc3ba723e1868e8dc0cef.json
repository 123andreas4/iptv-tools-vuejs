{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/series/browse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/series/browse.vue","mtime":1625149971090},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["browse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"browse.vue","sourceRoot":"src/views/app/series","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <!--  \n\n      XD-PRO DOWNLOAD\n\n    -->\n    <erd-modal\n      v-show=\"xdPro.modal\"\n      @close=\"downloadModal(false)\"\n      :title=\"$t('xd-pro.xd-pro')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"xd-pro.xd-pro-instance\") }}</label>\n        <erd-select\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xdPro.xdpro_id\"\n          :items=\"xdProInstanceItems\"\n        ></erd-select>\n        <label class=\"w-100\">{{ $t(\"xd-pro.download-folder\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xdPro.download_folder\"\n        ></erd-input>\n        <label class=\"w-100 mb-2\">{{ $t(\"xd-pro.select-episodes\") }}</label>\n        <div class=\"radiobrowser-stations\">\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              v-for=\"(episode, index) in viewerEpisodes\"\n              :key=\"`xdpro-episode-${index}`\"\n              :class=\"{ selected: xdPro.downloads.includes(index) }\"\n              @click.ctrl=\"toggleDownloadsSelection(index)\"\n              @click.shift=\"selectDownloadsRangeSelection(index)\"\n              @click.exact=\"selectDownloadsSelection(index)\"\n            >\n              <span class=\"station-name mr-2\">{{\n                $t(\"xd-pro.season-episode\").format(\n                  episode.serie_season,\n                  episode.serie_episode\n                )\n              }}</span>\n              <span class=\"station-name text-muted\">{{\n                episode.tmdb.name\n              }}</span>\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"downloadModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          :disabled=\"xdPro.xdpro_id == 0 || xdPro.downloads.length == 0\"\n          @click=\"downloadModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <erd-spinner\n      v-if=\"isLoading\"\n      :text=\"loadingText\"\n      size=\"lg\"\n      overlay\n      absolute\n    ></erd-spinner>\n    <erd-col xl=\"12\" class=\"m-0 p-0\" v-if=\"viewer\" id=\"series\">\n      <erd-row class=\"m-0 p-0\">\n        <erd-col xl=\"4\" md=\"4\">\n          <erd-card class=\"movie-details-poster\">\n            <img\n              class=\"poster\"\n              :src=\"`https://www.themoviedb.org/t/p/original/${viewerSeries.tmdb.poster_path}`\"\n            />\n            <erd-card-body>\n              <h3 class=\"mt-0 mb-1\">\n                {{ viewerSeries.tmdb.title }}\n                <span class=\"float-right\"\n                  ><span class=\"color-theme-1\">{{\n                    viewerSeries.tmdb.vote_average\n                  }}</span\n                  ><span>/10</span></span\n                >\n              </h3>\n              <div class=\"genres\">\n                <span\n                  class=\"genre\"\n                  v-for=\"(genre, index) in viewerSeries.tmdb.genres\"\n                  :key=\"`genre-${viewerSeries.tmdb.title}-${index}`\"\n                  >{{ genre.name }}</span\n                >\n              </div>\n              <p class=\"color-theme-1 mt-1\">\n                {{ formatDate(viewerSeries.tmdb.first_air_date) }}\n              </p>\n              <p>{{ viewerSeries.tmdb.overview }}</p>\n              <a\n                class=\"d-block mt-2 text-truncate\"\n                :href=\"viewerSeries.tmdb.homepage\"\n                target=\"_blank\"\n                v-if=\"viewerSeries.tmdb.homepage.length\"\n                >{{ viewerSeries.tmdb.homepage }}</a\n              >\n              <a\n                class=\"d-block text-truncate\"\n                :href=\"`https://www.themoviedb.org/tv/${viewerSeries.tmdb_id}`\"\n                target=\"_blank\"\n                >{{\n                  `https://www.themoviedb.org/tv/${viewerSeries.tmdb_id}`\n                }}</a\n              >\n              <erd-button\n                dense\n                class=\"my-3\"\n                icon=\"la-download\"\n                @click=\"downloadModal(true)\"\n                v-if=\"canDownload\"\n                >{{ $t(\"movies.download\") }}</erd-button\n              >\n            </erd-card-body>\n          </erd-card>\n        </erd-col>\n        <erd-col xl=\"8\" md=\"8\" class=\"m-0 p-0\">\n          <erd-row class=\"m-0 p-0\">\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"filteredVideos.length\">\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"series.videos-trailers\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"6\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(video, index) in filteredVideos\"\n                  :key=\"`video-${index}`\"\n                >\n                  <div class=\"video-card\">\n                    <vue-plyr>\n                      <div\n                        data-plyr-provider=\"youtube\"\n                        :data-plyr-embed-id=\"video.key\"\n                      ></div>\n                    </vue-plyr>\n                  </div>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col\n              class=\"px-0 mx-0\"\n              xl=\"12\"\n              v-for=\"(season, index) in seasonsInSeries\"\n              :key=\"`season-${index}`\"\n            >\n              <h5 class=\"my-0 ml-3\">\n                {{ $t(\"series.season\").format(season) }}\n              </h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"6\"\n                  xs=\"6\"\n                  v-for=\"(episode, eindex) in episodesInSeason(season)\"\n                  :key=\"`season-${index}-episode-${eindex}`\"\n                >\n                  <erd-card class=\"movie-view-card\">\n                    <vue-plyr>\n                      <video\n                        controls\n                        playsinline\n                        :data-poster=\"`https://www.themoviedb.org/t/p/original/${episode.tmdb.still_path}`\"\n                      >\n                        <source\n                          :src=\"episodeURL(episode)\"\n                          :type=\"episodeVideoType(episode)\"\n                        />\n                      </video>\n                    </vue-plyr>\n\n                    <erd-card-body>\n                      <p class=\"py-0 my-0 color-theme-1\">\n                        {{ episode.tmdb.name }}\n                      </p>\n                      <p class=\"py-0 my-0 text-muted\">\n                        {{ episode.tmdb.overview }}\n                      </p>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col\n              xl=\"12\"\n              class=\"p-0 m-0\"\n              v-if=\"filteredCast && filteredCast.length\"\n            >\n              <h5 class=\"mt-2 mb-0 ml-3\">{{ $t(\"series.main-characters\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"3\"\n                  md=\"4\"\n                  sm=\"6\"\n                  v-for=\"(cast, index) in filteredCast\"\n                  :key=\"`cast-${index}`\"\n                >\n                  <erd-card class=\"cast-card\">\n                    <img\n                      class=\"profile\"\n                      :src=\"`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`\"\n                    />\n                    <erd-card-body class=\"py-1\">\n                      <p>\n                        <span class=\"color-theme-1\">{{ cast.character }}</span\n                        ><br /><span class=\"text-small text-muted\">{{\n                          cast.name\n                        }}</span>\n                      </p>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n            <erd-col xl=\"12\" class=\"p-0 m-0\" v-if=\"viewerSimilar.length\">\n              <h5 class=\"mt-3 mb-0 ml-3\">{{ $t(\"series.similar-series\") }}</h5>\n              <erd-row class=\"p-0 m-0\">\n                <erd-col\n                  xl=\"4\"\n                  md=\"6\"\n                  xs=\"12\"\n                  v-for=\"(series, index) in filteredSimilar\"\n                  :key=\"`movie-${index}`\"\n                >\n                  <erd-card class=\"movie-card depth-2\">\n                    <div class=\"poster\">\n                      <img\n                        class=\"movie-poster\"\n                        :src=\"`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${series.poster_path}`\"\n                      />\n                      <span class=\"score\">{{ series.vote_average }}</span>\n                    </div>\n                    <erd-card-body class=\"py-3\">\n                      <h5 class=\"m-0\">{{ series.name }}</h5>\n                      <p class=\"m-0 text-muted text-small\">\n                        {{ formatDate(series.first_air_date) }}\n                      </p>\n                      <div class=\"genres mt-2\">\n                        <span\n                          class=\"genre\"\n                          v-for=\"(genre, index) in series.genres\"\n                          :key=\"`genre-${series.name}-${index}`\"\n                          >{{ genre.name }}</span\n                        >\n                      </div>\n                    </erd-card-body>\n                  </erd-card>\n                </erd-col>\n              </erd-row>\n            </erd-col>\n          </erd-row>\n        </erd-col>\n      </erd-row>\n    </erd-col>\n    <erd-row class=\"m-0 p-0\" v-else id=\"series\">\n      <erd-col xl=\"12\" xs=\"12\">\n        <erd-genre-select\n          :genres=\"tmdbFilteredGenres\"\n          v-model=\"genre\"\n        ></erd-genre-select>\n      </erd-col>\n      <erd-col xl=\"12\" xs=\"12\" v-if=\"filteredSeries.length === 0\">\n        <p class=\"text-center text-muted\">\n          {{ $t(\"series.no-series\") }}\n        </p>\n      </erd-col>\n      <erd-col\n        xl=\"3\"\n        lg=\"4\"\n        md=\"6\"\n        xs=\"12\"\n        v-for=\"(series, index) in pagedSeries\"\n        :key=\"`serie-${series.tmdb_id}-${index}`\"\n      >\n        <erd-card class=\"movie-card depth-2\">\n          <div class=\"poster\">\n            <button class=\"more-button\" @click=\"viewDetails(series)\">\n              <erd-tooltip :tooltip=\"$t('series.tooltip-show-more')\" :enabled=\"showTooltips\">\n                <i class=\"las la-ellipsis-h\"></i>\n              </erd-tooltip>\n            </button>\n            <img\n              class=\"movie-poster\"\n              :src=\"\n                series.tmdb.poster_path && series.tmdb.poster_path.length\n                  ? `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${series.tmdb.poster_path}`\n                  : series.icon\n              \"\n            />\n            <span class=\"score\">{{ series.tmdb.vote_average }}</span>\n          </div>\n          <erd-card-body class=\"py-3\">\n            <h5 class=\"m-0\">\n              <erd-tooltip :tooltip=\"$t('series.tooltip-show-more')\" :enabled=\"showTooltips\">\n                <a href=\"#\" @click.prevent=\"viewDetails(series)\">{{\n                  series.tmdb.name\n                }}</a>\n              </erd-tooltip>\n            </h5>\n            <p class=\"m-0 text-muted text-small\">\n              <span>{{\n                $t(\"series.episodes-seasons\").format(\n                  series.seasons,\n                  series.episodes\n                )\n              }}</span>\n            </p>\n            <div class=\"genres mt-2\">\n              <span\n                class=\"genre\"\n                v-for=\"(genre, index) in series.tmdb.genres\"\n                :key=\"`genre-${series.tmdb_id}-${index}`\"\n                >{{ genre.name }}</span\n              >\n            </div>\n          </erd-card-body>\n        </erd-card>\n      </erd-col>\n    </erd-row>\n    <b-pagination\n      v-if=\"!viewer\"\n      class=\"w-100 my-3\"\n      size=\"sm\"\n      align=\"center\"\n      :total-rows=\"total\"\n      :per-page=\"perPage\"\n      v-model=\"currentPage\"\n    >\n      <template v-slot:next-text>\n        <i class=\"las la-angle-right\" />\n      </template>\n      <template v-slot:prev-text>\n        <i class=\"las la-angle-left\" />\n      </template>\n      <template v-slot:first-text>\n        <i class=\"las la-angle-double-left\" />\n      </template>\n      <template v-slot:last-text>\n        <i class=\"las la-angle-double-right\" />\n      </template>\n    </b-pagination>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      viewerSeries: null,\n      viewerCredits: [],\n      viewerKeywords: [],\n      viewerSimilar: [],\n      viewerVideos: [],\n      viewerEpisodes: [],\n      viewerSeasons: [],\n      viewerGroup: \"\",\n      viewerPlaylist: \"\",\n      viewer: false,\n      search: null,\n      isLoading: false,\n      loadingText: \"\",\n      series: [],\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 0,\n      genre: 10759,\n      xdPro: {\n        modal: false,\n        xdpro_id: 0,\n        download_folder: \"\",\n        downloads: [],\n      },\n    };\n  },\n  computed: {\n    ...mapGetters([\n      \"tmdbGenres\",\n      \"tmdbFilteredGenres\",\n      \"settings\",\n      \"currentUser\",\n      \"movieSeriePlaylist\",\n      \"xdProInstances\",\n    ]),\n    showTooltips () {\n      return this.settings.showTooltips;\n    },\n    canDownload() {\n      return this.xdProInstances && this.xdProInstances.length > 0;\n    },\n    tmdbSeries() {\n      return this.series.filter((series) => {\n        return series.tmdb_id;\n      });\n    },\n    filteredByGenre() {\n      let currentGenre = this.genre;\n      return this.tmdbSeries.filter((serie) => {\n        return serie.tmdb && serie.tmdb.genres\n          ? serie.tmdb.genres.findIndex((genre) => {\n              return genre.id === currentGenre;\n            }) > -1\n          : false;\n      });\n    },\n    filteredSeries() {\n      if (this.search === null) {\n        return this.filteredByGenre;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.filteredByGenre.filter((series) => {\n          return (\n            String(series.tmdb.name).match(re) ||\n            String(series.tmdb.original_name).match(re) ||\n            String(series.tmdb_id).match(re) ||\n            String(series.tmdb.overview).match(re) ||\n            this.formatDate(series.tmdb.release_date).match(re)\n          );\n        });\n      }\n    },\n    filteredCast() {\n      return this.viewerCredits\n        .filter((cast) => {\n          return cast.profile_path && cast.profile_path.length;\n        })\n        .slice(0, 8);\n    },\n    filteredSimilar() {\n      return this.viewerSimilar.slice(0, 6);\n    },\n    filteredVideos() {\n      return this.viewerVideos.slice(0, 2);\n    },\n    seasonsInSeries() {\n      let seasons = 0;\n      this.viewerEpisodes.map((e) => {\n        if (e.serie_season > seasons) {\n          seasons = e.serie_season;\n        }\n      });\n      return seasons;\n    },\n    perPage() {\n      return this.settings.perPage;\n    },\n    pagedSeries() {\n      this.total = this.filteredSeries.length;\n      this.from = (this.currentPage - 1) * this.perPage || 0;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.filteredSeries.slice(this.from, this.to);\n    },\n    xdProInstanceItems() {\n      return this.xdProInstances.map((instance) => {\n        return {\n          text: instance.name,\n          value: instance.id,\n        };\n      });\n    },\n  },\n  methods: {\n    ...mapActions([\"updateTMDBGenres\", \"addxdProDownload\"]),\n    closeViewer() {\n      this.viewer = false;\n    },\n    viewDetails(series) {\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      this.viewerCredits = [];\n      this.viewerKeywords = [];\n      this.viewerSimilar = [];\n      this.viewerVideos = [];\n      this.viewerEpisodes = [];\n      this.viewerSeries = series;\n      this.viewerGroup = \"\";\n      this.viewerPlaylist = \"\";\n      this.loadSeriesDetails();\n      this.viewer = true;\n    },\n    allProgress(proms, progress_cb) {\n      let d = 0;\n      progress_cb(0);\n      for (const p of proms) {\n        p.then(() => {\n          d++;\n          progress_cb((d * 100) / proms.length);\n        });\n      }\n      return Promise.all(proms);\n    },\n    loadSeries() {\n      this.isLoading = true;\n      httpService.get(`serie/total/${this.movieSeriePlaylist}`).then((res) => {\n        if (res.status === true) {\n          let requests = [];\n          for (var i = 0; i < res.data; i += 50) {\n            requests.push(\n              httpService.get(`serie/browse/${this.movieSeriePlaylist}/${i}/50`)\n            );\n          }\n          this.allProgress(requests, (p) => {\n            this.loadingText = this.$t(\"series.browse-loading\").format(\n              Math.round(p)\n            );\n          }).then((res) => {\n            let series = [];\n            res.forEach((result) => {\n              if (result.status === true) {\n                series = [...series, ...result.data];\n              }\n            });\n            series.sort((a, b) => {\n              return (\n                new Date(b.tmdb.first_air_date) -\n                new Date(a.tmdb.first_air_date)\n              );\n            });\n            this.series = series;\n            this.isLoading = false;\n          });\n        }\n      });\n    },\n    loadSeriesDetails() {\n      this.isLoading = true;\n      this.loadingText = \"\";\n      httpService\n        .get(\n          `serie/details/${this.movieSeriePlaylist}/${this.viewerSeries.tmdb_id}`\n        )\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.viewerCredits = res.data.credits.cast;\n            this.viewerKeywords = res.data.keywords;\n            this.viewerSimilar = res.data.similar;\n            this.viewerVideos = res.data.videos;\n            this.viewerGroup = res.data.group;\n            this.viewerPlaylist = res.data.playlist;\n            this.viewerEpisodes = res.data.episodes;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    pagePrint() {\n      document.getElementById(\"series\").print();\n    },\n    searchSeries(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n    downloadEpisode(url) {\n      var link = document.createElement(\"a\");\n      link.href = url;\n      link.target = \"_blank\";\n      link.click();\n    },\n    episodesInSeason(season) {\n      return this.viewerEpisodes.filter((episode) => {\n        return episode.serie_season === season;\n      });\n    },\n    episodeURL(episode) {\n      return episode.source_stream_url && episode.source_stream_url.length\n        ? episode.source_stream_url\n        : episode.xtream_url;\n    },\n    episodeVideoType(episode) {\n      if (episode.source_container_extension.toLowerCase() == \"mkv\") {\n        return \"video/webm\";\n      } else {\n        return \"video/mp4\";\n      }\n    },\n    formatDownloadFolder(folder) {\n      return this.xdPro.download_folder.slice(-1) == \"/\"\n        ? `${this.xdPro.download_folder}${folder}`\n        : `${this.xdPro.download_folder}/${folder}`;\n    },\n    downloadModal(show, save = false) {\n      if (show) {\n        this.xdPro.downloads.length = 0;\n      }\n      if (save) {\n        let downloads = [];\n        this.xdPro.downloads.map((index) => {\n          const episode = this.viewerEpisodes[index];\n          const year = new Date(\n            this.viewerSeries.tmdb.first_air_date\n          ).getFullYear();\n          let download = {\n            user_id: this.currentUser.user.id,\n            xdpro_id: this.xdPro.xdpro_id,\n            filename: `${\n              this.viewerSeries.tmdb.original_name\n            } (${year}) S${String(episode.serie_season).padStart(\n              2,\n              \"0\"\n            )}E${String(episode.serie_episode).padStart(2, \"0\")}.${\n              episode.source_container_extension\n            }`,\n            file_extension: episode.source_container_extension,\n            type: 2,\n            enabled: 0,\n            download_folder: this.formatDownloadFolder(\n              `${this.viewerSeries.tmdb.original_name} (${year})/Season ${episode.serie_season}/`\n            ),\n          };\n          if (episode.source_stream_url && episode.source_stream_url.length) {\n            download.download_url = episode.source_stream_url;\n            download.download_host = \"\";\n            download.download_port = \"\";\n            download.download_username = \"\";\n            download.download_password = \"\";\n          } else {\n            download.download_url = episode.xtream_url;\n            let u = new URL(episode.xtream_url);\n            download.download_host = u.hostname;\n            download.download_port = u.port;\n            let p = u.pathname.split(\"/\");\n            download.download_username = p[2];\n            download.download_password = p[3];\n          }\n          downloads.push(download);\n        });\n        this.addxdProDownload(downloads)\n          .then((res) => {\n            if (res.status === true) {\n              this.$notify(\n                \"primary\",\n                this.$t(\"profile.success\"),\n                this.$t(\"xd-pro.download-save-success\"),\n                \"la-user-shield\",\n                { duration: 5000, permanent: false }\n              );\n            }\n          })\n          .catch(() => {\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              this.$t(\"xd-pro.download-save-error\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n      this.xdPro.modal = show;\n    },\n    toggleDownloadsSelection(item) {\n      let idx = this.xdPro.downloads.indexOf(item);\n      if (idx !== -1) {\n        this.xdPro.downloads.splice(idx, 1);\n      } else {\n        this.xdPro.downloads.push(item);\n      }\n    },\n    selectDownloadsRangeSelection(index) {\n      const lastIndex = this.xdPro.downloads[this.xdPro.downloads.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.xdPro.downloads.includes(i)) {\n          this.xdPro.downloads.push(i);\n        }\n      }\n    },\n    selectDownloadsSelection(item) {\n      this.xdPro.downloads.length = 0;\n      this.xdPro.downloads.push(item);\n    },\n  },\n  beforeMount() {\n    this.updateTMDBGenres({ source: \"tv\", language: this.$t(\"date.tmdb\") });\n    EventBus.$on(\"print\", this.pagePrint);\n    EventBus.$on(\"search\", this.searchSeries);\n    EventBus.$on(\"close-viewer\", this.closeViewer);\n    this.loadSeries();\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.pagePrint);\n    EventBus.$off(\"search\", this.searchSeries);\n    EventBus.$off(\"close-viewer\", this.closeViewer);\n  },\n  watch: {\n    viewer: function (val) {\n      EventBus.$emit(\"update-viewer\", val);\n    },\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    \"xdPro.xdpro_id\": function (val) {\n      let instance = this.xdProInstances.find((instance) => {\n        return instance.id == val;\n      });\n      if (instance) {\n        this.xdPro.download_folder = instance.download_folder;\n      }\n    },\n    movieSeriePlaylist: function () {\n      this.loadSeries();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.radiobrowser-stations {\n  overflow: hidden;\n\n  .ps {\n    max-height: 300px;\n    padding-top: 0.25rem;\n    padding-bottom: 0.5rem;\n  }\n\n  .radiobrowser-station {\n    margin-top: 0.1rem;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n\n    &:focus,\n    &:focus-within {\n      &.selected {\n        background-color: $theme-color-1 !important;\n\n        a,\n        i,\n        span {\n          color: $button-text-color !important;\n        }\n      }\n\n      &.active {\n        border-color: rgba($theme-color-1, 0.6) !important;\n\n        a,\n        span {\n          font-weight: bold;\n        }\n        a,\n        i,\n        span {\n          color: $theme-color-1;\n        }\n      }\n    }\n\n    &.selected {\n      background-color: $theme-color-1 !important;\n      &.success {\n        background-color: $success-color !important;\n      }\n      &.danger {\n        background-color: $error-color !important;\n      }\n      &.info {\n        background-color: $info-color !important;\n      }\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n}\n</style>\n"]}]}