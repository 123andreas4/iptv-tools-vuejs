{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/series.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/series.vue","mtime":1622727013850},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["series.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"series.vue","sourceRoot":"src/views/app/xtream","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"streams\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"!editor\">\n      <b-table :items=\"paged\" :fields=\"fields\" striped small>\n        <template v-slot:cell(movie_name)=\"row\">\n          {{\n            row.item.movie_name.length\n              ? row.item.movie_name\n              : row.item.stream_tvg_name\n          }}\n        </template>\n        <template v-slot:cell(tmdb_id)=\"row\">\n          <a\n            :href=\"`https://www.themoviedb.org/tv/${row.item.tmdb_id}`\"\n            target=\"_blank\"\n            >{{ row.item.tmdb_id }}</a\n          >\n        </template>\n        <template v-slot:cell(stream_is_hidden)=\"row\">\n          <erd-badge\n            class=\"py-1 px-2\"\n            variant=\"danger\"\n            v-if=\"row.item.stream_is_hidden\"\n            >{{ $t(\"general.yes\") }}</erd-badge\n          >\n          <erd-badge class=\"py-1 px-2\" variant=\"success\" v-else>{{\n            $t(\"general.no\")\n          }}</erd-badge>\n        </template>\n        <template v-slot:cell(stream_tvg_logo)=\"row\">\n          <a\n            :href=\"row.item.stream_tvg_logo\"\n            v-if=\"row.item.stream_tvg_logo\"\n            target=\"_blank\"\n          >\n            <img class=\"serie-icon\" :src=\"row.item.stream_tvg_logo\"\n          /></a>\n        </template>\n        <template v-slot:cell(actions)=\"row\">\n          <erd-button\n            variant=\"info\"\n            class=\"btn-table\"\n            @click=\"editStream(row.item)\"\n            ><i class=\"las la-pen\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"danger\"\n            class=\"btn-table\"\n            @click=\"deleteStream(row.item.id)\"\n            ><i class=\"las la-trash\"></i\n          ></erd-button>\n        </template>\n      </b-table>\n      <b-pagination\n        class=\"w-100 my-3\"\n        size=\"sm\"\n        align=\"center\"\n        :total-rows=\"total\"\n        :per-page=\"perPage\"\n        v-model=\"currentPage\"\n      >\n        <template v-slot:next-text>\n          <i class=\"las la-angle-right\" />\n        </template>\n        <template v-slot:prev-text>\n          <i class=\"las la-angle-left\" />\n        </template>\n        <template v-slot:first-text>\n          <i class=\"las la-angle-double-left\" />\n        </template>\n        <template v-slot:last-text>\n          <i class=\"las la-angle-double-right\" />\n        </template>\n      </b-pagination>\n    </erd-col>\n    <!-- Stream -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 0\">\n      <label class=\"d-block\" for=\"playlist\">{{ $t(\"xtream.playlist\") }}</label>\n      <erd-select\n        id=\"playlist\"\n        ref=\"playlist\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.playlist_id\"\n        :items=\"playlists\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"group\">{{ $t(\"xtream.group\") }}</label>\n      <erd-select\n        id=\"group\"\n        ref=\"group\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.group_id\"\n        :items=\"groups\"\n      ></erd-select>\n      <label class=\"d-block\" for=\"name\">{{ $t(\"xtream.name\") }}</label>\n      <erd-input\n        id=\"name\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.stream_tvg_name\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"tvg-logo\">{{\n        $t(\"xtream.stream-icon\")\n      }}</label>\n      <erd-input\n        id=\"tvg-logo\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.stream_tvg_logo\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"order\">{{ $t(\"xtream.order\") }}</label>\n      <erd-input\n        id=\"order\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.stream_order\"\n        type=\"number\"\n      ></erd-input>\n      <erd-checkbox\n        class=\"mb-2 w-100\"\n        v-model=\"stream.stream_is_hidden\"\n        :true-value=\"1\"\n        :false-value=\"0\"\n        >{{ $t(\"xtream.hidden\") }}</erd-checkbox\n      >\n    </erd-col>\n    <!-- TMDB -->\n    <erd-col xl=\"12\" sm=\"12\" v-if=\"editor && activeTab === 1\">\n      <label class=\"d-block\" for=\"series-name\">{{\n        $t(\"xtream.series-name\")\n      }}</label>\n      <erd-input\n        id=\"series-name\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.serie_name\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"season\">{{ $t(\"xtream.season\") }}</label>\n      <erd-input\n        id=\"season\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.serie_season\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"episode\">{{ $t(\"xtream.episode\") }}</label>\n      <erd-input\n        id=\"episode\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.serie_episode\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"trailer\">{{\n        $t(\"xtream.youtube-trailer\")\n      }}</label>\n      <erd-input\n        id=\"trailer\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.serie_trailer\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"tmdb-id\">{{ $t(\"xtream.tmdb-id\") }}</label>\n      <erd-input\n        id=\"tmdb-id\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.tmdb_id\"\n      ></erd-input>\n      <label class=\"d-block\" for=\"tmdb-id-episode\">{{\n        $t(\"xtream.tmdb-id-episode\")\n      }}</label>\n      <erd-input\n        id=\"tmdb-id-episode\"\n        class=\"mt-1 mb-2 w-100\"\n        v-model=\"stream.tmdb_episode_id\"\n      ></erd-input>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      activeTab: 0,\n      playlists: [],\n      groups: [],\n      streams: [],\n      stream: null,\n      editor: false,\n      search: null,\n      isLoading: false,\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 1,\n      fields: [\n        {\n          key: \"playlist\",\n          label: this.$t(\"xtream.playlist\"),\n          sortable: true,\n        },\n        { key: \"group\", label: this.$t(\"xtream.group\"), sortable: true },\n        {\n          key: \"serie_name\",\n          label: this.$t(\"xtream.name\"),\n          sortable: true,\n        },\n        {\n          key: \"serie_season\",\n          label: this.$t(\"xtream.season\"),\n          sortable: true,\n        },\n        {\n          key: \"serie_episode\",\n          label: this.$t(\"xtream.episode\"),\n          sortable: true,\n        },\n        {\n          key: \"stream_tvg_logo\",\n          label: this.$t(\"xtream.stream-icon\"),\n          sortable: true,\n        },\n        { key: \"tmdb_id\", label: this.$t(\"xtream.tmdb-id\"), sortable: true },\n        {\n          key: \"stream_is_hidden\",\n          label: this.$t(\"xtream.hidden\"),\n          sortable: true,\n        },\n        { key: \"stream_order\", label: this.$t(\"xtream.order\"), sortable: true },\n        {\n          key: \"actions\",\n          label: this.$t(\"users.actions\"),\n          sortable: false,\n          thClass: \"text-right\",\n          tdClass: \"text-right\",\n        },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\"]),\n    perPage() {\n      return this.settings.perPage;\n    },\n    searchFiltered() {\n      if (this.search === null) {\n        return this.streams;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.streams.filter((stream) => {\n          return (\n            String(stream.stream_tvg_name).match(re) ||\n            String(stream.stream_tvg_logo).match(re) ||\n            String(stream.serie_name).match(re) ||\n            String(stream.serie_season).match(re) ||\n            String(stream.serie_episode).match(re) ||\n            String(stream.tmdb_id).match(re) ||\n            String(stream.playlist).match(re) ||\n            String(stream.group).match(re)\n          );\n        });\n      }\n    },\n    paged() {\n      this.total = this.searchFiltered.length;\n      this.from = (this.currentPage - 1) * this.perPage;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.searchFiltered.slice(this.from, this.to);\n    },\n  },\n  methods: {\n    loadStreams() {\n      let amount = 100;\n      let streams = [];\n      this.isLoading = true;\n      Promise.all([\n        httpService.get(\"series/total\"),\n        httpService.get(\"group/simple\"),\n        httpService.get(\"playlist/simple\"),\n      ])\n        .then((res) => {\n          if (res[0].status === true) {\n            let requests = [];\n            for (var i = 0; i < res[0].data / amount; i++) {\n              requests.push(httpService.get(`series/${i * amount}/${amount}`));\n            }\n            Promise.all(requests).then((results) => {\n              this.isLoading = false;\n              results.map((res) => {\n                if (res.status === true) {\n                  streams = [...streams, ...res.data];\n                }\n              });\n              this.streams = streams;\n            });\n          }\n          if (res[1].status === true) {\n            this.groups = res[1].data\n              .filter((group) => {\n                return group.group_type == 3;\n              })\n              .map((group) => {\n                return {\n                  text: group.group_name,\n                  value: group.id,\n                };\n              });\n          }\n          if (res[2].status === true) {\n            this.playlists = res[2].data.map((playlist) => {\n              return {\n                text: playlist.name,\n                value: playlist.id,\n              };\n            });\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.series-load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    addStream() {\n      httpService\n        .post(\"series/add\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            this.stream = {\n              id: res.data,\n              playlist_id: 0,\n              group_id: 0,\n              stream_tvg_name: \"\",\n              stream_tvg_id: \"\",\n              stream_tvg_logo: \"\",\n              stream_order: 0,\n              stream_is_hidden: 0,\n              serie_name: \"\",\n              serie_season: 0,\n              serie_episode: 0,\n              serie_trailer: \"\",\n              tmdb_id: \"\",\n              tmdb_episode_id: \"\",\n            };\n            this.editor = true;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.series-load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    editStream(stream) {\n      this.stream = Object.assign({}, stream);\n      this.editor = true;\n    },\n    cancelEditor() {\n      this.editor = false;\n    },\n    saveEditor() {\n      let stream = Object.assign({}, this.stream);\n      delete stream.id;\n      delete stream.playlist;\n      delete stream.group;\n\n      httpService\n        .put(`series/${this.stream.id}`, stream)\n        .then((res) => {\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xtream.series-save-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.editor = false;\n            this.loadStreams();\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.series-save-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    deleteStream(id) {\n      httpService\n        .delete(`series/${id}`)\n        .then((res) => {\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"xtream.series-delete-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadStreams();\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"xtream.series-delete-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    searchStream(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printStreams() {\n      document.getElementById(\"streams\").print();\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    doTabChange(tab) {\n      this.activeTab = tab;\n    },\n  },\n  beforeMount() {\n    this.loadStreams();\n    EventBus.$on(\"search\", this.searchStream);\n    EventBus.$on(\"print\", this.printStreams);\n    EventBus.$on(\"refresh\", this.loadStreams);\n    EventBus.$on(\"add\", this.addStream);\n    EventBus.$on(\"cancel\", this.cancelEditor);\n    EventBus.$on(\"save\", this.saveEditor);\n    EventBus.$on(\"tab-change\", this.doTabChange);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"search\", this.searchStream);\n    EventBus.$off(\"print\", this.printStreams);\n    EventBus.$off(\"refresh\", this.loadStreams);\n    EventBus.$off(\"add\", this.addStream);\n    EventBus.$off(\"cancel\", this.cancelEditor);\n    EventBus.$off(\"save\", this.saveEditor);\n    EventBus.$off(\"tab-change\", this.doTabChange);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    editor: function (val) {\n      EventBus.$emit(\"update-editor\", val);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.modal-groups {\n  max-height: 250px;\n  overflow: hidden;\n\n  .ps {\n    max-height: 250px;\n  }\n}\n.serie-icon {\n  max-height: 100px;\n}\n</style>\n"]}]}