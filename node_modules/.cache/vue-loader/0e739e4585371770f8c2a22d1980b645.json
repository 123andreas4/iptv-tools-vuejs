{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/xtream/editor.vue","mtime":1624897105965},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editor.vue"],"names":[],"mappingskfile":"editor.vue","sourceRoot":"src/views/app/xtream","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"editor\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <!--  \n\n      FIND / REPLACE\n\n    -->\n    <erd-modal\n      v-show=\"findReplace.modal\"\n      @close=\"findAndReplaceModal(false)\"\n      :title=\"$t('editor.find-replace')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.search-for\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findReplace.from\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.replace-with\") }}</label>\n        <erd-input class=\"mt-1 mb-2 w-100\" v-model=\"findReplace.to\"></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.options\") }}</label>\n        <erd-checkbox class=\"mt-1\" v-model=\"findReplace.replaceAll\">{{\n          $t(\"editor.replace-all-occurences\")\n        }}</erd-checkbox>\n        <erd-checkbox class=\"mb-2\" v-model=\"findReplace.ignoreCase\">{{\n          $t(\"editor.ignore-case\")\n        }}</erd-checkbox>\n        <template v-if=\"findReplace.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"findReplace.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"findReplace.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"findReplace.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findAndReplaceModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"findAndReplace\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      PREFIX / SUFFIX\n\n    -->\n    <erd-modal\n      v-show=\"prefixSuffix.modal\"\n      @close=\"prefixSuffixModal(false)\"\n      :title=\"$t('editor.add-prefix-suffix')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\">{{ $t(\"editor.prefix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.prefix\"\n        ></erd-input>\n        <label class=\"w-100\">{{ $t(\"editor.suffix\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"prefixSuffix.suffix\"\n        ></erd-input>\n        <template v-if=\"prefixSuffix.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"prefixSuffix.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"prefixSuffix.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"prefixSuffix.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"prefixSuffixModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"addPrefixSuffix\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      CONVERT CASE\n\n    -->\n    <erd-modal\n      v-show=\"convertCase.modal\"\n      @close=\"convertCaseModal(false)\"\n      :title=\"$t('editor.change-case')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <label class=\"d-block mb-2\">{{ $t(\"editor.options\") }}</label>\n        <erd-radiobutton :value=\"0\" v-model=\"convertCase.method\">{{\n          $t(\"editor.title-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton :value=\"1\" v-model=\"convertCase.method\">{{\n          $t(\"editor.upper-case\")\n        }}</erd-radiobutton>\n        <erd-radiobutton class=\"mb-2\" :value=\"2\" v-model=\"convertCase.method\">{{\n          $t(\"editor.lower-case\")\n        }}</erd-radiobutton>\n        <template v-if=\"convertCase.type === 1\">\n          <label class=\"w-100\">{{ $t(\"xtream.group\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-groups-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-groups\")\n          }}</erd-radiobutton>\n        </template>\n        <template v-if=\"convertCase.type === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.streams\") }}</label>\n          <erd-radiobutton\n            class=\"mt-1\"\n            :value=\"1\"\n            v-model=\"convertCase.selectedOnly\"\n            >{{ $t(\"editor.selected-streams-only\") }}</erd-radiobutton\n          >\n          <erd-radiobutton :value=\"0\" v-model=\"convertCase.selectedOnly\">{{\n            $t(\"editor.all-streams\")\n          }}</erd-radiobutton>\n        </template>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"convertCaseModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"changeCase\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT GROUP\n\n    -->\n    <erd-modal\n      v-show=\"groupEditor.modal\"\n      @close=\"editGroupModal(false)\"\n      :title=\"$t('editor.edit-group')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"canEditGroupType\">\n          <label class=\"w-100\">{{ $t(\"editor.group-type\") }}</label>\n          <erd-select\n            class=\"w-100 mt-1 mb-2\"\n            :items=\"groupTypes\"\n            v-model=\"groupEditor.group_type\"\n            v-if=\"groupEditor.modal\"\n          ></erd-select>\n        </template>\n        <label class=\"w-100\">{{ $t(\"editor.group-name\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_name\"\n        ></erd-input>\n        <!--<label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n        <erd-input\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"groupEditor.group_parent_code\"\n        ></erd-input>-->\n        <erd-checkbox class=\"mb-2\" v-model=\"groupEditor.group_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editGroupModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editGroup\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      EDIT STREAM\n\n    -->\n    <erd-modal\n      v-show=\"streamEditor.modal\"\n      @close=\"editStreamModal(false)\"\n      :title=\"$t('editor.edit-stream')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <template v-if=\"activeGroupType === 1\">\n          <label class=\"w-100\">{{ $t(\"editor.name-placeholder\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.epg-channel-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_id\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"editor.stream-icon\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-stream-icon\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <!--<label class=\"w-100\">{{ $t(\"editor.parent-code\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-3 w-100\"\n            v-model=\"streamEditor.stream_parent_code\"\n          ></erd-input>-->\n          <erd-checkbox\n            class=\"mb-1\"\n            v-model=\"streamEditor.stream_radio\"\n            :true-value=\"1\"\n            :false-value=\"0\"\n            >{{ $t(\"editor.radio\") }}</erd-checkbox\n          >\n        </template>\n        <template v-if=\"activeGroupType === 2\">\n          <label class=\"w-100\">{{ $t(\"xtream.movie-name\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-year\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.movie_year\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.tmdb-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.tmdb_id\"\n          ></erd-input>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.movie-poster\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-movie-poster\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n        </template>\n        <template v-if=\"activeGroupType === 3\">\n          <label class=\"w-100\">{{ $t(\"xtream.name\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_name\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.season\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_season\"\n            type=\"number\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.episode\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.serie_episode\"\n            type=\"number\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.tmdb-id\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.tmdb_id\"\n          ></erd-input>\n          <label class=\"w-100\" v-if=\"streamEditor.stream_is_custom == 1\">{{\n            $t(\"editor.stream-url\")\n          }}</label>\n          <erd-input\n            v-if=\"streamEditor.stream_is_custom == 1\"\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.source_stream_url\"\n          ></erd-input>\n          <label class=\"w-100\">{{ $t(\"xtream.serie-poster\") }}</label>\n          <erd-input\n            class=\"mt-1 mb-2 w-100\"\n            v-model=\"streamEditor.stream_tvg_logo\"\n          ></erd-input>\n          <div\n            class=\"form-control text-center mb-2\"\n            v-if=\"streamEditor.stream_tvg_logo\"\n          >\n            <a :href=\"streamEditor.stream_tvg_logo\" target=\"_blank\"\n              ><img\n                class=\"editor-movie-poster\"\n                :src=\"streamEditor.stream_tvg_logo\"\n            /></a>\n          </div>\n        </template>\n        <erd-checkbox class=\"mb-1\" v-model=\"streamEditor.stream_is_hidden\">{{\n          $t(\"editor.hidden\")\n        }}</erd-checkbox>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"editStreamModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button icon=\"la-check\" variant=\"success\" @click=\"editStream\">{{\n          $t(\"general.ok\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <!--  \n\n      SAVE CHANGES\n\n    -->\n    <erd-modal\n      v-show=\"saveChanges.modal\"\n      @close=\"saveChangesModal(false)\"\n      :title=\"$t('editor.save-changes')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <p>{{ $t(\"editor.save-changes-text\") }}</p>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"saveChangesModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"saveChangesModal(false, true)\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      RADIOBROWSER\n\n    -->\n    <erd-modal\n      v-show=\"radioBrowser.modal\"\n      @close=\"radioBrowserModal(false)\"\n      :title=\"$t('editor.import-radiobrowser')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <label class=\"w-100\" for=\"radiobrowser-search\">{{\n          $t(\"menu.search\")\n        }}</label>\n        <erd-input\n          id=\"radiobrowser-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"radioBrowser.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <div class=\"radiobrowser-stations\">\n          <erd-spinner\n            v-if=\"radioBrowser.isLoading\"\n            size=\"lg\"\n            overlay\n            absolute\n          ></erd-spinner>\n          <p class=\"mb-1 pb-0\" v-if=\"radioBrowser.results.length\">\n            {{ $t(\"editor.select-radio-stations\") }}\n          </p>\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              :class=\"{ selected: radioBrowser.active.includes(index) }\"\n              v-for=\"(station, index) in radioBrowser.results\"\n              :key=\"`radiobrowser-station-${index}-${station.name}`\"\n              @click.ctrl=\"toggleRadiobrowserSelection(index)\"\n              @click.shift=\"selectRadiobrowserRangeSelection(index)\"\n              @click.exact=\"selectRadiobrowserSelection(index)\"\n            >\n              <span class=\"station-name\">{{ station.name }}</span>\n              <span class=\"text-muted text-small ml-1\">{{\n                station.language.replace(/\\b\\w/g, (l) => l.toUpperCase())\n              }}</span>\n              <span class=\"text-muted text-small float-right\"\n                >{{ station.codec }} - {{ station.bitrate }}</span\n              >\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"radioBrowserModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"radioBrowserModal(false, true)\"\n          :disabled=\"\n            radioBrowser.isLoading || radioBrowser.results.length === 0\n          \"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      SOUNDCLOUD\n\n    -->\n    <erd-modal\n      v-show=\"soundcloud.modal\"\n      @close=\"soundcloudModal(false)\"\n      :title=\"$t('editor.import-soundcloud')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"soundcloud.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"soundcloud-url\">{{\n          $t(\"radio.soundcloud-url\")\n        }}</label>\n        <erd-input\n          id=\"soundcloud-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"soundcloud.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('radio.soundcloud-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"soundcloud.track\"\n        >\n          <img\n            :src=\"\n              soundcloud.track.artwork_url.replace('large.jpg', 't500x500.jpg')\n            \"\n            class=\"cover mt-2\"\n          />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ soundcloud.track.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(soundcloud.track.likes_count) }}\n              {{ $t(\"radio.likes\") }} <small>•</small>\n              {{ formatDateYoutube(soundcloud.track.display_date) }}\n              <small>•</small>\n              {{ formatSeconds(soundcloud.track.duration / 1000) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"soundcloudModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"soundcloudModal(false, true)\"\n          :disabled=\"soundcloud.isLoading || soundcloud.track === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      YOUTUBE\n\n    -->\n    <erd-modal\n      v-show=\"youtube.modal\"\n      @close=\"youtubeModal(false)\"\n      :title=\"$t('editor.import-youtube')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"youtube.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"youtube-url\">{{\n          $t(\"editor.youtube-url\")\n        }}</label>\n        <erd-input\n          id=\"youtube-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"youtube.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.youtube-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"youtube.video\"\n        >\n          <img\n            :src=\"`https://i.ytimg.com/vi/${youtube.videoId}/maxresdefault.jpg`\"\n            class=\"cover mt-2\"\n          />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ youtube.video.videoDetails.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(youtube.video.videoDetails.viewCount) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(youtube.video.videoDetails.lengthSeconds) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"youtubeModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"youtubeModal(false, true)\"\n          :disabled=\"youtube.isLoading || youtube.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      VIMEO\n\n    -->\n    <erd-modal\n      v-show=\"vimeo.modal\"\n      @close=\"vimeoModal(false)\"\n      :title=\"$t('editor.import-vimeo')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"vimeo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"vimeo-url\">{{\n          $t(\"editor.vimeo-url\")\n        }}</label>\n        <erd-input\n          id=\"vimeo-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"vimeo.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.vimeo-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"vimeo.video\"\n        >\n          <img :src=\"vimeo.video.video.thumbs.base\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ vimeo.video.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatSeconds(vimeo.video.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"vimeoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"vimeoModal(false, true)\"\n          :disabled=\"vimeo.isLoading || vimeo.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      DAILYMOTION\n\n    -->\n    <erd-modal\n      v-show=\"dailymotion.modal\"\n      @close=\"dailymotionModal(false)\"\n      :title=\"$t('editor.import-dailymotion')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"dailymotion.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"dailymotion-url\">{{\n          $t(\"editor.dailymotion-url\")\n        }}</label>\n        <erd-input\n          id=\"dailymotion-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"dailymotion.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.dailymotion-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"dailymotion.video\"\n        >\n          <img :src=\"dailymotion.video.thumbnail_1080_url\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ dailymotion.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(dailymotion.video.views_total) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(dailymotion.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"dailymotionModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"dailymotionModal(false, true)\"\n          :disabled=\"dailymotion.isLoading || dailymotion.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      TED-TALKS\n\n    -->\n    <erd-modal\n      v-show=\"tedTalks.modal\"\n      @close=\"tedTalksModal(false)\"\n      :title=\"$t('editor.import-ted-talks')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"tedTalks.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"tedTalks-url\">{{\n          $t(\"editor.ted-talks-url\")\n        }}</label>\n        <erd-input\n          id=\"tedTalks-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"tedTalks.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.ted-talks-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"tedTalks.video\"\n        >\n          <img :src=\"tedTalks.video.hero\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ tedTalks.video.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatNumber(tedTalks.video.viewed_count) }}\n              {{ $t(\"editor.views\") }} <small>•</small>\n              {{ formatSeconds(tedTalks.video.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"tedTalksModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"tedTalksModal(false, true)\"\n          :disabled=\"tedTalks.isLoading || tedTalks.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      XHAMSTER\n\n    -->\n    <erd-modal\n      v-show=\"xhamster.modal\"\n      @close=\"xhamsterModal(false)\"\n      :title=\"$t('editor.import-xhamster')\"\n      class=\"select-none\"\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"xhamster.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"xhamster-url\">{{\n          $t(\"editor.xhamster-url\")\n        }}</label>\n        <erd-input\n          id=\"xhamster-url\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"xhamster.url\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('editor.xhamster-url-placeholder')\"\n        ></erd-input>\n        <div\n          class=\"soundcloud-info form-control mb-2 w-100 text-center\"\n          v-if=\"xhamster.video\"\n        >\n          <img :src=\"xhamster.video.videoEntity.thumbBig\" class=\"cover mt-2\" />\n          <div class=\"info\">\n            <h5 class=\"mb-1\">{{ xhamster.video.videoEntity.title }}</h5>\n            <p class=\"p-0 m-0 text-muted\">\n              {{ formatSeconds(xhamster.video.videoEntity.duration) }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"xhamsterModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"xhamsterModal(false, true)\"\n          :disabled=\"xhamster.isLoading || xhamster.video === null\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      FIND LOGO\n\n    -->\n    <erd-modal\n      v-show=\"findLogo.modal\"\n      @close=\"findLogoModal(false)\"\n      :title=\"`${$t('editor.find-logo')}: ${findLogo.title}`\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2\">\n        <erd-spinner\n          v-if=\"findLogo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"logo-countries\"\n          id=\"logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"findLogo.countries\"\n          v-model=\"findLogo.country\"\n        ></erd-select>\n        <label class=\"w-100\" for=\"find-logo-search\">{{\n          $t(\"editor.find-logo-search\")\n        }}</label>\n        <erd-input\n          id=\"find-logo-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findLogo.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <label class=\"w-100\" for=\"logos\">{{ $t(\"editor.logos\") }}</label>\n        <erd-select\n          key=\"logo-logos\"\n          id=\"logos\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"filteredLogos\"\n          v-model=\"findLogo.logo\"\n        ></erd-select>\n        <div class=\"find-logo form-control mb-2 w-100 text-center\">\n          <a\n            :href=\"`http://static.iptv-tools.com/${findLogo.country}/${findLogo.logo}`\"\n            target=\"_blank\"\n          >\n            <img\n              v-if=\"findLogo.logo.length\"\n              :src=\"`http://static.iptv-tools.com/${findLogo.country}/${findLogo.logo}`\"\n              class=\"stream-logo mt-2\"\n          /></a>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findLogoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"findLogoModal(false, true)\"\n          :disabled=\"findLogo.isLoading || findLogo.logos.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      ASSIGN LOGOS\n\n    -->\n    <erd-modal\n      v-show=\"assignLogo.modal\"\n      @close=\"assignLogoModal(false)\"\n      :title=\"$t('editor.assign-stream-logos')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <erd-spinner\n          v-if=\"assignLogo.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"assign-logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"assign-logo-countries\"\n          id=\"assign-logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"assignLogo.countries\"\n          v-model=\"assignLogo.country\"\n        ></erd-select>\n        <erd-radiobutton\n          class=\"mt-1\"\n          :value=\"1\"\n          v-model=\"assignLogo.assignAll\"\n          >{{ $t(\"editor.assign-all-streams\") }}</erd-radiobutton\n        >\n        <erd-radiobutton :value=\"0\" v-model=\"assignLogo.assignAll\">{{\n          $t(\"editor.assign-missing-only\")\n        }}</erd-radiobutton>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"assignLogoModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"assignLogoModal(false, true)\"\n          :disabled=\"assignLogo.isLoading || assignLogo.country.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      IMPORT M3U\n\n    -->\n    <erd-modal\n      v-show=\"importM3U.modal\"\n      @close=\"importM3UModal(false)\"\n      :title=\"$t('editor.import-m3u')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <label class=\"d-block mb-1\" for=\"title\">{{\n          $t(\"m3u.file\")\n        }}</label>\n        <erd-input\n          class=\"w-100\"\n          type=\"file\"\n          accept=\".m3u8, .m3u\"\n          v-model=\"importM3U.file\"\n          @change=\"uploadM3U\"\n        ></erd-input>\n        <div class=\"radiobrowser-stations\">\n          <erd-spinner\n            v-if=\"importM3U.isLoading\"\n            size=\"lg\"\n            overlay\n            absolute\n          ></erd-spinner>\n          <p class=\"mb-1 pb-0\" v-if=\"importM3U.groups.length\">\n            {{ $t(\"editor.select-groups\") }}\n          </p>\n          <perfect-scrollbar\n            :settings=\"{ suppressScrollX: true, wheelPropagation: false }\"\n          >\n            <div\n              class=\"form-control radiobrowser-station\"\n              :class=\"{ selected: importM3U.importGroups.includes(index) }\"\n              v-for=\"(group, index) in importM3U.groups\"\n              :key=\"`import-group-${index}-${group.name}`\"\n              @click.ctrl=\"toggleImportM3USelection(index)\"\n              @click.shift=\"selectImportM3URangeSelection(index)\"\n              @click.exact=\"selectImportM3USelection(index)\"\n            >\n              <span class=\"station-name\">{{ group.name }}</span>\n              <span class=\"text-muted text-small ml-2\">{{ $t(`category-type.${group.type}`) }}</span>\n              <span class=\"text-muted text-small float-right\"\n                >{{ group.streams.length }}</span\n              >\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"importM3UModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"importM3UModal(false, true)\"\n          :disabled=\"importM3U.isLoading || importM3U.groups.length === 0 || importM3U.importGroups.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      ASSIGN TVG-ID\n\n    -->\n    <erd-modal\n      v-show=\"assignTVGID.modal\"\n      @close=\"assignTVGIDModal(false)\"\n      :title=\"$t('editor.assign-tv-guide')\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 assign-logo\">\n        <erd-spinner\n          v-if=\"assignTVGID.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"assign-tv-guide-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"assign-tv-guide-countries\"\n          id=\"assign-tv-guide-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"assignTVGID.countries\"\n          v-model=\"assignTVGID.country\"\n        ></erd-select>\n        <erd-radiobutton\n          class=\"mt-1\"\n          :value=\"1\"\n          v-model=\"assignTVGID.assignAll\"\n          >{{ $t(\"editor.assign-all-streams\") }}</erd-radiobutton\n        >\n        <erd-radiobutton :value=\"0\" v-model=\"assignTVGID.assignAll\">{{\n          $t(\"editor.assign-epg-missing-only\")\n        }}</erd-radiobutton>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"assignTVGIDModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"assignTVGIDModal(false, true)\"\n          :disabled=\"assignTVGID.isLoading || assignTVGID.country.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      FIND TVG-ID\n\n    -->\n    <erd-modal\n      v-show=\"findTVGID.modal\"\n      @close=\"findTVGIDModal(false)\"\n      :title=\"`${$t('editor.find-tv-guide')}: ${findTVGID.title}`\"\n      class=\"select-none\"\n      small\n    >\n      <div class=\"px-2 find-channel-id\">\n        <erd-spinner\n          v-if=\"findTVGID.isLoading\"\n          size=\"lg\"\n          overlay\n          absolute\n        ></erd-spinner>\n        <label class=\"w-100\" for=\"logo-country\">{{\n          $t(\"editor.logo-country\")\n        }}</label>\n        <erd-select\n          key=\"logo-countries\"\n          id=\"logo-country\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"findTVGID.countries\"\n          v-model=\"findTVGID.country\"\n        ></erd-select>\n        <label class=\"w-100\" for=\"find-tvguide-search\">{{\n          $t(\"editor.find-logo-search\")\n        }}</label>\n        <erd-input\n          id=\"find-tvguide-search\"\n          class=\"mt-1 mb-2 w-100\"\n          v-model=\"findTVGID.search\"\n          autocomplete=\"off\"\n          :placeholder=\"$t('menu.search')\"\n        ></erd-input>\n        <label class=\"w-100\" for=\"channels\">{{ $t(\"editor.channel\") }}</label>\n        <erd-select\n          key=\"tvguide-channels\"\n          id=\"channels\"\n          class=\"w-100 mt-1 mb-2\"\n          :items=\"filteredTVGIDS\"\n          v-model=\"findTVGID.channel\"\n        ></erd-select>\n      </div>\n      <template v-slot:footer>\n        <erd-button\n          @click=\"findTVGIDModal(false)\"\n          icon=\"la-times\"\n          class=\"mr-1\"\n          variant=\"danger\"\n          >{{ $t(\"general.cancel\") }}</erd-button\n        >\n        <erd-button\n          icon=\"la-check\"\n          variant=\"success\"\n          @click=\"findTVGIDModal(false, true)\"\n          :disabled=\"findTVGID.isLoading || findTVGID.channels.length === 0\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n      </template>\n    </erd-modal>\n    <!--  \n\n      APP MENU\n\n    -->\n    <erd-app-menu icon=\"la-tools\">\n      <div class=\"pt-3 select-none\" v-if=\"playlistSelected\">\n        <erd-collapse :title=\"$t('editor.import-m3u')\" key=\"import-m3u\" small>\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"importM3UModal(true)\"\n                ><i class=\"las la-file-import mr-1\"></i\n                >{{ $t(\"editor.import-file\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse :title=\"$t('editor.sort-groups')\" key=\"sort-groups\" small>\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeUp\"\n                ><i class=\"las la-sort-numeric-up mr-1\"></i\n                >{{ $t(\"editor.sort-type-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortGroupTypeDown\"\n                ><i class=\"las la-sort-numeric-down mr-1\"></i\n                >{{ $t(\"editor.sort-type-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.sort-streams')\"\n          key=\"sort-streams\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaUp\"\n                ><i class=\"las la-sort-alpha-up mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamAlphaDown\"\n                ><i class=\"las la-sort-alpha-down mr-1\"></i\n                >{{ $t(\"editor.sort-alpha-down\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenUp\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-up\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"sortStreamHiddenDown\"\n                ><i class=\"las la-eye-slash mr-1\"></i\n                >{{ $t(\"editor.sort-hidden-down\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-radio')\"\n          key=\"import-radio\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"radioBrowserModal(true)\"\n                ><i class=\"las la-broadcast-tower mr-1\"></i\n                >{{ $t(\"editor.import-radiobrowser\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          v-if=\"activeGroupType == 1\"\n          :title=\"$t('editor.import-music')\"\n          key=\"import-music\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"soundcloudModal(true)\"\n                ><i class=\"lab la-soundcloud mr-1\"></i\n                >{{ $t(\"editor.import-soundcloud\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.import-video')\"\n          key=\"import-video\"\n          small\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"youtubeModal(true)\"\n                ><i class=\"lab la-youtube mr-1\"></i\n                >{{ $t(\"editor.import-youtube\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"vimeoModal(true)\"\n                ><i class=\"lab la-vimeo mr-1\"></i\n                >{{ $t(\"editor.import-vimeo\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"dailymotionModal(true)\"\n                ><i class=\"lab la-youtube mr-1\"></i\n                >{{ $t(\"editor.import-dailymotion\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"tedTalksModal(true)\"\n                ><i class=\"las la-comments mr-1\"></i\n                >{{ $t(\"editor.import-ted-talks\") }}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"xhamsterModal(true)\"\n                ><i class=\"las la-heart mr-1\"></i\n                >{{ $t(\"editor.import-xhamster\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.assign-logos')\"\n          key=\"assign-logos\"\n          small\n          v-if=\"activeGroupType == 1\"\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"assignLogoModal(true)\"\n                ><i class=\"las la-photo-video mr-1\"></i\n                >{{ $t(\"editor.assign-stream-logos\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n        <erd-collapse\n          :title=\"$t('editor.assign-tv-guide')\"\n          key=\"assign-tv-guide\"\n          small\n          v-if=\"activeGroupType == 1\"\n        >\n          <ul class=\"list-unstyled mb-0\">\n            <li class=\"nav-item\">\n              <a href=\"#\" @click.prevent=\"assignTVGIDModal(true)\"\n                ><i class=\"las la-th-list mr-1\"></i\n                >{{ $t(\"editor.assign-tvg-ids\") }}</a\n              >\n            </li>\n          </ul>\n        </erd-collapse>\n      </div>\n    </erd-app-menu>\n    <erd-row class=\"m-0 p-0\" v-if=\"playlistSelected\">\n      <!--  \n\n        GROUPS\n\n      -->\n      <erd-col xl=\"4\" lg=\"4\" md=\"12\" class=\"pr-lg-0\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.groups\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredGroups.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"groupContextMenu\"\n          depth=\"1\"\n          ref=\"context-group\"\n        ></erd-context-menu>\n        <div @contextmenu.prevent=\"openContext('context-group')\">\n          <draggable\n            v-model=\"playlistEditor.groups\"\n            @start=\"dragGroup = true\"\n            @end=\"dragGroup = false\"\n            @change=\"groupDragChanged\"\n            animation=\"200\"\n            group=\"groups\"\n            ghost-class=\"ghost\"\n            scroll-sensitivity=\"200\"\n            selected-class=\"selected\"\n            handle=\".handle\"\n            :force-fallback=\"true\"\n            :multi-drag=\"true\"\n          >\n            <transition-group\n              type=\"transition\"\n              :name=\"!dragGroup ? 'flip-list' : null\"\n            >\n              <div\n                class=\"form-control editor-group\"\n                :class=\"{\n                  selected: activeGroups.includes(group.id),\n                  active: activeGroup === group.id,\n                  hidden: group.group_is_hidden,\n                }\"\n                v-for=\"(group, index) in filteredGroups\"\n                :key=\"`group-${index}`\"\n                @click.ctrl=\"toggleGroupSelection(group.id)\"\n                @click.shift=\"selectGroupRangeSelection(group.id)\"\n                @click.exact=\"selectGroupSelection(group.id)\"\n                @dblclick=\"groupDoubleClick\"\n              >\n                <i class=\"las la-braille handle mr-2\"></i>\n                <a href=\"#\" @click.prevent=\"activeGroup = group.id\">{{\n                  group.group_name\n                }}</a>\n                <span class=\"text-muted text-small ml-2\">{{ $t(`category-type.${group.group_type}`) }}</span>\n                <span class=\"float-right\">{{ group.streams }}</span>\n              </div>\n            </transition-group>\n          </draggable>\n        </div>\n      </erd-col>\n      <!--  \n\n        STREAMS\n\n      -->\n      <erd-col xl=\"8\" lg=\"8\" md=\"12\">\n        <div class=\"form-control\">\n          <span class=\"mr-1\">{{ $t(\"xtream.streams\") }}</span>\n          <span class=\"font-weight-bold\">{{ filteredStreams.length }}</span>\n        </div>\n        <erd-context-menu\n          :items=\"streamContextMenu\"\n          depth=\"1\"\n          ref=\"context-stream\"\n        ></erd-context-menu>\n        <!-- LIVE -->\n        <template v-if=\"activeGroupType === 1 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}-${stream.id}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{ stream.stream_tvg_name }}</span>\n                  <span class=\"text-muted\">{{ stream.stream_tvg_id }}</span>\n                  <i class=\"ml-2 las la-music\" v-if=\"stream.stream_radio\"></i>\n                  <img\n                    class=\"stream-icon\"\n                    v-if=\"stream.stream_tvg_logo\"\n                    :src=\"stream.stream_tvg_logo\"\n                  />\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- MOVIES -->\n        <template v-if=\"activeGroupType === 2 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{\n                    stream.movie_name && stream.movie_name.length\n                      ? stream.movie_name\n                      : stream.stream_tvg_name\n                  }}</span>\n                  <span class=\"text-muted\">{{ stream.movie_year }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n        <!-- SERIES -->\n        <template v-if=\"activeGroupType === 3 && !isLoading\">\n          <div @contextmenu.prevent=\"openContext('context-stream')\">\n            <draggable\n              v-model=\"playlistEditor.streams\"\n              @start=\"dragStream = true\"\n              @end=\"dragStream = false\"\n              @change=\"streamDragChanged\"\n              animation=\"200\"\n              group=\"streams\"\n              ghost-class=\"ghost\"\n              scroll-sensitivity=\"200\"\n              selected-class=\"selected\"\n              handle=\".handle\"\n              :force-fallback=\"true\"\n              :multi-drag=\"true\"\n            >\n              <transition-group\n                type=\"transition\"\n                :name=\"!dragStream ? 'flip-list' : null\"\n              >\n                <div\n                  class=\"form-control editor-stream\"\n                  :class=\"{\n                    selected: activeStreams.includes(stream.id),\n                    active: activeStream === stream.id,\n                    hidden: stream.stream_is_hidden,\n                    success: stream.sync_is_new,\n                    danger: stream.sync_is_removed,\n                  }\"\n                  v-for=\"(stream, index) in filteredStreams\"\n                  :key=\"`stream-${index}`\"\n                  @click.ctrl=\"toggleStreamSelection(stream.id)\"\n                  @click.shift=\"selectStreamRangeSelection(stream.id)\"\n                  @click.exact=\"selectStreamSelection(stream.id)\"\n                  @dblclick=\"streamDoubleClick\"\n                >\n                  <i class=\"las la-braille handle mr-2\"></i>\n                  <span class=\"mr-2\">{{\n                    stream.serie_name && stream.serie_name.length\n                      ? stream.serie_name\n                      : stream.stream_tvg_name\n                  }}</span>\n                  <span class=\"text-muted mr-1\">{{\n                    $t(\"editor.season\").format(stream.serie_season)\n                  }}</span>\n                  <span class=\"text-muted\">{{\n                    $t(\"editor.episode\").format(stream.serie_episode)\n                  }}</span>\n                </div>\n              </transition-group>\n            </draggable>\n          </div>\n        </template>\n      </erd-col>\n    </erd-row>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-escape */\n\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\nimport draggable from \"vuedraggable\";\nimport { SubscriptionType } from \"../../../constants/config\";\nimport { countries } from \"../../../helpers\";\nimport { m3u } from \"../../../plugins/m3u\";\n\nexport default {\n  components: {\n    draggable,\n  },\n  data() {\n    return {\n      countries,\n      activeTab: 0,\n      activeGroup: -1,\n      activeGroups: [],\n      activeStream: -1,\n      activeStreams: [],\n      dragGroup: false,\n      dragStream: false,\n      editor: false,\n      search: null,\n      isLoading: false,\n      playlistEditor: {\n        id: undefined,\n        playlist: null,\n        groups: [],\n        streams: [],\n        changed: false,\n      },\n      findReplace: {\n        type: 0,\n        modal: false,\n        from: \"\",\n        to: \"\",\n        replaceAll: false,\n        ignoreCase: false,\n        selectedOnly: 0,\n      },\n      prefixSuffix: {\n        type: 0,\n        modal: false,\n        prefix: \"\",\n        suffix: \"\",\n        selectedOnly: 0,\n      },\n      convertCase: {\n        type: 0,\n        modal: false,\n        method: 0,\n        selectedOnly: 0,\n      },\n      groupEditor: {\n        modal: false,\n        id: 0,\n        group_name: \"\",\n        group_parent_code: \"\",\n        group_type: 1,\n        group_is_hidden: 0,\n      },\n      streamEditor: {\n        modal: false,\n        id: -1,\n        stream_tvg_name: \"\",\n        stream_tvg_id: \"\",\n        stream_tvg_logo: \"\",\n        stream_parent_code: \"\",\n        stream_radio: 0,\n        stream_is_hidden: 0,\n        stream_is_custom: 0,\n        movie_name: \"\",\n        movie_year: \"\",\n        serie_name: \"\",\n        serie_season: 0,\n        serie_episode: 0,\n        source_stream_url: \"\",\n      },\n      radioBrowser: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        active: [],\n        search: \"\",\n        results: [],\n      },\n      soundcloud: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        track: null,\n      },\n      youtube: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      vimeo: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      dailymotion: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        videoId: \"\",\n        video: null,\n      },\n      tedTalks: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        video: null,\n      },\n      xhamster: {\n        isLoading: false,\n        modal: false,\n        bounce: null,\n        url: \"\",\n        video: null,\n      },\n      findLogo: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        logos: [],\n        logo: \"\",\n        search: \"\",\n        title: \"\",\n      },\n      assignLogo: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        logos: [],\n        assignAll: 0,\n      },\n      importM3U: {\n        isLoading: false,\n        modal: false,\n        groups: [],\n        importGroups: [],\n        m3u: null,\n        file: null,\n      },\n      findTVGID: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        channels: [],\n        channel: \"\",\n        search: \"\",\n        title: \"\",\n      },\n      assignTVGID: {\n        isLoading: false,\n        modal: false,\n        countries: [],\n        country: \"\",\n        channels: [],\n        assignAll: 0,\n      },\n      saveChanges: {\n        modal: false,\n      },\n      groupTypes: [\n        { text: this.$t(\"xtream.live\"), value: 1 },\n        { text: this.$t(\"xtream.movies\"), value: 2 },\n        { text: this.$t(\"xtream.series\"), value: 3 },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\", \"soundcloudClientId\", \"movieSeriePlaylist\"]),\n    searchFiltered() {\n      if (this.search === null) {\n        return this.accounts;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.accounts.filter((account) => {\n          return (\n            String(account.title).match(re) ||\n            String(account.host).match(re) ||\n            String(account.port).match(re) ||\n            String(account.username).match(re) ||\n            String(account.password).match(re) ||\n            this.formatDate(account.synced_at).match(re) ||\n            this.$t(`sync-interval.${account.sync_interval}`).match(re)\n          );\n        });\n      }\n    },\n    playlistSelected() {\n      return this.playlistEditor.id !== undefined;\n    },\n    lastSelectedGroup() {\n      return this.activeGroups[this.activeGroups.length - 1];\n    },\n    lastSelectedStream() {\n      return this.activeStreams[this.activeStreams.length - 1];\n    },\n    canEditGroupType() {\n      return (\n        this.groupEditor.id &&\n        this.getGroupWithId(this.groupEditor.id).streams == 0\n      );\n    },\n    subscriptionLimited() {\n      return (\n        this.currentUser.subscription &&\n        this.currentUser.subscription.subscription_type ==\n          SubscriptionType.Enthusiast\n      );\n    },\n    filteredGroups() {\n      if (this.subscriptionLimited) {\n        return this.playlistEditor.groups.filter(\n          (group) =>\n            group.group_is_removed !== 1 &&\n            group.source_group_type == 1 &&\n            group.group_type == 1\n        );\n      }\n      return this.playlistEditor.groups.filter(\n        (group) => group.group_is_removed !== 1\n      );\n    },\n    filteredStreams() {\n      return this.playlistEditor.streams.filter(\n        (group) => group.stream_is_removed !== 1\n      );\n    },\n    activeGroupType() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == this.activeGroup\n      );\n      return index > -1 ? this.playlistEditor.groups[index].group_type : 0;\n    },\n    filteredLogos() {\n      if (!this.findLogo.search.length) {\n        return this.findLogo.logos;\n      }\n      let selectedStream = this.getStreamWithId(this.activeStreams[0]);\n      let re = new RegExp(this.findLogo.search, \"i\");\n      return this.findLogo.logos.filter((logo) => {\n        return logo.text.match(re);\n      });\n    },\n    filteredTVGIDS() {\n      if (!this.findTVGID.search.length) {\n        return this.findTVGID.channels;\n      }\n      let selectedStream = this.getStreamWithId(this.activeStreams[0]);\n      let re = new RegExp(this.findTVGID.search, \"i\");\n      return this.findTVGID.channels.filter((channel) => {\n        return channel.text.match(re);\n      });\n    },\n    groupContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-group\"),\n          onClick: vm.addGroup,\n        },\n        {\n          disabled: vm.activeGroups.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-group\"),\n          onClick: function () {\n            if (vm.activeGroups.length === 1) {\n              vm.editGroupModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeGroups = [...vm.playlistEditor.groups.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeGroups = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 1);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 1);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.toggleGroupVisibility();\n            }\n          },\n        },\n        {\n          disabled: vm.activeGroups.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeGroups.length) {\n              vm.deleteSelectedGroups();\n            }\n          },\n        },\n      ];\n    },\n    streamContextMenu() {\n      let vm = this;\n      return [\n        {\n          icon: \"la-plus\",\n          text: vm.$t(\"editor.add-stream\"),\n          onClick: vm.addStream,\n        },\n        {\n          disabled: vm.activeStreams.length !== 1,\n          icon: \"la-edit\",\n          text: vm.$t(\"editor.edit-stream\"),\n          onClick: function () {\n            if (vm.activeStreams.length === 1) {\n              vm.editStreamModal(true);\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          text: vm.$t(\"general.select-all\"),\n          onClick: function () {\n            vm.activeStreams = [...vm.playlistEditor.streams.map((g) => g.id)];\n          },\n        },\n        {\n          text: vm.$t(\"general.select-none\"),\n          onClick: function () {\n            vm.activeStreams = [];\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled:\n            vm.activeGroups.length !== 1 ||\n            vm.activeStreams.length === 0 ||\n            vm.getGroupWithId(vm.activeGroups[0]).group_type !==\n              vm.activeGroupType ||\n            vm.activeGroups[0] === vm.activeGroup,\n          icon: \"la-chevron-left\",\n          text: vm.$t(\"editor.move-to-selected-group\"),\n          onClick: function () {\n            vm.moveToSelectedGroup();\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          icon: \"la-search\",\n          text: vm.$t(\"editor.find-replace\"),\n          onClick: function () {\n            vm.findAndReplaceModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-pen\",\n          text: vm.$t(\"editor.add-prefix-suffix\"),\n          onClick: function () {\n            vm.prefixSuffixModal(true, 2);\n          },\n        },\n        {\n          icon: \"la-font\",\n          text: vm.$t(\"editor.change-case\"),\n          onClick: function () {\n            vm.convertCaseModal(true, 2);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length !== 1 || vm.activeGroupType !== 1,\n          icon: \"la-photo-video\",\n          text: vm.$t(\"editor.find-logo\"),\n          onClick: function () {\n            vm.findLogoModal(true);\n          },\n        },\n        {\n          disabled: vm.activeStreams.length !== 1 || vm.activeGroupType !== 1,\n          icon: \"la-th-list\",\n          text: vm.$t(\"editor.find-tv-guide\"),\n          onClick: function () {\n            vm.findTVGIDModal(true);\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0 || vm.activeGroupType !== 1,\n          icon: \"la-music\",\n          text: vm.$t(\"editor.toggle-radio\"),\n          onClick: function () {\n            if (vm.activeStreams.length && vm.activeGroupType == 1) {\n              vm.toggleStreamRadio();\n            }\n          },\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-eye\",\n          text: vm.$t(\"editor.toggle-visibility\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.toggleStreamVisibility();\n            }\n          },\n        },\n        {\n          divider: true,\n        },\n        {\n          disabled: vm.activeStreams.length === 0,\n          icon: \"la-trash\",\n          text: vm.$t(\"editor.delete\"),\n          onClick: function () {\n            if (vm.activeStreams.length) {\n              vm.deleteSelectedStreams();\n            }\n          },\n        },\n      ];\n    },\n  },\n  methods: {\n    groupDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.playlistEditor.groups[i].group_order != i + 1) {\n          this.playlistEditor.groups[i].group_order = i + 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n    },\n    streamDragChanged(g) {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.playlistEditor.streams[i].stream_order != i + 1) {\n          this.playlistEditor.streams[i].stream_order = i + 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n    },\n    openContext(context) {\n      this.$refs[context].open();\n    },\n    searchEditor(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printEditor() {\n      document.getElementById(\"editor\").print();\n    },\n    formatNumber(number) {\n      return new Intl.NumberFormat(this.$t(\"date.locale\")).format(number);\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    formatDateYoutube(date) {\n      return new Date(date).toLocaleDateString(this.$t(\"date.locale\"), {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n    },\n    formatSeconds(sec) {\n      var d = Number(sec);\n      var h = Math.floor(d / 3600);\n      var m = Math.floor((d % 3600) / 60);\n      var s = Math.floor((d % 3600) % 60);\n\n      var hour = this.$t(\"general.hour\");\n      var hours = this.$t(\"general.hours\");\n      var minute = this.$t(\"general.minute\");\n      var minutes = this.$t(\"general.minutes\");\n      var second = this.$t(\"general.second\");\n      var seconds = this.$t(\"general.seconds\");\n\n      var hDisplay = h > 0 ? h + (h == 1 ? ` ${hour} ` : ` ${hours} `) : \"\";\n      var mDisplay = m > 0 ? m + (m == 1 ? ` ${minute} ` : ` ${minutes} `) : \"\";\n      var sDisplay = s > 0 ? s + (s == 1 ? ` ${second} ` : ` ${seconds} `) : \"\";\n      return hDisplay + mDisplay + sDisplay;\n    },\n\n    getGroupWithId(id) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id == id\n      );\n      return this.playlistEditor.groups[index];\n    },\n    getStreamWithId(id) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id == id\n      );\n      return this.playlistEditor.streams[index];\n    },\n    doSave() {\n      this.isLoading = true;\n      this.playlistEditor.changed = false;\n      return new Promise((resolve) => {\n        let index = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let updateGroups = this.playlistEditor.groups\n          .filter((group) => !group.group_is_removed && group.modified)\n          .map((group) => {\n            return {\n              id: group.id,\n              group_name: group.group_name,\n              group_order: group.group_order,\n              group_type: group.group_type,\n              group_parent_code: group.group_parent_code,\n              group_is_hidden: group.group_is_hidden,\n            };\n          });\n        let deleteGroups = this.playlistEditor.groups\n          .filter((group) => group.group_is_removed && group.modified)\n          .map((group) => group.id)\n          .join();\n\n        let updateStreams;\n        switch (this.activeGroupType) {\n          // Live streams\n          case 1:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  stream_tvg_name: stream.stream_tvg_name,\n                  stream_tvg_id: stream.stream_tvg_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_parent_code: stream.stream_parent_code,\n                  stream_radio: stream.stream_radio,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Movies\n          case 2:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  movie_name: stream.movie_name,\n                  movie_year: stream.movie_year,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n          // Series\n          case 3:\n            updateStreams = this.playlistEditor.streams\n              .filter(\n                (stream) => stream.stream_is_removed !== 1 && stream.modified\n              )\n              .map((stream) => {\n                return {\n                  id: stream.id,\n                  source_stream_url: stream.source_stream_url,\n                  serie_name: stream.serie_name,\n                  serie_season: stream.serie_season,\n                  serie_episode: stream.serie_episode,\n                  tmdb_id: stream.tmdb_id,\n                  stream_tvg_logo: stream.stream_tvg_logo,\n                  stream_is_hidden: stream.stream_is_hidden,\n                  stream_order: stream.stream_order,\n                };\n              });\n            break;\n        }\n        let deleteStreams = this.playlistEditor.streams\n          .filter((stream) => stream.stream_is_removed === 1 && stream.modified)\n          .map((stream) => stream.id)\n          .join();\n\n        let requests = [];\n        if (updateGroups.length) {\n          requests.push(\n            httpService.post(\"editor/update-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: updateGroups,\n            })\n          );\n        }\n        if (deleteGroups.length) {\n          index = 0;\n          requests.push(\n            httpService.post(\"editor/delete-groups\", {\n              playlist_id: this.playlistEditor.id,\n              groups: deleteGroups,\n            })\n          );\n        }\n        if (updateStreams.length) {\n          requests.push(\n            httpService.post(`editor/update-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: updateStreams,\n            })\n          );\n        }\n        if (deleteStreams.length) {\n          requests.push(\n            httpService.post(`editor/delete-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              streams: deleteStreams,\n            })\n          );\n        }\n        Promise.all(requests).then((res) => {\n          this.loadPlaylist(this.playlistEditor.id, index);\n          resolve(res);\n        });\n      });\n    },\n    doCancel() {\n      this.isLoading = true;\n      Promise.all([this.restoreGroups(), this.restoreStreams()]).then(() => {\n        this.playlistEditor.changed = false;\n        this.isLoading = false;\n      });\n    },\n    doTabChange(tab) {\n      this.activeTab = tab;\n    },\n    updateGroupOrder(source) {\n      return new Promise((resolve) => {\n        let groups = [...source];\n        for (let i = 0; i < groups.length; i++) {\n          groups[i].source_group_order = i + 1;\n          groups[i].group_order = i + 1;\n        }\n        resolve(groups);\n      });\n    },\n    updateStreamOrder(source) {\n      return new Promise((resolve) => {\n        let streams = [...source];\n        for (let i = 0; i < streams.length; i++) {\n          streams[i].source_stream_order = i + 1;\n          streams[i].stream_order = i + 1;\n        }\n        resolve(streams);\n      });\n    },\n    restoreGroupOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.groups.sort((a, b) =>\n          a.source_group_order > b.source_group_order\n            ? 1\n            : b.source_group_order > a.source_group_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreStreamOrder() {\n      return new Promise((resolve) => {\n        this.playlistEditor.streams.sort((a, b) =>\n          a.source_stream_order > b.source_stream_order\n            ? 1\n            : b.source_stream_order > a.source_stream_order\n            ? -1\n            : 0\n        );\n        resolve();\n      });\n    },\n    restoreGroups() {\n      return new Promise((resolve) => {\n        this.restoreGroupOrder().then(() => {\n          let group;\n          for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n            group = this.playlistEditor.groups[i];\n            group.modified = false;\n            group.group_is_removed = 0;\n            group.group_type = group.source_group_type;\n            group.group_name = group.source_group_name;\n            group.parent_code = group.source_group_parent_code;\n            group.group_is_hidden = group.source_group_is_hidden;\n          }\n          resolve();\n        });\n      });\n    },\n    restoreStreams() {\n      return new Promise((resolve) => {\n        this.restoreStreamOrder().then(() => {\n          let stream;\n          for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n            stream = this.playlistEditor.streams[i];\n            stream.modified = false;\n            stream.stream_is_removed = 0;\n            stream.stream_tvg_name = stream.source_stream_tvg_name;\n            stream.stream_tvg_id = stream.source_stream_tvg_id;\n            stream.stream_tvg_logo = stream.source_stream_tvg_logo;\n            stream.stream_tvg_chno = stream.source_stream_tvg_chno;\n            stream.stream_tvg_shift = stream.source_stream_tvg_shift;\n            stream.stream_parent_code = stream.source_stream_parent_code;\n            stream.stream_audio_track = stream.source_stream_audio_track;\n            stream.stream_aspect_ratio = stream.source_stream_aspect_ratio;\n            stream.stream_radio = stream.source_stream_radio;\n            stream.stream_order = stream.source_stream_order;\n            stream.stream_is_hidden = stream.source_stream_is_hidden;\n            if (\n              stream.movie_name !== undefined &&\n              stream.movie_year !== undefined\n            ) {\n              stream.movie_name = stream.source_movie_name;\n              stream.movie_year = stream.source_movie_year;\n            }\n            if (\n              stream.serie_name !== undefined &&\n              stream.serie_season !== undefined &&\n              stream.serie_episode !== undefined\n            ) {\n              stream.serie_name = stream.source_serie_name;\n              stream.serie_season = stream.source_serie_season;\n              stream.serie_episode = stream.source_serie_episode;\n            }\n          }\n          resolve();\n        });\n      });\n    },\n    toggleGroupVisibility() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_hidden =\n            !this.playlistEditor.groups[i].group_is_hidden;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamVisibility() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_hidden =\n            !this.playlistEditor.streams[i].stream_is_hidden;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    toggleStreamRadio() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          if (this.playlistEditor.streams[i].stream_radio == 0) {\n            this.playlistEditor.streams[i].stream_radio = 1;\n          } else {\n            this.playlistEditor.streams[i].stream_radio = 0;\n          }\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedGroups() {\n      for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n        if (this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.playlistEditor.groups[i].group_is_removed = 1;\n          this.playlistEditor.groups[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    deleteSelectedStreams() {\n      for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n        if (this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.playlistEditor.streams[i].stream_is_removed = 1;\n          this.playlistEditor.streams[i].modified = true;\n        }\n      }\n      this.playlistEditor.changed = true;\n    },\n    loadPlaylist(val, group_index = undefined) {\n      this.isLoading = true;\n      if (this.playlistEditor.changed) {\n        this.doSave();\n      }\n      this.playlistEditor.id = val;\n      httpService\n        .get(`editor/groups/${val}`)\n        .then((res) => {\n          if (res.status === true) {\n            this.updateGroupOrder(res.data).then((groups) => {\n              this.playlistEditor.groups = groups.map((group) => {\n                const grp = Object.assign({}, group);\n                grp.source_group_parent_code = group.group_parent_code;\n                grp.source_group_is_hidden = group.group_is_hidden;\n                grp.source_group_name = group.group_name;\n                grp.source_group_type = group.group_type;\n                grp.group_is_removed = false;\n                grp.modified = false;\n                return grp;\n              });\n              if (groups.length) {\n                if (group_index === undefined) {\n                  this.activeGroup = this.playlistEditor.groups[0].id;\n                } else {\n                  this.activeGroup = this.playlistEditor.groups[group_index].id;\n                  this.loadStreams();\n                }\n              }\n            });\n          }\n          this.isLoading = false;\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    toggleGroupSelection(item) {\n      let idx = this.activeGroups.indexOf(item);\n      if (idx !== -1) {\n        this.activeGroups.splice(idx, 1);\n      } else {\n        this.activeGroups.push(item);\n      }\n    },\n    toggleStreamSelection(item) {\n      let idx = this.activeStreams.indexOf(item);\n      if (idx !== -1) {\n        this.activeStreams.splice(idx, 1);\n      } else {\n        this.activeStreams.push(item);\n      }\n    },\n    toggleRadiobrowserSelection(item) {\n      let idx = this.radioBrowser.active.indexOf(item);\n      if (idx !== -1) {\n        this.radioBrowser.active.splice(idx, 1);\n      } else {\n        this.radioBrowser.active.push(item);\n      }\n    },\n    toggleImportM3USelection(item) {\n      let idx = this.importM3U.importGroups.indexOf(item);\n      if (idx !== -1) {\n        this.importM3U.importGroups.splice(idx, 1);\n      } else {\n        this.importM3U.importGroups.push(item);\n      }\n    },\n    indexOfGroup(group) {\n      return this.playlistEditor.groups.map((g) => g.id).indexOf(group);\n    },\n    selectGroupRangeSelection(item) {\n      const lastIndex = this.indexOfGroup(this.lastSelectedGroup);\n      const itemIndex = this.indexOfGroup(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeGroups.includes(this.playlistEditor.groups[i].id)) {\n          this.activeGroups.push(this.playlistEditor.groups[i].id);\n        }\n      }\n    },\n    indexOfStream(stream) {\n      return this.playlistEditor.streams.map((g) => g.id).indexOf(stream);\n    },\n    selectStreamRangeSelection(item) {\n      const lastIndex = this.indexOfStream(this.lastSelectedStream);\n      const itemIndex = this.indexOfStream(item);\n      const dir = itemIndex > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != itemIndex + dir; i += dir) {\n        if (!this.activeStreams.includes(this.playlistEditor.streams[i].id)) {\n          this.activeStreams.push(this.playlistEditor.streams[i].id);\n        }\n      }\n    },\n    selectRadiobrowserRangeSelection(index) {\n      const lastIndex =\n        this.radioBrowser.active[this.radioBrowser.active.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.radioBrowser.active.includes(i)) {\n          this.radioBrowser.active.push(i);\n        }\n      }\n    },\n    selectImportM3URangeSelection(index) {\n      const lastIndex =\n        this.importM3U.importGroups[this.importM3U.importGroups.length - 1];\n      const dir = index > lastIndex ? 1 : -1;\n      for (let i = lastIndex; i != index + dir; i += dir) {\n        if (!this.importM3U.importGroups.includes(i)) {\n          this.importM3U.importGroups.push(i);\n        }\n      }\n    },\n    selectGroupSelection(item) {\n      this.activeGroups.length = 0;\n      this.activeGroups.push(item);\n    },\n    selectStreamSelection(item) {\n      this.activeStreams.length = 0;\n      this.activeStreams.push(item);\n    },\n    selectRadiobrowserSelection(item) {\n      this.radioBrowser.active.length = 0;\n      this.radioBrowser.active.push(item);\n    },\n    selectImportM3USelection(item) {\n      this.importM3U.importGroups.length = 0;\n      this.importM3U.importGroups.push(item);\n    },\n    findAndReplaceModal(show, type = 1) {\n      this.findReplace.type = type;\n      this.findReplace.modal = show;\n    },\n    findAndReplace() {\n      let options = \"\";\n      if (this.findReplace.replaceAll) {\n        options += \"g\";\n      }\n      if (this.findReplace.ignoreCase) {\n        options += \"i\";\n      }\n      let re = new RegExp(this.findReplace.from.replace(\"|\", \"\\\\|\"), options);\n      switch (parseInt(this.findReplace.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[i].group_name =\n                  this.playlistEditor.groups[i].group_name.replace(\n                    re,\n                    this.findReplace.to\n                  );\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = group.group_name.replace(\n                re,\n                this.findReplace.to\n              );\n            });\n          }\n          break;\n\n        // Streams\n        case 2:\n          if (parseInt(this.findReplace.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].stream_tvg_name =\n                    this.playlistEditor.streams[i].stream_tvg_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].movie_name =\n                    this.playlistEditor.streams[i].movie_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].serie_name =\n                    this.playlistEditor.streams[i].serie_name.replace(\n                      re,\n                      this.findReplace.to\n                    );\n                }\n              }\n            }\n          } else {\n            this.filteredStreams.map((stream) => {\n              if (this.activeGroupType === 1) {\n                stream.modified = true;\n                stream.stream_tvg_name = stream.stream_tvg_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 2) {\n                stream.modified = true;\n                stream.movie_name = stream.movie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n              if (this.activeGroupType === 3) {\n                stream.modified = true;\n                stream.serie_name = stream.serie_name.replace(\n                  re,\n                  this.findReplace.to\n                );\n              }\n            });\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.findReplace.modal = false;\n    },\n    prefixSuffixModal(show, type = 1) {\n      this.prefixSuffix.type = type;\n      this.prefixSuffix.modal = show;\n    },\n    addPrefixSuffix() {\n      let prefix = this.prefixSuffix.prefix;\n      let suffix = this.prefixSuffix.suffix;\n      switch (parseInt(this.prefixSuffix.type)) {\n        // Group\n        case 1:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.groups.length; i++) {\n              if (\n                this.activeGroups.includes(this.playlistEditor.groups[i].id)\n              ) {\n                this.playlistEditor.groups[i].modified = true;\n                this.playlistEditor.groups[i].group_name =\n                  prefix + this.playlistEditor.groups[i].group_name + suffix;\n              }\n            }\n          } else {\n            this.filteredGroups.map((group) => {\n              group.modified = true;\n              group.group_name = prefix + group.group_name + suffix;\n            });\n          }\n          break;\n\n        // Stream\n        case 2:\n          if (parseInt(this.prefixSuffix.selectedOnly) === 1) {\n            for (let i = 0; i < this.playlistEditor.streams.length; i++) {\n              if (\n                this.activeStreams.includes(this.playlistEditor.streams[i].id)\n              ) {\n                if (this.activeGroupType === 1) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].stream_tvg_name =\n                    prefix +\n                    this.playlistEditor.streams[i].stream_tvg_name +\n                    suffix;\n                }\n                if (this.activeGroupType === 2) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].movie_name =\n                    prefix + this.playlistEditor.streams[i].movie_name + suffix;\n                }\n                if (this.activeGroupType === 3) {\n                  this.playlistEditor.streams[i].modified = true;\n                  this.playlistEditor.streams[i].serie_name =\n                    prefix + this.playlistEditor.streams[i].serie_name + suffix;\n                }\n              }\n            }\n          } else {\n            if (this.activeGroupType === 1) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.stream_tvg_name =\n                  prefix + stream.stream_tvg_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 2) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.movie_name = prefix + stream.movie_name + suffix;\n              });\n            }\n            if (this.activeGroupType === 3) {\n              this.filteredStreams.map((stream) => {\n                stream.modified = true;\n                stream.serie_name = prefix + stream.serie_name + suffix;\n              });\n            }\n          }\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.prefixSuffix.modal = false;\n    },\n    convertCaseModal(show, type) {\n      this.convertCase.type = type;\n      this.convertCase.modal = show;\n    },\n    changeCase() {\n      let method = this.convertCase.method;\n      let groups;\n      let streams;\n      if (parseInt(this.convertCase.selectedOnly) === 1) {\n        groups = this.filteredGroups.filter((group) => {\n          return this.activeGroups.includes(group.id);\n        });\n        streams = this.filteredStreams.filter((stream) => {\n          return this.activeStreams.includes(stream.id);\n        });\n      } else {\n        groups = this.filteredGroups;\n        streams = this.filteredStreams;\n      }\n      switch (parseInt(this.convertCase.type)) {\n        // Categories\n        case 1:\n          groups.map((group) => {\n            switch (parseInt(method)) {\n              case 0:\n                group.modified = true;\n                group.group_name = group.group_name.titleCase();\n                break;\n              case 1:\n                group.modified = true;\n                group.group_name = group.group_name.toUpperCase();\n                break;\n              case 2:\n                group.modified = true;\n                group.group_name = group.group_name.toLowerCase();\n                break;\n            }\n          });\n          break;\n\n        // Streams\n        case 2:\n          streams.map((stream) => {\n            switch (parseInt(method)) {\n              case 0:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.titleCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.titleCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.titleCase();\n                }\n                break;\n              case 1:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toUpperCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toUpperCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toUpperCase();\n                }\n                break;\n              case 2:\n                if (this.activeGroupType === 1) {\n                  stream.modified = true;\n                  stream.stream_tvg_name = stream.stream_tvg_name.toLowerCase();\n                }\n                if (this.activeGroupType === 2) {\n                  stream.modified = true;\n                  stream.movie_name = stream.movie_name.toLowerCase();\n                }\n                if (this.activeGroupType === 3) {\n                  stream.modified = true;\n                  stream.serie_name = stream.serie_name.toLowerCase();\n                }\n                break;\n            }\n          });\n          break;\n      }\n      this.playlistEditor.changed = true;\n      this.convertCase.modal = false;\n    },\n    editGroupModal(show) {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroups[0]\n      );\n      let group = this.playlistEditor.groups[index];\n      if (group) {\n        this.groupEditor.id = this.activeGroups[0];\n        this.groupEditor.group_type = group.group_type;\n        this.groupEditor.group_name = group.group_name;\n        this.groupEditor.group_is_hidden = group.group_is_hidden;\n        this.groupEditor.group_parent_code = group.group_parent_code;\n        this.groupEditor.modal = show;\n      }\n    },\n    editStreamModal(show) {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      let stream = this.playlistEditor.streams[index];\n      if (stream) {\n        this.streamEditor.id = this.activeStreams[0];\n        this.streamEditor.stream_tvg_name = stream.stream_tvg_name;\n        this.streamEditor.stream_tvg_id = stream.stream_tvg_id;\n        this.streamEditor.stream_tvg_logo = stream.stream_tvg_logo;\n        this.streamEditor.stream_parent_code = stream.stream_parent_code;\n        this.streamEditor.stream_radio = stream.stream_radio;\n        this.streamEditor.stream_is_hidden = stream.stream_is_hidden;\n        this.streamEditor.source_stream_url = stream.source_stream_url;\n        this.streamEditor.stream_is_custom = stream.stream_is_custom;\n        if (\n          stream.movie_name !== undefined &&\n          stream.movie_year !== undefined &&\n          stream.tmdb_id !== undefined\n        ) {\n          this.streamEditor.movie_name = stream.movie_name;\n          this.streamEditor.movie_year = stream.movie_year;\n          this.streamEditor.tmdb_id = stream.tmdb_id;\n        }\n        if (\n          stream.serie_name !== undefined &&\n          stream.serie_season !== undefined &&\n          stream.serie_episode !== undefined\n        ) {\n          this.streamEditor.serie_name = stream.serie_name;\n          this.streamEditor.serie_season = stream.serie_season;\n          this.streamEditor.serie_episode = stream.serie_episode;\n        }\n        this.streamEditor.modal = show;\n      }\n    },\n    editGroup() {\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.groupEditor.id\n      );\n      this.playlistEditor.groups[index].group_type =\n        this.groupEditor.group_type;\n      this.playlistEditor.groups[index].group_name =\n        this.groupEditor.group_name;\n      this.playlistEditor.groups[index].group_is_hidden =\n        this.groupEditor.group_is_hidden;\n      this.playlistEditor.groups[index].group_parent_code =\n        this.groupEditor.group_parent_code;\n      this.playlistEditor.groups[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.groupEditor.modal = false;\n    },\n    editStream() {\n      let index = this.playlistEditor.streams.findIndex(\n        (stream) => stream.id === this.activeStreams[0]\n      );\n      this.playlistEditor.streams[index].stream_tvg_name =\n        this.streamEditor.stream_tvg_name;\n      this.playlistEditor.streams[index].stream_tvg_id =\n        this.streamEditor.stream_tvg_id;\n      this.playlistEditor.streams[index].stream_tvg_logo =\n        this.streamEditor.stream_tvg_logo;\n      this.playlistEditor.streams[index].stream_parent_code =\n        this.streamEditor.stream_parent_code;\n      this.playlistEditor.streams[index].stream_is_hidden =\n        this.streamEditor.stream_is_hidden;\n      this.playlistEditor.streams[index].stream_radio =\n        this.streamEditor.stream_radio;\n      this.playlistEditor.streams[index].source_stream_url =\n        this.streamEditor.source_stream_url;\n      if (\n        this.playlistEditor.streams[index].movie_name !== undefined &&\n        this.playlistEditor.streams[index].movie_year !== undefined &&\n        this.playlistEditor.streams[index].tmdb_id !== undefined\n      ) {\n        this.playlistEditor.streams[index].movie_name =\n          this.streamEditor.movie_name;\n        this.playlistEditor.streams[index].movie_year =\n          this.streamEditor.movie_year;\n        this.playlistEditor.streams[index].tmdb_id = this.streamEditor.tmdb_id;\n      }\n      if (\n        this.playlistEditor.streams[index].serie_name !== undefined &&\n        this.playlistEditor.streams[index].serie_season !== undefined &&\n        this.playlistEditor.streams[index].serie_episode !== undefined\n      ) {\n        this.playlistEditor.streams[index].serie_name =\n          this.streamEditor.serie_name;\n        this.playlistEditor.streams[index].serie_season =\n          this.streamEditor.serie_season;\n        this.playlistEditor.streams[index].serie_episode =\n          this.streamEditor.serie_episode;\n      }\n      this.playlistEditor.streams[index].modified = true;\n      this.playlistEditor.changed = true;\n      this.streamEditor.modal = false;\n    },\n    sortGroupAlphaUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_name > a.group_name ? 1 : a.group_name > b.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupAlphaDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_name > b.group_name ? 1 : b.group_name > a.group_name ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeUp() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        b.group_type > a.group_type ? 1 : a.group_type > b.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortGroupTypeDown() {\n      this.playlistEditor.groups = this.playlistEditor.groups.sort((a, b) =>\n        a.group_type > b.group_type ? 1 : b.group_type > a.group_type ? -1 : 0\n      );\n      this.playlistEditor.groups.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaUp() {\n      //ERNST HIER\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return b.stream_tvg_name > a.stream_tvg_name\n              ? 1\n              : a.stream_tvg_name > b.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return b.movie_name > a.movie_name\n              ? 1\n              : a.movie_name > b.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return b.serie_name > a.serie_name\n              ? 1\n              : a.serie_name > b.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamAlphaDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) => {\n        switch (this.activeGroupType) {\n          case 1:\n            return a.stream_tvg_name > b.stream_tvg_name\n              ? 1\n              : b.stream_tvg_name > a.stream_tvg_name\n              ? -1\n              : 0;\n          case 2:\n            return a.movie_name > b.movie_name\n              ? 1\n              : b.movie_name > a.movie_name\n              ? -1\n              : 0;\n          case 3:\n            return a.serie_name > b.serie_name\n              ? 1\n              : b.serie_name > a.serie_name\n              ? -1\n              : 0;\n        }\n      });\n      this.playlistEditor.streams.map((stream) => (stream.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenUp() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        b.stream_is_hidden > a.stream_is_hidden\n          ? 1\n          : a.stream_is_hidden > b.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    sortStreamHiddenDown() {\n      this.playlistEditor.streams = this.playlistEditor.streams.sort((a, b) =>\n        a.stream_is_hidden > b.stream_is_hidden\n          ? 1\n          : b.stream_is_hidden > a.stream_is_hidden\n          ? -1\n          : 0\n      );\n      this.playlistEditor.streams.map((group) => (group.modified = true));\n      this.playlistEditor.changed = true;\n    },\n    addGroup() {\n      this.isLoading = true;\n      httpService\n        .post(\"editor/add-group\", { playlist_id: this.playlistEditor.id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            return new Promise((resolve) => {\n              this.playlistEditor.groups.push(res.data);\n              this.activeGroup =\n                this.playlistEditor.groups[\n                  this.playlistEditor.groups.length - 1\n                ].id;\n              this.activeGroups = [\n                this.playlistEditor.groups[\n                  this.playlistEditor.groups.length - 1\n                ].id,\n              ];\n              resolve();\n            }).then(() => {\n              this.editGroupModal(true);\n            });\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"editor.add-group-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    addStream() {\n      this.isLoading = true;\n      httpService\n        .post(\"editor/add-stream\", {\n          playlist_id: this.playlistEditor.id,\n          group_id: this.getGroupWithId(this.activeGroup).id,\n          stream_type: this.getGroupWithId(this.activeGroup).group_type,\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true && res.data) {\n            return new Promise((resolve) => {\n              this.playlistEditor.streams.unshift(res.data);\n              this.activeStream =\n                this.playlistEditor.streams[\n                  this.playlistEditor.streams.length - 1\n                ].id;\n              this.activeStreams = [\n                this.playlistEditor.streams[\n                  this.playlistEditor.streams.length - 1\n                ].id,\n              ];\n              resolve();\n            }).then(() => {\n              this.editStreamModal(true);\n            });\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"editor.add-stream-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    loadStreams() {\n      this.activeStream = -1;\n      this.activeStreams = [];\n      this.playlistEditor.streams = [];\n      let index = this.playlistEditor.groups.findIndex(\n        (group) => group.id === this.activeGroup\n      );\n      let group = this.playlistEditor.groups[index];\n      this.isLoading = true;\n      httpService\n        .get(\n          `editor/streams/${this.playlistEditor.id}/${group.id}/${group.group_type}`\n        )\n        .then((res) => {\n          document.body.scrollTop = 0;\n          document.documentElement.scrollTop = 0;\n          if (res.status === true) {\n            let streams = res.data.map((stream) => {\n              const str = Object.assign({}, stream);\n              str.source_stream_tvg_name = stream.stream_tvg_name;\n              str.source_stream_tvg_id = stream.stream_tvg_id;\n              str.source_stream_tvg_logo = stream.stream_tvg_logo;\n              str.source_stream_tvg_chno = stream.stream_tvg_chno;\n              str.source_stream_tvg_shift = stream.stream_tvg_shift;\n              str.source_stream_parent_code = stream.stream_parent_code;\n              str.source_stream_audio_track = stream.stream_audio_track;\n              str.source_stream_aspect_ratio = stream.stream_aspect_ratio;\n              str.source_stream_radio = stream.stream_radio;\n              str.source_stream_order = stream.stream_order;\n              str.source_stream_is_hidden = stream.stream_is_hidden;\n              str.modified = false;\n              str.stream_is_removed = 0;\n              if (group.group_type == 2) {\n                if (str.movie_name == \"\") {\n                  str.movie_name = str.stream_tvg_name;\n                  str.source_movie_name = str.stream_tvg_name;\n                } else {\n                  str.source_movie_name = stream.movie_name;\n                }\n                str.source_movie_year = stream.movie_year;\n                str.source_tmdb_id = stream.tmdb_id;\n              }\n              if (group.group_type == 3) {\n                if (str.serie_name == \"\") {\n                  str.serie_name = str.stream_tvg_name;\n                  str.source_serie_name = str.stream_tvg_name;\n                } else {\n                  str.source_serie_name = stream.serie_name;\n                }\n                str.source_serie_season = stream.serie_season;\n                str.source_serie_episode = stream.serie_episode;\n                str.source_tmdb_id = stream.tmdb_id;\n              }\n              return str;\n            });\n            streams.sort((a, b) =>\n              a.source_stream_order > b.source_stream_order\n                ? 1\n                : b.source_stream_order > a.source_stream_order\n                ? -1\n                : 0\n            );\n            this.playlistEditor.streams = streams;\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    moveToSelectedGroup() {\n      this.isLoading = true;\n      let streams = this.activeStreams.join();\n      let index = this.playlistEditor.groups.findIndex((group) => {\n        return group.id == this.activeGroup;\n      });\n      httpService\n        .post(`editor/move-to-group/${this.activeGroupType}`, {\n          playlist_id: this.playlistEditor.id,\n          streams: streams,\n          group_id: this.activeGroups[0],\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status && res.data) {\n            this.loadPlaylist(this.playlistEditor.id, index);\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    saveChangesModal(show, save = false) {\n      this.saveChanges.modal = show;\n      if (save) {\n        this.doSave();\n      } else {\n        this.loadStreams();\n      }\n    },\n    radioBrowserModal(show, save = false) {\n      if (show) {\n        this.radioBrowser.search = \"\";\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      }\n      if (save) {\n        this.isLoading = true;\n        let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        let order = this.playlistEditor.streams.length;\n        const streams = this.radioBrowser.active.map((index) => {\n          let radio = this.radioBrowser.results[index];\n          return {\n            source_stream_url: radio.url,\n            stream_tvg_name: radio.name,\n            stream_tvg_id: \"\",\n            stream_tvg_logo: radio.favicon,\n            stream_radio: true,\n            stream_order: order++,\n          };\n        });\n        httpService\n          .post(`editor/add-streams/${this.activeGroupType}`, {\n            playlist_id: this.playlistEditor.id,\n            group_id: this.getGroupWithId(this.activeGroup).id,\n            streams: streams,\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status) {\n              this.loadPlaylist(this.playlistEditor.id, groupIndex);\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n      this.radioBrowser.modal = show;\n    },\n    findRadiobrowser(search) {\n      if (search.length === 0) {\n        this.radioBrowser.results = [];\n        this.radioBrowser.active = [];\n      } else {\n        this.radioBrowser.isLoading = true;\n        httpService\n          .post(\"editor/find-radiobrowser\", {\n            search: search,\n          })\n          .then((res) => {\n            this.radioBrowser.active = [];\n            if (res.status) {\n              this.radioBrowser.results = res.data;\n            } else {\n              this.radioBrowser.results = [];\n            }\n            this.radioBrowser.isLoading = false;\n          })\n          .catch(() => {\n            this.radioBrowser.active = [];\n            this.radioBrowser.results = [];\n            this.radioBrowser.isLoading = false;\n          });\n      }\n    },\n    soundcloudModal(show, save = false) {\n      if (show) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      }\n      if (save) {\n        if (this.soundcloud.track) {\n          this.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.soundcloud.url,\n              stream_tvg_name: this.soundcloud.track.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.soundcloud.track.artwork_url.replace(\n                \"large.jpg\",\n                \"t500x500.jpg\"\n              ),\n              stream_radio: true,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.isLoading = false;\n            });\n        }\n      }\n      this.soundcloud.modal = show;\n    },\n    getSoundcloudTrack(url, client_id) {\n      if (url.length === 0 || !/soundcloud\\.com/.test(url)) {\n        this.soundcloud.url = \"\";\n        this.soundcloud.track = null;\n      } else {\n        this.soundcloud.isLoading = true;\n        httpService\n          .post(\"editor/soundcloud-track\", {\n            url: url,\n            client_id: client_id,\n          })\n          .then((res) => {\n            if (res.status && Object.keys(res.data).length) {\n              this.soundcloud.track = res.data;\n            } else {\n              this.soundcloud.track = null;\n            }\n            this.soundcloud.isLoading = false;\n          })\n          .catch(() => {\n            this.soundcloud.track = null;\n            this.soundcloud.isLoading = false;\n          });\n      }\n    },\n    youtubeModal(show, save = false) {\n      if (show) {\n        this.youtube.url = \"\";\n        this.youtube.video = null;\n        this.youtube.isLoading = false;\n      }\n      if (save) {\n        if (this.youtube.video) {\n          this.youtube.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.youtube.url,\n              stream_tvg_name: this.youtube.video.videoDetails.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: `http://i.ytimg.com/vi/${this.youtube.videoId}/maxresdefault.jpg`,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.youtube.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.youtube.isLoading = false;\n            });\n        }\n      }\n      this.youtube.modal = show;\n    },\n    getYoutubePage(videoId) {\n      this.youtube.isLoading = true;\n      httpService.youtube(videoId).then((res) => {\n        this.youtube.video = res;\n        this.youtube.isLoading = false;\n      });\n    },\n    vimeoModal(show, save = false) {\n      if (show) {\n        this.vimeo.url = \"\";\n        this.vimeo.video = null;\n        this.vimeo.isLoading = false;\n      }\n      if (save) {\n        if (this.vimeo.video) {\n          this.vimeo.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.vimeo.url,\n              stream_tvg_name: this.vimeo.video.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.vimeo.video.video.thumbs.base,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.vimeo.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.vimeo.isLoading = false;\n            });\n        }\n      }\n      this.vimeo.modal = show;\n    },\n    getVimeoConfig(videoId) {\n      this.vimeo.isLoading = true;\n      httpService\n        .post(\"editor/vimeo-video\", { video_id: videoId })\n        .then((res) => {\n          this.vimeo.video = res.data;\n          this.vimeo.isLoading = false;\n        });\n    },\n    dailymotionModal(show, save = false) {\n      if (show) {\n        this.dailymotion.url = \"\";\n        this.dailymotion.video = null;\n        this.dailymotion.isLoading = false;\n      }\n      if (save) {\n        if (this.dailymotion.video) {\n          this.dailymotion.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.dailymotion.url,\n              stream_tvg_name: this.dailymotion.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.dailymotion.video.thumbnail_1080_url,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.dailymotion.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.dailymotion.isLoading = false;\n            });\n        }\n      }\n      this.dailymotion.modal = show;\n    },\n    getDailymotionConfig(videoId) {\n      this.dailymotion.isLoading = true;\n      httpService\n        .post(\"editor/dailymotion-video\", { video_id: videoId })\n        .then((res) => {\n          this.dailymotion.video = res.data;\n          this.dailymotion.isLoading = false;\n        });\n    },\n    tedTalksModal(show, save = false) {\n      if (show) {\n        this.tedTalks.url = \"\";\n        this.tedTalks.video = null;\n        this.tedTalks.isLoading = false;\n      }\n      if (save) {\n        if (this.tedTalks.video) {\n          this.tedTalks.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.tedTalks.url,\n              stream_tvg_name: this.tedTalks.video.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.tedTalks.video.hero,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.tedTalks.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.tedTalks.isLoading = false;\n            });\n        }\n      }\n      this.tedTalks.modal = show;\n    },\n    getTedTalksConfig(url) {\n      this.tedTalks.isLoading = true;\n      httpService.post(\"editor/ted-talks-video\", { url: url }).then((res) => {\n        this.tedTalks.video = res.data.talks.length ? res.data.talks[0] : null;\n        this.tedTalks.isLoading = false;\n      });\n    },\n    xhamsterModal(show, save = false) {\n      if (show) {\n        this.xhamster.url = \"\";\n        this.xhamster.video = null;\n        this.xhamster.isLoading = false;\n      }\n      if (save) {\n        if (this.xhamster.video) {\n          this.xhamster.isLoading = true;\n          let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n            return group.id == this.activeGroup;\n          });\n          let order = this.playlistEditor.streams.length;\n          const streams = [\n            {\n              source_stream_url: this.xhamster.url,\n              stream_tvg_name: this.xhamster.video.videoEntity.title,\n              stream_tvg_id: \"\",\n              stream_tvg_logo: this.xhamster.video.videoEntity.thumbBig,\n              stream_order: order++,\n            },\n          ];\n          httpService\n            .post(`editor/add-streams/${this.activeGroupType}`, {\n              playlist_id: this.playlistEditor.id,\n              group_id: this.getGroupWithId(this.activeGroup).id,\n              streams: streams,\n            })\n            .then((res) => {\n              this.xhamster.isLoading = false;\n              if (res.status) {\n                this.loadPlaylist(this.playlistEditor.id, groupIndex);\n              }\n            })\n            .catch(() => {\n              this.xhamster.isLoading = false;\n            });\n        }\n      }\n      this.xhamster.modal = show;\n    },\n    getXhamsterConfig(url) {\n      this.xhamster.isLoading = true;\n      httpService.post(\"editor/xhamster-video\", { url: url }).then((res) => {\n        this.xhamster.video = res.data;\n        this.xhamster.isLoading = false;\n      });\n    },\n    groupDoubleClick() {\n      if (this.activeGroups.length === 1) {\n        this.editGroupModal(true);\n      }\n    },\n    streamDoubleClick() {\n      if (this.activeStreams.length === 1) {\n        this.editStreamModal(true);\n      }\n    },\n    loadLogoCountries() {\n      this.findLogo.isLoading = true;\n      httpService\n        .get(\"editor/logo-countries\")\n        .then((res) => {\n          this.findLogo.isLoading = false;\n          this.findLogo.countries = res.data\n            .map((country) => {\n              let cn = this.countries.find(\n                (cnt) => cnt.code.toLowerCase() == country.toLowerCase()\n              );\n              return {\n                text: cn ? cn.name : country,\n                value: country,\n              };\n            })\n            .sort((a, b) => {\n              return a.text.toUpperCase() < b.text.toUpperCase()\n                ? -1\n                : a.text.toUpperCase() > b.text.toUpperCase()\n                ? 1\n                : 0;\n            });\n          this.assignLogo.countries = [...this.findLogo.countries];\n        })\n        .catch(() => {\n          this.findLogo.isLoading = false;\n        });\n    },\n    loadTVGIDCountries() {\n      this.assignTVGID.isLoading = true;\n      httpService\n        .get(\"editor/tv-guide-countries\")\n        .then((res) => {\n          this.assignTVGID.isLoading = false;\n          this.assignTVGID.countries = res.data\n            .map((country) => {\n              let cn = this.countries.find(\n                (cnt) => cnt.code.toLowerCase() == country.toLowerCase()\n              );\n              return {\n                text: cn ? cn.name : country,\n                value: country,\n              };\n            })\n            .sort((a, b) => {\n              return a.text.toUpperCase() < b.text.toUpperCase()\n                ? -1\n                : a.text.toUpperCase() > b.text.toUpperCase()\n                ? 1\n                : 0;\n            });\n          this.assignTVGID.countries.unshift({ text: this.$t(\"general.all\"), value: \"all\" });\n          this.findTVGID.countries = [...this.assignTVGID.countries];\n        })\n        .catch(() => {\n          this.assignTVGID.isLoading = false;\n        });\n    },\n    loadLogosFind(country) {\n      this.findLogo.isLoading = true;\n      httpService\n        .get(`editor/logos/${country}`)\n        .then((res) => {\n          this.findLogo.logo = \"\";\n          this.findLogo.isLoading = false;\n          this.findLogo.logos = res.data.map((logo) => {\n            return {\n              text: logo.label,\n              value: logo.filename,\n            };\n          });\n        })\n        .catch(() => {\n          this.findLogo.isLoading = false;\n        });\n    },\n    findLogoModal(show, save = false) {\n      let selected = this.getStreamWithId(this.activeStreams[0]);\n      if (show) {\n        this.findLogo.logo = \"\";\n        this.findLogo.title = selected.stream_tvg_name;\n      }\n      this.findLogo.search = \"\";\n      if (save) {\n        if (selected) {\n          selected.stream_tvg_logo = `http://static.iptv-tools.com/${this.findLogo.country}/${this.findLogo.logo}`;\n          selected.modified = true;\n          this.playlistEditor.changed = true;\n        }\n      }\n      this.findLogo.modal = show;\n    },\n    loadLogosAssign(country) {\n      this.assignLogo.isLoading = true;\n      httpService\n        .get(`editor/logos/${country}`)\n        .then((res) => {\n          this.assignLogo.logo = \"\";\n          this.assignLogo.isLoading = false;\n          this.assignLogo.logos = res.data.map((logo) => logo.filename);\n        })\n        .catch(() => {\n          this.assignLogo.isLoading = false;\n        });\n    },\n    assignLogoModal(show, save = false) {\n      if (show) {\n        this.assignLogo.logo = \"\";\n      }\n      if (save) {\n        var changed = false;\n        var stringSimilarity = require(\"string-similarity\");\n        let streams = [];\n        if (this.assignLogo.assignAll == 1) {\n          streams = this.playlistEditor.streams;\n        } else {\n          streams = this.playlistEditor.streams.filter((stream) => !stream.stream_tvg_logo.length);\n        }\n        streams.map((stream) => {\n          let match1 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name).replace(/ hd$/i, \"\"),\n            this.assignLogo.logos\n          ).bestMatch;\n          let match2 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_id),\n            this.assignLogo.logos\n          ).bestMatch;\n          if (match1.rating >= 0.3) {\n            changed = true;\n            stream.stream_tvg_logo = `http://static.iptv-tools.com/${this.assignLogo.country}/${match1.target}`;\n            stream.modified = true;\n          } else if (match2.rating >= 0.5) {\n            changed = true;\n            stream.stream_tvg_logo = `http://static.iptv-tools.com/${this.assignLogo.country}/${match2.target}`;\n            stream.modified = true;\n          }\n        });\n        this.playlistEditor.changed = changed;\n      }\n      this.assignLogo.modal = show;\n    },\n    loadTVGIDAssign(country) {\n      this.assignTVGID.isLoading = true;\n      httpService\n        .get(`editor/tv-guide/${country}`)\n        .then((res) => {\n          this.assignTVGID.isLoading = false;\n          this.assignTVGID.channels = res.data;\n        })\n        .catch(() => {\n          this.assignTVGID.isLoading = false;\n        });\n    },\n    assignTVGIDModal(show, save = false) {\n      if (save) {\n        var changed = false;\n        var stringSimilarity = require(\"string-similarity\");\n        let streams = [];\n        if (this.assignTVGID.assignAll == 1) {\n          streams = this.playlistEditor.streams;\n        } else {\n          streams = this.playlistEditor.streams.filter((stream) => !stream.stream_tvg_id.length || stream.stream_tvg_id.length == 0);\n        }\n        let channelNames = this.assignTVGID.channels.map(channel => channel.tvg_name);\n        let channelIds = this.assignTVGID.channels.map(channel => channel.tvg_id);\n        streams.map((stream) => {\n          let match1 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name),\n            channelNames\n          ).bestMatch;\n          let match2 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_id),\n            channelIds\n          ).bestMatch;\n          let match3 = stringSimilarity.findBestMatch(\n            String(stream.stream_tvg_name).replace(/ hd$| fhd$| hevc$| h265$|/i, \"\"),\n            channelNames\n          ).bestMatch;\n          if (match2.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = match2.target;\n            stream.modified = true;\n          } else if (match1.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = this.assignTVGID.channels.find(channel => channel.tvg_name === match1.target).tvg_id;\n            stream.modified = true;\n          } else if (match3.rating >= 0.75) {\n            changed = true;\n            stream.stream_tvg_id = this.assignTVGID.channels.find(channel => channel.tvg_name === match1.target).tvg_id;\n            stream.modified = true;\n          } else {\n            changed = true;\n            stream.stream_tvg_id = \"\";\n            stream.modified = true;\n          }\n        });\n        this.playlistEditor.changed = changed;\n      }\n      this.assignTVGID.modal = show;\n    },\n    loadTVGIDFind(country) {\n      this.findTVGID.isLoading = true;\n      httpService\n        .get(`editor/tv-guide/${country}`)\n        .then((res) => {\n          this.findTVGID.channel = \"\";\n          this.findTVGID.isLoading = false;\n          this.findTVGID.channels = res.data.map((channel) => {\n            return {\n              text: channel.tvg_name,\n              value: channel.tvg_id,\n            };\n          });\n        })\n        .catch(() => {\n          this.findTVGID.isLoading = false;\n        });\n    },\n    findTVGIDModal(show, save = false) {\n      let selected = this.getStreamWithId(this.activeStreams[0]);\n      if (show) {\n        this.findTVGID.channel = \"\";\n        this.findTVGID.title = selected.stream_tvg_name;\n      }\n      this.findTVGID.search = \"\";\n      if (save) {\n        if (selected) {\n          selected.stream_tvg_id = this.findTVGID.channel;\n          selected.modified = true;\n          this.playlistEditor.changed = true;\n        }\n      }\n      this.findTVGID.modal = show;\n    },\n    importM3UModal(show, save = false) {\n      if (show) {\n        this.importM3U.file = null;\n        this.importM3U.m3u = null;\n        this.importM3U.groups = [];\n        this.importM3U.importGroups = [];\n      }\n      if (save) {\n        this.isLoading = true;\n        let groupIndex = this.playlistEditor.groups.findIndex((group) => {\n          return group.id == this.activeGroup;\n        });\n        httpService\n          .post(\"editor/import\", {\n            playlist_id: this.playlistEditor.id,\n            import: this.importM3U.groups.filter((group, index) => this.importM3U.importGroups.includes(index))\n          })\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status) {\n              this.loadPlaylist(this.playlistEditor.id, groupIndex);\n            }\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n      this.importM3U.modal = show;\n    },\n    uploadM3U(event) {\n      const input = event.target;\n      if (\"files\" in input && input.files.length > 0) {\n        this.importM3U.isLoading = true;\n        this.readFileContent(input.files[0])\n          .then((content) => {\n            this.importM3U.isLoading = false;\n            this.parseM3U(content);\n          })\n          .catch((error) => {\n            this.$notify(\n              \"error\",\n              this.$t(\"profile.failed\"),\n              error,\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n          });\n      }\n    },\n    parseM3U(content) {\n      let vm = this;\n      vm.importM3U.isLoading = true;\n      m3u\n        .parse(\n          content,\n          { tag: \"name\", type: [\"Movie\", \"Series\", \"VOD\", \"Live\"] },\n          true\n        )\n        .then((playlist) => {\n          this.importM3U.m3u = playlist;\n          this.importM3U.isLoading = false;\n          this.importM3U.groups = playlist.groups;\n          this.importM3U.importGroups = [];\n        })\n        .catch((error) => {\n          vm.isLoading = false;\n          vm.$notify(\n            \"error\",\n            vm.$t(\"profile.failed\"),\n            error,\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    readFileContent(file) {\n      const reader = new FileReader();\n      return new Promise((resolve, reject) => {\n        reader.onload = (event) => resolve(event.target.result);\n        reader.onerror = (error) => reject(error);\n        reader.readAsText(file);\n      });\n    },\n  },\n  beforeMount() {\n    document.body.classList.add(\"right-menu\");\n    EventBus.$on(\"search\", this.searchEditor);\n    EventBus.$on(\"print\", this.printEditor);\n    EventBus.$on(\"tab-change\", this.doTabChange);\n    EventBus.$on(\"save\", this.doSave);\n    EventBus.$on(\"cancel\", this.doCancel);\n    if (this.movieSeriePlaylist) {\n      this.loadPlaylist(this.movieSeriePlaylist);\n    }\n    this.loadLogoCountries();\n    this.loadTVGIDCountries();\n  },\n  beforeDestroy() {\n    document.body.classList.remove(\"right-menu\");\n    EventBus.$off(\"search\", this.searchEditor);\n    EventBus.$off(\"print\", this.printEditor);\n    EventBus.$off(\"tab-change\", this.doTabChange);\n    EventBus.$off(\"save\", this.doSave);\n    EventBus.$off(\"cancel\", this.doCancel);\n  },\n  watch: {\n    dragStream: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    dragGroup: function (val) {\n      if (!val) {\n        this.playlistEditor.changed = true;\n      }\n    },\n    activeGroup: function (val) {\n      if (this.playlistEditor.changed) {\n        this.saveChangesModal(true);\n      } else {\n        this.loadStreams();\n      }\n    },\n    \"playlistEditor.changed\": function (val) {\n      EventBus.$emit(\"editor-changes\", val);\n    },\n    \"radioBrowser.search\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.findRadiobrowser(val);\n      }, 500);\n    },\n    \"soundcloud.url\": function (val) {\n      let vm = this;\n      clearTimeout(this.radioBrowser.bounce);\n      this.radioBrowser.bounce = setTimeout(function () {\n        vm.getSoundcloudTrack(val, vm.soundcloudClientId);\n      }, 500);\n    },\n    \"youtube.url\": function (val) {\n      if (!val.length) {\n        return;\n      }\n      if (/youtu\\.?be/i.test(val)) {\n        var i;\n        var patterns = [\n          /youtu\\.be\\/([^#&?]{11})/, // youtu.be/<id>\n          /\\?v=([^#&?]{11})/, // ?v=<id>\n          /&v=([^#&?]{11})/, // &v=<id>\n          /embed\\/([^#&?]{11})/, // embed/<id>\n          /\\/v\\/([^#&?]{11})/, // /v/<id>\n        ];\n\n        for (i = 0; i < patterns.length; ++i) {\n          if (patterns[i].test(val)) {\n            this.youtube.videoId = patterns[i].exec(val)[1];\n            return;\n          }\n        }\n\n        var tokens = val.split(/[/&?=#.\\s]/g);\n        for (i = 0; i < tokens.length; ++i) {\n          if (/^[^#&?]{11}$/.test(tokens[i])) {\n            this.youtube.videoId = tokens[i];\n            return;\n          }\n        }\n\n        this.youtube.videoId = \"\";\n      } else {\n        try {\n          var urlp = new URL(val);\n          this.youtube.videoId = urlp.searchParams.get(\"v\");\n        } catch (error) {\n          this.youtube.videoId = \"\";\n          console.log(error);\n        }\n      }\n    },\n    \"youtube.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.youtube.bounce);\n      this.youtube.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getYoutubePage(val);\n        } else {\n          vm.youtube.video = null;\n        }\n      }, 500);\n    },\n    \"vimeo.url\": function (val) {\n      if (/vimeo\\.com/i.test(val)) {\n        let match = val.match(\n          /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_-]+)?/i\n        );\n        if (match.length >= 2) {\n          this.vimeo.videoId = match[1];\n        } else {\n          this.vimeo.videoId = \"\";\n        }\n      } else {\n        this.vimeo.videoId = \"\";\n      }\n    },\n    \"vimeo.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.vimeo.bounce);\n      this.vimeo.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getVimeoConfig(val);\n        } else {\n          vm.vimeo.video = null;\n        }\n      }, 500);\n    },\n    \"dailymotion.url\": function (val) {\n      if (/dailymotion\\.com/i.test(val)) {\n        let match = val.match(\n          /^.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/i\n        );\n        if (match.length >= 4 && match[4]) {\n          this.dailymotion.videoId = match[4];\n        } else if (match.length >= 2) {\n          this.dailymotion.videoId = match[2];\n        } else {\n          this.dailymotion.videoId = \"\";\n        }\n      } else {\n        this.dailymotion.videoId = \"\";\n      }\n    },\n    \"dailymotion.videoId\": function (val) {\n      let vm = this;\n      clearTimeout(this.dailymotion.bounce);\n      this.dailymotion.bounce = setTimeout(function () {\n        if (val.length) {\n          vm.getDailymotionConfig(val);\n        } else {\n          vm.dailymotion.video = null;\n        }\n      }, 500);\n    },\n    \"tedTalks.url\": function (val) {\n      if (/ted\\.com\\/talks/i.test(val)) {\n        let vm = this;\n        clearTimeout(this.tedTalks.bounce);\n        this.tedTalks.bounce = setTimeout(function () {\n          if (val.length) {\n            vm.getTedTalksConfig(val);\n          } else {\n            vm.tedTalks.video = null;\n          }\n        }, 500);\n      }\n    },\n    \"xhamster.url\": function (val) {\n      let vm = this;\n      if (/xhamster\\.com\\/videos/i.test(val)) {\n        clearTimeout(this.xhamsterBounce);\n        this.xhamsterBounce = setTimeout(function () {\n          if (val.length) {\n            vm.getXhamsterConfig(val);\n          } else {\n            vm.xhamster.video = null;\n          }\n        }, 500);\n      }\n    },\n    \"findLogo.country\": function (val) {\n      if (val.length) {\n        this.loadLogosFind(val);\n      } else {\n        this.findLogo.logo = \"\";\n      }\n    },\n    \"assignLogo.country\": function (val) {\n      if (val.length) {\n        this.loadLogosAssign(val);\n      } else {\n        this.assignLogo.logo = \"\";\n      }\n    },\n    \"findTVGID.country\": function (val) {\n      if (val.length) {\n        this.loadTVGIDFind(val);\n      } else {\n        this.findTVGID.channel = \"\";\n      }\n    },\n    \"assignTVGID.country\": function (val) {\n      if (val.length) {\n        this.loadTVGIDAssign(val);\n      } else {\n        this.assignTVGID.channels = [];\n      }\n    },\n    movieSeriePlaylist: function (val) {\n      this.loadPlaylist(val);\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.editor-stream,\n.editor-group {\n  margin-top: 0.1rem;\n  -webkit-user-select: none;\n  -webkit-touch-callout: none;\n  -khtml-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n\n  &:focus,\n  &:focus-within {\n    &.selected {\n      background-color: $theme-color-1 !important;\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n\n  &.selected {\n    background-color: $theme-color-1 !important;\n    &.success {\n      background-color: $success-color !important;\n    }\n    &.danger {\n      background-color: $error-color !important;\n    }\n    &.info {\n      background-color: $info-color !important;\n    }\n\n    a,\n    i,\n    span {\n      color: $button-text-color !important;\n    }\n  }\n\n  &.active {\n    border-color: rgba($theme-color-1, 0.6) !important;\n\n    a,\n    span {\n      font-weight: bold;\n    }\n    a,\n    i,\n    span {\n      color: $theme-color-1;\n    }\n  }\n\n  &.hidden {\n    opacity: 0.5;\n  }\n}\n\n.editor-stream {\n  .stream-icon {\n    float: right;\n    max-height: 16px;\n  }\n}\n\n.editor-stream-icon {\n  max-width: 100%;\n  max-height: 250px;\n  height: auto !important;\n}\n\n.editor-movie-poster {\n  max-height: 250px;\n  width: auto !important;\n}\n\n.flip-list-move {\n  transition: transform 0.5s;\n}\n.no-move {\n  transition: transform 0s;\n}\n.ghost {\n  opacity: 0.5;\n}\n\n.handle {\n  cursor: move;\n  vertical-align: middle;\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n}\n\n.radiobrowser-stations {\n  overflow: hidden;\n\n  .ps {\n    max-height: 300px;\n    padding-top: 0.25rem;\n    padding-bottom: 0.5rem;\n  }\n\n  .radiobrowser-station {\n    margin-top: 0.1rem;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -khtml-user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n\n    &:focus,\n    &:focus-within {\n      &.selected {\n        background-color: $theme-color-1 !important;\n\n        a,\n        i,\n        span {\n          color: $button-text-color !important;\n        }\n      }\n\n      &.active {\n        border-color: rgba($theme-color-1, 0.6) !important;\n\n        a,\n        span {\n          font-weight: bold;\n        }\n        a,\n        i,\n        span {\n          color: $theme-color-1;\n        }\n      }\n    }\n\n    &.selected {\n      background-color: $theme-color-1 !important;\n      &.success {\n        background-color: $success-color !important;\n      }\n      &.danger {\n        background-color: $error-color !important;\n      }\n      &.info {\n        background-color: $info-color !important;\n      }\n\n      a,\n      i,\n      span {\n        color: $button-text-color !important;\n      }\n    }\n\n    &.active {\n      border-color: rgba($theme-color-1, 0.6) !important;\n\n      a,\n      span {\n        font-weight: bold;\n      }\n      a,\n      i,\n      span {\n        color: $theme-color-1;\n      }\n    }\n  }\n}\n\n.soundcloud-info {\n  width: max-content;\n\n  .cover {\n    max-height: 300px;\n  }\n}\n\n.find-logo {\n  min-height: 250px;\n\n  .stream-logo {\n    max-width: 250px;\n    height: auto;\n  }\n}\n\n.assign-logo {\n  min-height: 300px;\n}\n\n.find-channel-id {\n  min-height: 410px;\n}\n</style>\n"]}]}