{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/subscription.vue?vue&type=style&index=0&id=4f0e888b&scoped=true&lang=scss&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/subscription.vue","mtime":1624448620557},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wcmljZS1jYXJkIHsKICBtaW4taGVpZ2h0OiA1MDBweDsKfQpAbWVkaWEgcHJpbnQgewogIC5jYXJkIHsKICAgIEBpbmNsdWRlIGRlcHRoKDApOwogIH0KCiAgLnByaXZhdGUsCiAgLmJ1c2luZXNzIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQoKICAucHJpY2UtY2FyZCB7CiAgICBtaW4taGVpZ2h0OiAxMDAwcHg7CiAgfQoKICAuYnRuIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Ci5wYXlwYWwtY29udGFpbmVyIHsKICBtYXgtaGVpZ2h0OiA0MDBweDsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["subscription.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2XA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"subscription.vue","sourceRoot":"src/views/app/user","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\" id=\"subscription\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-modal\n      v-show=\"modal\"\n      @close=\"closeModal\"\n      :title=\"$t('subscriptions.purchase')\"\n      class=\"select-none\"\n    >\n      <p class=\"mt-0 ml-2\">{{ $t(\"subscriptions.select-playlist\") }}</p>\n      <erd-radiobutton\n        v-for=\"(type, index) in playlistTypes\"\n        :key=\"`type-${index}`\"\n        :value=\"type.value\"\n        v-model=\"newSubscription.playlist_type\"\n        class=\"ml-3\"\n        >{{ type.text }}</erd-radiobutton\n      >\n      <p class=\"mt-3 ml-2\">{{ $t(\"subscriptions.select-days\") }}</p>\n      <erd-radiobutton\n        v-for=\"(day, index) in days\"\n        :key=\"`day-${index}`\"\n        :value=\"day.value\"\n        v-model=\"newSubscription.months\"\n        class=\"ml-3\"\n        >{{ day.text }}</erd-radiobutton\n      >\n      <p class=\"mt-3 ml-2\">\n        {{ $t(\"subscriptions.total-amount\") }} <strong>{{ totalPrice }}</strong>\n      </p>\n      <template v-slot:footer>\n        <erd-paypal-button\n          ref=\"paypal\"\n          id=\"paypal\"\n          :items=\"newSubscription.items\"\n          :value=\"newSubscription.amount\"\n          :description=\"newSubscription.description\"\n          @approve=\"paypalApprove\"\n          @cancel=\"paypalCancel\"\n          @error=\"paypalError\"\n        >\n        </erd-paypal-button>\n      </template>\n    </erd-modal>\n    <erd-modal\n      v-show=\"modal2\"\n      @close=\"closeModal\"\n      :title=\"$t('subscriptions.payment-login-title')\"\n      class=\"select-none\"\n    >\n      <p class=\"mt-0 ml-2\">{{ $t(\"subscriptions.payment-login-text\") }}</p>\n      <template v-slot:footer>\n        <erd-button variant=\"success\" @click=\"logout\" class=\"mr-1\">{{\n          $t(\"general.yes\")\n        }}</erd-button>\n        <erd-button variant=\"danger\" @click=\"closeModal\">{{\n          $t(\"general.no\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <erd-col\n      lg=\"4\"\n      md=\"6\"\n      v-for=\"(item, index) in personal\"\n      :key=\"`personal-${item.id}-${index}`\"\n    >\n      <erd-card>\n        <erd-card-body class=\"text-center price-card\">\n          <i class=\"las la-6x color-theme-1 mt-3\" :class=\"item.icon\"></i>\n          <h3 class=\"item-title color-theme-1 my-3\">{{ item.title }}</h3>\n          <p class=\"text-large mb-2 text-default\">&euro;{{ item.price }}</p>\n          <p class=\"mt-0 text-muted text-small\">\n            {{ $t(\"subscriptions.user-month\") }}\n          </p>\n          <ul class=\"list-unstyled mt-4\">\n            <li\n              v-for=\"(listing, index) in item.list\"\n              :key=\"`listing-${item.id}-${index}`\"\n            >\n              <p class=\"my-1\">{{ listing }}</p>\n            </li>\n          </ul>\n          <erd-button\n            class=\"mt-5 w-50 text-uppercase\"\n            @click=\"showModal(item)\"\n            icon=\"la-shopping-cart\"\n            >{{\n              subscriptionId == item.id\n                ? $t(\"subscriptions.active\")\n                : $t(\"subscriptions.purchase\")\n            }}</erd-button\n          >\n        </erd-card-body>\n      </erd-card>\n    </erd-col>\n    <erd-col xl=\"12\">\n      <p class=\"text-center\">\n        {{ $t(\"subscriptions.custom-plan\") }}\n        <a class=\"color-theme-1\" :href=\"contactLink\" target=\"_blank\">{{\n          $t(\"subscriptions.contact-us\")\n        }}</a>\n      </p>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n\nimport { mapActions, mapGetters } from \"vuex\";\nimport { httpService } from \"../../../services/http\";\nimport { EventBus } from \"../../../services/ebus\";\nimport { PaymentWebsite } from \"../../../constants/config\";\n\nexport default {\n  data() {\n    return {\n      mailto: \"contact@erdesigns.eu\",\n      modal: false,\n      modal2: false,\n      isLoading: false,\n      subscription: null,\n      newSubscription: {\n        id: 0,\n        description: \"\",\n        months: \"1\",\n        items: [],\n        amount: \"0.00\",\n        currency: \"EUR\",\n        price: 0,\n        playlist_type: 1,\n      },\n      days: [\n        { value: \"1\", text: this.$t(\"subscriptions.1-month\") },\n        { value: \"2\", text: this.$t(\"subscriptions.2-month\") },\n        { value: \"3\", text: this.$t(\"subscriptions.3-month\") },\n        { value: \"6\", text: this.$t(\"subscriptions.6-month\") },\n        { value: \"12\", text: this.$t(\"subscriptions.1-year\") },\n      ],\n      playlistTypes: [\n        { value: \"1\", text: this.$t(\"subscriptions.xtream\") },\n        { value: \"2\", text: this.$t(\"subscriptions.m3u\") },\n        { value: \"3\", text: this.$t(\"subscriptions.portal\") },\n      ],\n      personal: [\n        {\n          title: this.$t(\"subscriptions.enthusiast\"),\n          icon: \"la-compass\",\n          price: \"2,50\",\n          list: [\n            this.$t(\"subscriptions.2-playlists\"),\n            this.$t(\"subscriptions.unlimited-channels\"),\n            this.$t(\"subscriptions.live-only\"),\n            this.$t(\"subscriptions.daily-sync\"),\n            this.$t(\"subscriptions.epg-support\"),\n            \"-\",\n            \"-\",\n          ],\n          id: 0,\n        },\n        {\n          title: this.$t(\"subscriptions.professional\"),\n          icon: \"la-user-tie\",\n          price: \"5,00\",\n          list: [\n            this.$t(\"subscriptions.2-playlists\"),\n            this.$t(\"subscriptions.unlimited-channels\"),\n            this.$t(\"subscriptions.live-movies-series\"),\n            this.$t(\"subscriptions.daily-sync\"),\n            this.$t(\"subscriptions.epg-support\"),\n            this.$t(\"subscriptions.free-tools\"),\n            \"-\",\n          ],\n          id: 1,\n        },\n        {\n          title: this.$t(\"subscriptions.pro-plus\"),\n          icon: \"la-users\",\n          price: \"10,00\",\n          list: [\n            this.$t(\"subscriptions.5-playlists\"),\n            this.$t(\"subscriptions.unlimited-channels\"),\n            this.$t(\"subscriptions.live-movies-series\"),\n            this.$t(\"subscriptions.daily-sync\"),\n            this.$t(\"subscriptions.epg-support\"),\n            this.$t(\"subscriptions.free-tools\"),\n            this.$t(\"subscriptions.5-7-contact\"),\n          ],\n          id: 2,\n        },\n      ],\n    };\n  },\n  methods: {\n    ...mapActions([\"logout\"]),\n    loadSubscription() {\n      httpService\n        .get(\"users/subscriptions\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.subscription =\n              Array.isArray(res.data) && res.data.length > 0\n                ? res.data[0]\n                : this.currentUser.subscription;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.subscription = this.currentUser.subscription;\n        });\n    },\n    pagePrint() {\n      document.getElementById(\"subscription\").print();\n    },\n    showModal(item) {\n      this.newSubscription.description = item.title;\n      this.newSubscription.id = item.id;\n      this.newSubscription.items = [\n        {\n          name: \"IPTV-Tools Subscription\",\n          description: item.title,\n          quantity: \"1\",\n          price: item.price.replace(\",\", \".\"),\n          currency: \"EUR\",\n        },\n      ];\n      this.newSubscription.price = item.price;\n      this.newSubscription.amount = new Intl.NumberFormat(\"en-US\").format(\n        item.price.replace(\",\", \".\") * this.newSubscription.months\n      );\n      this.modal = true;\n    },\n    closeModal() {\n      this.modal = false;\n      this.modal2 = false;\n    },\n    paypalApprove(details) {\n      let end_date = new Date();\n      switch (parseInt(this.newSubscription.months)) {\n        case 1:\n          end_date.setDate(end_date.getDate() + 30);\n          break;\n        case 2:\n          end_date.setDate(end_date.getDate() + 60);\n          break;\n        case 3:\n          end_date.setDate(end_date.getDate() + 90);\n          break;\n        case 6:\n          end_date.setDate(end_date.getDate() + 180);\n          break;\n        case 12:\n          end_date.setDate(end_date.getDate() + 365);\n          break; \n      }\n      let maxPlaylist = 1;\n      switch (this.newSubscription.id) {\n        case 0: maxPlaylist = 2; break;\n        case 1: maxPlaylist = 2; break;\n        case 2: maxPlaylist = 5; break;\n        case 3: maxPlaylist = 5; break;\n        case 4: maxPlaylist = 10; break;\n        case 5: maxPlaylist = 25; break;\n      }\n      let subscription = {\n        user_id: this.currentUser.user.id,\n        subscription_type: this.newSubscription.id,\n        note: details,\n        end_date: end_date,\n        max_playlist: maxPlaylist,\n      };\n      let payment = {\n        user_id: this.currentUser.user.id,\n        payment_method: \"Paypal\",\n        amount: this.newSubscription.amount,\n        description: details,\n        website: PaymentWebsite,\n      };\n      let invoice = {\n        user_id: this.currentUser.user.id,\n        items: [\n          {\n            description: this.newSubscription.items[0].description,\n            amount: this.newSubscription.months,\n            price: this.newSubscription.price,\n            id: this.newSubscription.id,\n          },\n        ],\n      };\n      httpService\n        .post(\"users/payment\", {\n          user_id: this.currentUser.user.id,\n          subscription: subscription,\n          payment: payment,\n          invoice: invoice,\n        })\n        .then((res) => {\n          if (res.status === true) {\n            this.modal = false;\n            this.modal2 = true;\n            this.$notify(\n              \"success\",\n              this.$t(\"profile.success\"),\n              this.$t(\"subscriptions.payment-succes\"),\n              \"la-check-double\",\n              { duration: 5000, permanent: false }\n            );\n          }\n        })\n        .catch(() => {\n          this.$notify(\n            \"error\",\n            this.$t(\"general.error\"),\n            this.$t(\"subscriptions.payment-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    paypalCancel(data) {\n      this.$notify(\n        \"error\",\n        this.$t(\"general.canceled\"),\n        this.$t(\"subscriptions.payment-canceled\"),\n        \"la-user-shield\",\n        { duration: 5000, permanent: false }\n      );\n    },\n    paypalError(error) {\n      this.$notify(\n        \"error\",\n        this.$t(\"general.error\"),\n        this.$t(\"subscriptions.payment-error\"),\n        \"la-user-shield\",\n        { duration: 5000, permanent: false }\n      );\n    },\n  },\n  computed: {\n    ...mapGetters([\"currentUser\"]),\n    subscriptionId() {\n      return this.subscription ? this.subscription.subscription_type : -1;\n    },\n    totalPrice() {\n      return new Intl.NumberFormat(\"nl-NL\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(this.newSubscription.amount);\n    },\n    contactLink() {\n      return `mailto:${this.mailto}?subject=${encodeURIComponent(\n        this.$t(\"subscriptions.contact-subject\")\n      )}&body=${encodeURIComponent(this.$t(\"subscriptions.contact-body\"))}`;\n    },\n  },\n  mounted() {\n    this.isLoading = true;\n    this.loadSubscription();\n  },\n  beforeMount() {\n    EventBus.$on(\"print\", this.pagePrint);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.pagePrint);\n  },\n  watch: {\n    \"newSubscription.months\": function (val) {\n      this.newSubscription.items[0].quantity = val;\n      this.newSubscription.amount = new Intl.NumberFormat(\"en-US\").format(\n        parseInt(val) * parseFloat(this.newSubscription.price.replace(\",\", \".\"))\n      );\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.price-card {\n  min-height: 500px;\n}\n@media print {\n  .card {\n    @include depth(0);\n  }\n\n  .private,\n  .business {\n    display: none;\n  }\n\n  .price-card {\n    min-height: 1000px;\n  }\n\n  .btn {\n    display: none;\n  }\n}\n.paypal-container {\n  max-height: 400px;\n  width: 100%;\n}\n</style>\n"]}]}