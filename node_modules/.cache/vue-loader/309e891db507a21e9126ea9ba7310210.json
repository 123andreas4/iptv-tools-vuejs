{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/administration/profiles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/administration/profiles.vue","mtime":1620559955803},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["profiles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"profiles.vue","sourceRoot":"src/views/app/administration","sourcesContent":["<template>\n  <erd-row class=\"m-0 p-0\">\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col xl=\"12\" v-if=\"!editor\" id=\"profiles\">\n      <b-table :items=\"paged\" :fields=\"fields\" striped small>\n        <template v-slot:cell(user_id)=\"row\">\n          <router-link\n            :to=\"{\n              name: 'users',\n              params: { editor: true, id: row.item.user_id },\n            }\"\n            >{{ row.item.user_id }}</router-link\n          >\n        </template>\n        <template v-slot:cell(email)=\"row\">\n          <a :href=\"`mailto:${row.item.email}`\">{{ row.item.email }}</a>\n        </template>\n        <template v-slot:cell(phone)=\"row\">\n          <a :href=\"`tel:${row.item.phone}`\">{{ row.item.phone }}</a>\n        </template>\n        <template v-slot:cell(gender)=\"row\">\n          {{ $t(`profile.${row.item.gender.toLowerCase()}`) }}\n        </template>\n        <template v-slot:cell(actions)=\"row\">\n          <erd-button\n            variant=\"info\"\n            class=\"btn-table\"\n            @click=\"user(row.item.user_id)\"\n            ><i class=\"las la-user\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"primary\"\n            class=\"btn-table\"\n            @click=\"editProfile(row.item)\"\n            ><i class=\"las la-user-edit\"></i\n          ></erd-button>\n          <erd-button\n            variant=\"danger\"\n            class=\"btn-table\"\n            @click=\"deleteProfile(row.item.id)\"\n            ><i class=\"las la-trash\"></i\n          ></erd-button>\n        </template>\n      </b-table>\n      <b-pagination\n        class=\"w-100 my-3\"\n        size=\"sm\"\n        align=\"center\"\n        :total-rows=\"total\"\n        :per-page=\"perPage\"\n        v-model=\"currentPage\"\n      >\n        <template v-slot:next-text>\n          <i class=\"las la-angle-right\" />\n        </template>\n        <template v-slot:prev-text>\n          <i class=\"las la-angle-left\" />\n        </template>\n        <template v-slot:first-text>\n          <i class=\"las la-angle-double-left\" />\n        </template>\n        <template v-slot:last-text>\n          <i class=\"las la-angle-double-right\" />\n        </template>\n      </b-pagination>\n    </erd-col>\n    <erd-col xl=\"12\" v-if=\"editor\">\n      <label for=\"name_first\">{{ $t(\"profiles.name_first\") }}</label>\n      <erd-input\n        id=\"name_first\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.name_first')\"\n        v-model=\"editorProfile.name_first\"\n      ></erd-input>\n      <label for=\"name_last\">{{ $t(\"profiles.name_last\") }}</label>\n      <erd-input\n        id=\"name_last\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.name_last')\"\n        v-model=\"editorProfile.name_last\"\n      ></erd-input>\n      <label for=\"gender\">{{ $t(\"profiles.gender\") }}</label>\n      <erd-select\n        id=\"gender\"\n        :items=\"genders\"\n        class=\"w-100 mt-1 mb-2\"\n        v-model=\"editorProfile.gender\"\n      ></erd-select>\n      <label for=\"address\">{{ $t(\"profiles.address\") }}</label>\n      <erd-input\n        id=\"address\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.address')\"\n        v-model=\"editorProfile.address\"\n      ></erd-input>\n      <label for=\"city\">{{ $t(\"profiles.city\") }}</label>\n      <erd-input\n        id=\"city\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.city')\"\n        v-model=\"editorProfile.city\"\n      ></erd-input>\n      <label for=\"zipcode\">{{ $t(\"profiles.zipcode\") }}</label>\n      <erd-input\n        id=\"zipcode\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.zipcode')\"\n        v-model=\"editorProfile.zipcode\"\n      ></erd-input>\n      <label for=\"country\">{{ $t(\"profiles.country\") }}</label>\n      <erd-select\n        id=\"country\"\n        :items=\"countries\"\n        class=\"w-100 mt-1 mb-2\"\n        v-model=\"editorProfile.country\"\n      ></erd-select>\n      <label for=\"phone\">{{ $t(\"profiles.phone\") }}</label>\n      <erd-input\n        id=\"phone\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.phone')\"\n        v-model=\"editorProfile.phone\"\n      ></erd-input>\n      <label for=\"email\">{{ $t(\"profiles.email\") }}</label>\n      <erd-input\n        id=\"email\"\n        class=\"mt-1 mb-2 w-100\"\n        :placeholder=\"$t('profiles.email')\"\n        v-model=\"editorProfile.email\"\n      ></erd-input>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\n/* eslint-disable vue/no-side-effects-in-computed-properties */\nimport { EventBus } from \"../../../services/ebus\";\nimport { httpService } from \"../../../services/http\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      search: null,\n      isLoading: false,\n      from: 0,\n      to: 0,\n      total: 0,\n      currentPage: 1,\n      editor: false,\n      editorProfile: null,\n      profiles: [],\n      fields: [\n        { key: \"user_id\", label: this.$t(\"profiles.user_id\"), sortable: true },\n        {\n          key: \"name_first\",\n          label: this.$t(\"profiles.name_first\"),\n          sortable: true,\n        },\n        {\n          key: \"name_last\",\n          label: this.$t(\"profiles.name_last\"),\n          sortable: true,\n        },\n        { key: \"address\", label: this.$t(\"profiles.address\"), sortable: true },\n        { key: \"country\", label: this.$t(\"profiles.country\"), sortable: true },\n        { key: \"city\", label: this.$t(\"profiles.city\"), sortable: true },\n        { key: \"zipcode\", label: this.$t(\"profiles.zipcode\"), sortable: true },\n        { key: \"phone\", label: this.$t(\"profiles.phone\"), sortable: true },\n        { key: \"email\", label: this.$t(\"profiles.email\"), sortable: true },\n        { key: \"gender\", label: this.$t(\"profiles.gender\"), sortable: true },\n        {\n          key: \"actions\",\n          label: this.$t(\"users.actions\"),\n          sortable: false,\n          thClass: \"text-right\",\n          tdClass: \"text-right\",\n        },\n      ],\n      countries: [\n        { text: \"Afghanistan\", value: \"AF\" },\n        { text: \"Åland Islands\", value: \"AX\" },\n        { text: \"Albania\", value: \"AL\" },\n        { text: \"Algeria\", value: \"DZ\" },\n        { text: \"American Samoa\", value: \"AS\" },\n        { text: \"AndorrA\", value: \"AD\" },\n        { text: \"Angola\", value: \"AO\" },\n        { text: \"Anguilla\", value: \"AI\" },\n        { text: \"Antarctica\", value: \"AQ\" },\n        { text: \"Antigua and Barbuda\", value: \"AG\" },\n        { text: \"Argentina\", value: \"AR\" },\n        { text: \"Armenia\", value: \"AM\" },\n        { text: \"Aruba\", value: \"AW\" },\n        { text: \"Australia\", value: \"AU\" },\n        { text: \"Austria\", value: \"AT\" },\n        { text: \"Azerbaijan\", value: \"AZ\" },\n        { text: \"Bahamas\", value: \"BS\" },\n        { text: \"Bahrain\", value: \"BH\" },\n        { text: \"Bangladesh\", value: \"BD\" },\n        { text: \"Barbados\", value: \"BB\" },\n        { text: \"Belarus\", value: \"BY\" },\n        { text: \"Belgium\", value: \"BE\" },\n        { text: \"Belize\", value: \"BZ\" },\n        { text: \"Benin\", value: \"BJ\" },\n        { text: \"Bermuda\", value: \"BM\" },\n        { text: \"Bhutan\", value: \"BT\" },\n        { text: \"Bolivia\", value: \"BO\" },\n        { text: \"Bosnia and Herzegovina\", value: \"BA\" },\n        { text: \"Botswana\", value: \"BW\" },\n        { text: \"Bouvet Island\", value: \"BV\" },\n        { text: \"Brazil\", value: \"BR\" },\n        { text: \"British Indian Ocean Territory\", value: \"IO\" },\n        { text: \"Brunei Darussalam\", value: \"BN\" },\n        { text: \"Bulgaria\", value: \"BG\" },\n        { text: \"Burkina Faso\", value: \"BF\" },\n        { text: \"Burundi\", value: \"BI\" },\n        { text: \"Cambodia\", value: \"KH\" },\n        { text: \"Cameroon\", value: \"CM\" },\n        { text: \"Canada\", value: \"CA\" },\n        { text: \"Cape Verde\", value: \"CV\" },\n        { text: \"Cayman Islands\", value: \"KY\" },\n        { text: \"Central African Republic\", value: \"CF\" },\n        { text: \"Chad\", value: \"TD\" },\n        { text: \"Chile\", value: \"CL\" },\n        { text: \"China\", value: \"CN\" },\n        { text: \"Christmas Island\", value: \"CX\" },\n        { text: \"Cocos (Keeling) Islands\", value: \"CC\" },\n        { text: \"Colombia\", value: \"CO\" },\n        { text: \"Comoros\", value: \"KM\" },\n        { text: \"Congo\", value: \"CG\" },\n        { text: \"Congo, The Democratic Republic of the\", value: \"CD\" },\n        { text: \"Cook Islands\", value: \"CK\" },\n        { text: \"Costa Rica\", value: \"CR\" },\n        { text: \"Cote D'Ivoire\", value: \"CI\" },\n        { text: \"Croatia\", value: \"HR\" },\n        { text: \"Cuba\", value: \"CU\" },\n        { text: \"Cyprus\", value: \"CY\" },\n        { text: \"Czech Republic\", value: \"CZ\" },\n        { text: \"Denmark\", value: \"DK\" },\n        { text: \"Djibouti\", value: \"DJ\" },\n        { text: \"Dominica\", value: \"DM\" },\n        { text: \"Dominican Republic\", value: \"DO\" },\n        { text: \"Ecuador\", value: \"EC\" },\n        { text: \"Egypt\", value: \"EG\" },\n        { text: \"El Salvador\", value: \"SV\" },\n        { text: \"Equatorial Guinea\", value: \"GQ\" },\n        { text: \"Eritrea\", value: \"ER\" },\n        { text: \"Estonia\", value: \"EE\" },\n        { text: \"Ethiopia\", value: \"ET\" },\n        { text: \"Falkland Islands (Malvinas)\", value: \"FK\" },\n        { text: \"Faroe Islands\", value: \"FO\" },\n        { text: \"Fiji\", value: \"FJ\" },\n        { text: \"Finland\", value: \"FI\" },\n        { text: \"France\", value: \"FR\" },\n        { text: \"French Guiana\", value: \"GF\" },\n        { text: \"French Polynesia\", value: \"PF\" },\n        { text: \"French Southern Territories\", value: \"TF\" },\n        { text: \"Gabon\", value: \"GA\" },\n        { text: \"Gambia\", value: \"GM\" },\n        { text: \"Georgia\", value: \"GE\" },\n        { text: \"Germany\", value: \"DE\" },\n        { text: \"Ghana\", value: \"GH\" },\n        { text: \"Gibraltar\", value: \"GI\" },\n        { text: \"Greece\", value: \"GR\" },\n        { text: \"Greenland\", value: \"GL\" },\n        { text: \"Grenada\", value: \"GD\" },\n        { text: \"Guadeloupe\", value: \"GP\" },\n        { text: \"Guam\", value: \"GU\" },\n        { text: \"Guatemala\", value: \"GT\" },\n        { text: \"Guernsey\", value: \"GG\" },\n        { text: \"Guinea\", value: \"GN\" },\n        { text: \"Guinea-Bissau\", value: \"GW\" },\n        { text: \"Guyana\", value: \"GY\" },\n        { text: \"Haiti\", value: \"HT\" },\n        { text: \"Heard Island and Mcdonald Islands\", value: \"HM\" },\n        { text: \"Holy See (Vatican City State)\", value: \"VA\" },\n        { text: \"Honduras\", value: \"HN\" },\n        { text: \"Hong Kong\", value: \"HK\" },\n        { text: \"Hungary\", value: \"HU\" },\n        { text: \"Iceland\", value: \"IS\" },\n        { text: \"India\", value: \"IN\" },\n        { text: \"Indonesia\", value: \"ID\" },\n        { text: \"Iran, Islamic Republic Of\", value: \"IR\" },\n        { text: \"Iraq\", value: \"IQ\" },\n        { text: \"Ireland\", value: \"IE\" },\n        { text: \"Isle of Man\", value: \"IM\" },\n        { text: \"Israel\", value: \"IL\" },\n        { text: \"Italy\", value: \"IT\" },\n        { text: \"Jamaica\", value: \"JM\" },\n        { text: \"Japan\", value: \"JP\" },\n        { text: \"Jersey\", value: \"JE\" },\n        { text: \"Jordan\", value: \"JO\" },\n        { text: \"Kazakhstan\", value: \"KZ\" },\n        { text: \"Kenya\", value: \"KE\" },\n        { text: \"Kiribati\", value: \"KI\" },\n        { text: \"Korea, Democratic People'S Republic of\", value: \"KP\" },\n        { text: \"Korea, Republic of\", value: \"KR\" },\n        { text: \"Kuwait\", value: \"KW\" },\n        { text: \"Kyrgyzstan\", value: \"KG\" },\n        { text: \"Lao People'S Democratic Republic\", value: \"LA\" },\n        { text: \"Latvia\", value: \"LV\" },\n        { text: \"Lebanon\", value: \"LB\" },\n        { text: \"Lesotho\", value: \"LS\" },\n        { text: \"Liberia\", value: \"LR\" },\n        { text: \"Libyan Arab Jamahiriya\", value: \"LY\" },\n        { text: \"Liechtenstein\", value: \"LI\" },\n        { text: \"Lithuania\", value: \"LT\" },\n        { text: \"Luxembourg\", value: \"LU\" },\n        { text: \"Macao\", value: \"MO\" },\n        { text: \"Macedonia, The Former Yugoslav Republic of\", value: \"MK\" },\n        { text: \"Madagascar\", value: \"MG\" },\n        { text: \"Malawi\", value: \"MW\" },\n        { text: \"Malaysia\", value: \"MY\" },\n        { text: \"Maldives\", value: \"MV\" },\n        { text: \"Mali\", value: \"ML\" },\n        { text: \"Malta\", value: \"MT\" },\n        { text: \"Marshall Islands\", value: \"MH\" },\n        { text: \"Martinique\", value: \"MQ\" },\n        { text: \"Mauritania\", value: \"MR\" },\n        { text: \"Mauritius\", value: \"MU\" },\n        { text: \"Mayotte\", value: \"YT\" },\n        { text: \"Mexico\", value: \"MX\" },\n        { text: \"Micronesia, Federated States of\", value: \"FM\" },\n        { text: \"Moldova, Republic of\", value: \"MD\" },\n        { text: \"Monaco\", value: \"MC\" },\n        { text: \"Mongolia\", value: \"MN\" },\n        { text: \"Montserrat\", value: \"MS\" },\n        { text: \"Morocco\", value: \"MA\" },\n        { text: \"Mozambique\", value: \"MZ\" },\n        { text: \"Myanmar\", value: \"MM\" },\n        { text: \"Namibia\", value: \"NA\" },\n        { text: \"Nauru\", value: \"NR\" },\n        { text: \"Nepal\", value: \"NP\" },\n        { text: \"Netherlands\", value: \"NL\" },\n        { text: \"Netherlands Antilles\", value: \"AN\" },\n        { text: \"New Caledonia\", value: \"NC\" },\n        { text: \"New Zealand\", value: \"NZ\" },\n        { text: \"Nicaragua\", value: \"NI\" },\n        { text: \"Niger\", value: \"NE\" },\n        { text: \"Nigeria\", value: \"NG\" },\n        { text: \"Niue\", value: \"NU\" },\n        { text: \"Norfolk Island\", value: \"NF\" },\n        { text: \"Northern Mariana Islands\", value: \"MP\" },\n        { text: \"Norway\", value: \"NO\" },\n        { text: \"Oman\", value: \"OM\" },\n        { text: \"Pakistan\", value: \"PK\" },\n        { text: \"Palau\", value: \"PW\" },\n        { text: \"Palestinian Territory, Occupied\", value: \"PS\" },\n        { text: \"Panama\", value: \"PA\" },\n        { text: \"Papua New Guinea\", value: \"PG\" },\n        { text: \"Paraguay\", value: \"PY\" },\n        { text: \"Peru\", value: \"PE\" },\n        { text: \"Philippines\", value: \"PH\" },\n        { text: \"Pitcairn\", value: \"PN\" },\n        { text: \"Poland\", value: \"PL\" },\n        { text: \"Portugal\", value: \"PT\" },\n        { text: \"Puerto Rico\", value: \"PR\" },\n        { text: \"Qatar\", value: \"QA\" },\n        { text: \"Reunion\", value: \"RE\" },\n        { text: \"Romania\", value: \"RO\" },\n        { text: \"Russian Federation\", value: \"RU\" },\n        { text: \"RWANDA\", value: \"RW\" },\n        { text: \"Saint Helena\", value: \"SH\" },\n        { text: \"Saint Kitts and Nevis\", value: \"KN\" },\n        { text: \"Saint Lucia\", value: \"LC\" },\n        { text: \"Saint Pierre and Miquelon\", value: \"PM\" },\n        { text: \"Saint Vincent and the Grenadines\", value: \"VC\" },\n        { text: \"Samoa\", value: \"WS\" },\n        { text: \"San Marino\", value: \"SM\" },\n        { text: \"Sao Tome and Principe\", value: \"ST\" },\n        { text: \"Saudi Arabia\", value: \"SA\" },\n        { text: \"Senegal\", value: \"SN\" },\n        { text: \"Serbia and Montenegro\", value: \"CS\" },\n        { text: \"Seychelles\", value: \"SC\" },\n        { text: \"Sierra Leone\", value: \"SL\" },\n        { text: \"Singapore\", value: \"SG\" },\n        { text: \"Slovakia\", value: \"SK\" },\n        { text: \"Slovenia\", value: \"SI\" },\n        { text: \"Solomon Islands\", value: \"SB\" },\n        { text: \"Somalia\", value: \"SO\" },\n        { text: \"South Africa\", value: \"ZA\" },\n        { text: \"South Georgia and the South Sandwich Islands\", value: \"GS\" },\n        { text: \"Spain\", value: \"ES\" },\n        { text: \"Sri Lanka\", value: \"LK\" },\n        { text: \"Sudan\", value: \"SD\" },\n        { text: \"Suriname\", value: \"SR\" },\n        { text: \"Svalbard and Jan Mayen\", value: \"SJ\" },\n        { text: \"Swaziland\", value: \"SZ\" },\n        { text: \"Sweden\", value: \"SE\" },\n        { text: \"Switzerland\", value: \"CH\" },\n        { text: \"Syrian Arab Republic\", value: \"SY\" },\n        { text: \"Taiwan, Province of China\", value: \"TW\" },\n        { text: \"Tajikistan\", value: \"TJ\" },\n        { text: \"Tanzania, United Republic of\", value: \"TZ\" },\n        { text: \"Thailand\", value: \"TH\" },\n        { text: \"Timor-Leste\", value: \"TL\" },\n        { text: \"Togo\", value: \"TG\" },\n        { text: \"Tokelau\", value: \"TK\" },\n        { text: \"Tonga\", value: \"TO\" },\n        { text: \"Trinidad and Tobago\", value: \"TT\" },\n        { text: \"Tunisia\", value: \"TN\" },\n        { text: \"Turkey\", value: \"TR\" },\n        { text: \"Turkmenistan\", value: \"TM\" },\n        { text: \"Turks and Caicos Islands\", value: \"TC\" },\n        { text: \"Tuvalu\", value: \"TV\" },\n        { text: \"Uganda\", value: \"UG\" },\n        { text: \"Ukraine\", value: \"UA\" },\n        { text: \"United Arab Emirates\", value: \"AE\" },\n        { text: \"United Kingdom\", value: \"GB\" },\n        { text: \"United States\", value: \"US\" },\n        { text: \"United States Minor Outlying Islands\", value: \"UM\" },\n        { text: \"Uruguay\", value: \"UY\" },\n        { text: \"Uzbekistan\", value: \"UZ\" },\n        { text: \"Vanuatu\", value: \"VU\" },\n        { text: \"Venezuela\", value: \"VE\" },\n        { text: \"Viet Nam\", value: \"VN\" },\n        { text: \"Virgin Islands, British\", value: \"VG\" },\n        { text: \"Virgin Islands, U.S.\", value: \"VI\" },\n        { text: \"Wallis and Futuna\", value: \"WF\" },\n        { text: \"Western Sahara\", value: \"EH\" },\n        { text: \"Yemen\", value: \"YE\" },\n        { text: \"Zambia\", value: \"ZM\" },\n        { text: \"Zimbabwe\", value: \"ZW\" },\n      ],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\", \"settings\"]),\n    perPage() {\n      return this.settings.perPage;\n    },\n    searchFiltered() {\n      if (this.search === null) {\n        return this.profiles;\n      } else {\n        var re = new RegExp(this.search, \"i\");\n        return this.profiles.filter((profile) => {\n          return (\n            String(profile.user_id).match(re) ||\n            String(profile.name_first).match(re) ||\n            String(profile.name_last).match(re) ||\n            String(profile.address).match(re) ||\n            String(profile.country).match(re) ||\n            String(profile.city).match(re) ||\n            String(profile.zipcode).match(re) ||\n            String(profile.phone).match(re) ||\n            String(profile.email).match(re) ||\n            String(profile.gender).match(re) ||\n            String(profile.tags).match(re)\n          );\n        });\n      }\n    },\n    paged() {\n      this.total = this.searchFiltered.length;\n      this.from = (this.currentPage - 1) * this.perPage;\n      this.to =\n        this.from + this.perPage > this.total\n          ? this.total\n          : this.from + this.perPage;\n      return this.searchFiltered.slice(this.from, this.to);\n    },\n    genders() {\n      return [\n        { text: this.$t(\"profile.male\"), value: \"Male\" },\n        { text: this.$t(\"profile.female\"), value: \"Female\" },\n        { text: this.$t(\"profile.transgender\"), value: \"Transgender\" },\n        { text: this.$t(\"profile.non-binary\"), value: \"Non Binary\" },\n        { text: this.$t(\"profile.gender-fluid\"), value: \"Gender Fluid\" },\n        { text: this.$t(\"profile.gender-neutral\"), value: \"Gender Neutral\" },\n        { text: this.$t(\"profile.other\"), value: \"Other\" },\n        { text: this.$t(\"profile.neutral\"), value: \"Neutral\" },\n      ];\n    },\n  },\n  methods: {\n    formatDate(date) {\n      return new Date(date).toLocaleString(\n        this.$t(\"date.locale\"),\n        this.dateOptions\n      );\n    },\n    loadProfiles() {\n      this.isLoading = true;\n      httpService\n        .get(\"administration/profiles\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.profiles = res.data;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"profiles.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    editProfile(profile) {\n      this.editorProfile = Object.assign({}, profile);\n      this.editor = true;\n    },\n    saveProfile() {\n      this.editor = false;\n      let profile = Object.assign({}, this.editorProfile);\n      profile.last_updated = new Date();\n      delete profile.id;\n      httpService\n        .post(\"administration/profile/update\", {\n          id: this.editorProfile.id,\n          profile: profile,\n        })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"profiles.save-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadProfiles();\n            this.editor = false;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"profiles.save-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    deleteProfile(id) {\n      httpService\n        .post(\"administration/profile/delete\", { id: id })\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.$notify(\n              \"primary\",\n              this.$t(\"profile.success\"),\n              this.$t(\"profiles.delete-success\"),\n              \"la-user-shield\",\n              { duration: 5000, permanent: false }\n            );\n            this.loadProfiles();\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"profiles.delete-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    cancelProfile() {\n      this.editor = false;\n    },\n    user(user_id) {\n      this.$router.push({\n        name: \"users\",\n        params: { editor: true, id: user_id },\n      });\n    },\n    searchProfile(search) {\n      if (search.length === 0) {\n        this.search = null;\n      } else {\n        this.search = search;\n      }\n    },\n    printProfiles() {\n      document.getElementById(\"profiles\").print();\n    },\n  },\n  beforeMount() {\n    if (this.$route.params.editor && this.$route.params.id !== undefined) {\n      httpService\n        .get(\"administration/profiles\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.profiles = res.data;\n            let profile = this.profiles.find(\n              (profile) => profile.user_id === this.$route.params.id\n            );\n            if (profile) {\n              this.editProfile(profile);\n            }\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"profiles.load-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    } else {\n      this.loadProfiles();\n    }\n    EventBus.$on(\"refresh\", this.loadProfiles);\n    EventBus.$on(\"save\", this.saveProfile);\n    EventBus.$on(\"cancel\", this.cancelProfile);\n    EventBus.$on(\"search\", this.searchProfile);\n    EventBus.$on(\"print\", this.printProfiles);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"refresh\", this.loadProfiles);\n    EventBus.$off(\"save\", this.saveProfile);\n    EventBus.$off(\"cancel\", this.cancelProfile);\n    EventBus.$off(\"search\", this.searchProfile);\n    EventBus.$off(\"print\", this.printProfiles);\n  },\n  watch: {\n    from: function (val) {\n      EventBus.$emit(\"update-from\", val);\n    },\n    to: function (val) {\n      EventBus.$emit(\"update-to\", val);\n    },\n    total: function (val) {\n      EventBus.$emit(\"update-total\", val);\n    },\n    editor: function (val) {\n      EventBus.$emit(\"update-editor\", val);\n    },\n  },\n};\n</script>\n"]}]}