{"remainingRequest":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/invoice.vue?vue&type=style&index=0&id=715d1eb1&scoped=true&lang=css&","dependencies":[{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/src/views/app/user/invoice.vue","mtime":1619374606221},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/ernst/63bce43c-5e51-4bf1-a611-3afdf32ac6f6/VueJS/IPTV-Tools/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubW9kYWwtbGlzdCB7CiAgbWF4LWhlaWdodDogMjAwcHg7Cn0K"},{"version":3,"sources":["invoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA;AACA;AACA","file":"invoice.vue","sourceRoot":"src/views/app/user","sourcesContent":["<template>\n  <erd-row class=\"erd-report m-0 px-0 py-3\">\n    <erd-modal\n      v-show=\"invoiceModal\"\n      @close=\"closeModal\"\n      :title=\"$t('subscriptions.print-invoices')\"\n      class=\"select-none\"\n    >\n      <p class=\"text-one mx-2\">{{ $t(\"subscriptions.select-invoices\") }}</p>\n      <perfect-scrollbar\n        class=\"modal-list\"\n        :options=\"{ wheelPropagation: false }\"\n      >\n        <erd-checkbox\n          v-for=\"(invoice, index) in invoices\"\n          :key=\"`print-${index}-${invoice.id}`\"\n          v-model=\"selected\"\n          :value=\"index\"\n          ># {{ invoice.id }} ({{\n            formatDate(new Date(invoice.invoice_date))\n          }})</erd-checkbox\n        >\n      </perfect-scrollbar>\n      <template v-slot:footer>\n        <erd-button\n          variant=\"primary\"\n          class=\"mr-1\"\n          icon=\"la-print\"\n          @click=\"pagePrint\"\n          >{{ $t(\"general.ok\") }}</erd-button\n        >\n        <erd-button variant=\"danger\" @click=\"closeModal\">{{\n          $t(\"general.cancel\")\n        }}</erd-button>\n      </template>\n    </erd-modal>\n    <erd-spinner v-if=\"isLoading\" size=\"lg\" overlay absolute></erd-spinner>\n    <erd-col\n      flex\n      center\n      v-if=\"invoices.length === 0\"\n      class=\"text-muted select-none\"\n    >\n      <div class=\"text-center\">\n        <h5 class=\"mb-1\">{{ $t(\"subscriptions.no-invoices\") }}</h5>\n        <i class=\"las la-receipt la-4x d-block\"></i>\n      </div>\n    </erd-col>\n    <erd-col\n      flex\n      center\n      v-for=\"(invoice, index) in invoices\"\n      :key=\"`invoice-${index}-${invoice.id}`\"\n    >\n      <erd-report\n        :id=\"`invoice-${invoice.id}`\"\n        :number=\"invoice.id\"\n        :recipient=\"recipient\"\n        :items=\"invoice.items\"\n        :date=\"new Date(invoice.invoice_date)\"\n        :context-items=\"invoiceContext(invoice.id)\"\n      ></erd-report>\n    </erd-col>\n  </erd-row>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { httpService } from \"../../../services/http\";\nimport { EventBus } from \"../../../services/ebus\";\n\nexport default {\n  data() {\n    return {\n      invoiceModal: false,\n      isLoading: false,\n      invoices: [],\n      selected: [],\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentUser\"]),\n    recipient() {\n      let profile = this.currentUser.profile\n        ? this.currentUser.profile\n        : {\n            first_name: \"\",\n            last_name: \"\",\n            address: \"\",\n            zipcode: \"\",\n            city: \"\",\n            country: \"\",\n            email: \"\",\n            phone: \"\",\n          };\n      return [\n        `${profile.name_first} ${profile.name_last}`,\n        `${profile.address} ${profile.zipcode} ${profile.city}, ${profile.country}`,\n      ];\n    },\n  },\n  methods: {\n    showModal() {\n      this.invoiceModal = true;\n    },\n    closeModal() {\n      this.invoiceModal = false;\n    },\n    invoiceContext(id) {\n      return [\n        {\n          text: this.$t(\"subscriptions.print-invoice\"),\n          icon: \"la-print\",\n          onClick: function () {\n            document.getElementById(`invoice-${id}`).print();\n          },\n        },\n      ];\n    },\n    loadInvoices() {\n      httpService\n        .get(\"users/invoices\")\n        .then((res) => {\n          this.isLoading = false;\n          if (res.status === true) {\n            this.invoices = res.data;\n          }\n        })\n        .catch(() => {\n          this.isLoading = false;\n          this.$notify(\n            \"error\",\n            this.$t(\"profile.failed\"),\n            this.$t(\"subscriptions.invoice-error\"),\n            \"la-user-shield\",\n            { duration: 5000, permanent: false }\n          );\n        });\n    },\n    formatDate(date) {\n      return date.toLocaleDateString(this.$t(\"date.locale\"), this.dateOptions);\n    },\n    pagePrint() {\n      this.closeModal();\n      for (var i = 0; i < this.invoices.length; i++) {\n        if (this.selected.includes(i)) {\n          document.getElementById(`invoice-${this.invoices[i].id}`).print();\n        }\n      }\n    },\n    searchInItems(items, search) {\n      let found = false;\n      let re = new RegExp(search, \"i\");\n      items.map((item) => {\n        if (item.description.match(re)) {\n          found = true;\n        }\n      });\n      return found;\n    },\n    searchInvoice(search) {\n      if (search === undefined || search === null || search.length === 0) {\n        this.loadInvoices();\n      } else {\n        httpService\n          .get(\"users/invoices\")\n          .then((res) => {\n            this.isLoading = false;\n            if (res.status === true) {\n              this.invoices = res.data.filter((inv) => {\n                var re = new RegExp(search, \"i\");\n                var foundInTitle = inv.note.match(re);\n                var foundInItems = this.searchInItems(inv.items, search);\n                return foundInTitle || foundInItems;\n              });\n            }\n          })\n          .catch(() => {\n            this.invoices = [];\n          });\n      }\n    },\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.loadInvoices();\n    EventBus.$on(\"print\", this.showModal);\n    EventBus.$on(\"search\", this.searchInvoice);\n  },\n  beforeDestroy() {\n    EventBus.$off(\"print\", this.showModal);\n    EventBus.$off(\"search\", this.searchInvoice);\n  },\n};\n</script>\n\n<style scoped>\n.modal-list {\n  max-height: 200px;\n}\n</style>\n"]}]}